//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.269
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace IPS.DataAcquisition {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataAcquisition.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getVmachineList", ReplyAction="http://tempuri.org/IService/getVmachineListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVmachineList(IPS.DataAcquisition.getVmachineListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getVmachineListResponse EndgetVmachineList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getEquipmentList", ReplyAction="http://tempuri.org/IService/getEquipmentListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetEquipmentList(IPS.DataAcquisition.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getEquipmentListResponse EndgetEquipmentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getSensorList", ReplyAction="http://tempuri.org/IService/getSensorListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetSensorList(IPS.DataAcquisition.getSensorListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getSensorListResponse EndgetSensorList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/uploadSTDB", ReplyAction="http://tempuri.org/IService/uploadSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginuploadSTDB(IPS.DataAcquisition.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.uploadSTDBResponse EnduploadSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/startPeriodTimeUploadSTDB", ReplyAction="http://tempuri.org/IService/startPeriodTimeUploadSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginstartPeriodTimeUploadSTDB(IPS.DataAcquisition.startPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse EndstartPeriodTimeUploadSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/stopPeriodTimeUploadSTDB", ReplyAction="http://tempuri.org/IService/stopPeriodTimeUploadSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginstopPeriodTimeUploadSTDB(IPS.DataAcquisition.stopPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse EndstopPeriodTimeUploadSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getAllVmachineStateList", ReplyAction="http://tempuri.org/IService/getAllVmachineStateListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetAllVmachineStateList(IPS.DataAcquisition.getAllVmachineStateListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getAllVmachineStateListResponse EndgetAllVmachineStateList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getAllStopVmachineStateList", ReplyAction="http://tempuri.org/IService/getAllStopVmachineStateListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetAllStopVmachineStateList(IPS.DataAcquisition.getAllStopVmachineStateListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getAllStopVmachineStateListResponse EndgetAllStopVmachineStateList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getAllStartVmachineStateList", ReplyAction="http://tempuri.org/IService/getAllStartVmachineStateListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetAllStartVmachineStateList(IPS.DataAcquisition.getAllStartVmachineStateListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getAllStartVmachineStateListResponse EndgetAllStartVmachineStateList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/uploadDefOfSTDB", ReplyAction="http://tempuri.org/IService/uploadDefOfSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginuploadDefOfSTDB(IPS.DataAcquisition.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.uploadDefOfSTDBResponse EnduploadDefOfSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/updateVMResult", ReplyAction="http://tempuri.org/IService/updateVMResultResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginupdateVMResult(IPS.DataAcquisition.updateVMResultRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.updateVMResultResponse EndupdateVMResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getModelResult", ReplyAction="http://tempuri.org/IService/getModelResultResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetModelResult(IPS.DataAcquisition.getModelResultRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getModelResultResponse EndgetModelResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getEquipmentByName", ReplyAction="http://tempuri.org/IService/getEquipmentByNameResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetEquipmentByName(IPS.DataAcquisition.getEquipmentByNameRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getEquipmentByNameResponse EndgetEquipmentByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getAllvMachine", ReplyAction="http://tempuri.org/IService/getAllvMachineResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetAllvMachine(IPS.DataAcquisition.getAllvMachineRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getAllvMachineResponse EndgetAllvMachine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getServiceBrokerInfo", ReplyAction="http://tempuri.org/IService/getServiceBrokerInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetServiceBrokerInfo(IPS.DataAcquisition.getServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getServiceBrokerInfoResponse EndgetServiceBrokerInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getProductInfo", ReplyAction="http://tempuri.org/IService/getProductInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductInfo(IPS.DataAcquisition.getProductInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getProductInfoResponse EndgetProductInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getProductInfo1", ReplyAction="http://tempuri.org/IService/getProductInfo1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductInfo1(IPS.DataAcquisition.getProductInfo1Request request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getProductInfo1Response EndgetProductInfo1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getProductionHistoInfo", ReplyAction="http://tempuri.org/IService/getProductionHistoInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductionHistoInfo(IPS.DataAcquisition.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getProductionHistoInfoResponse EndgetProductionHistoInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getProductBasicInfo", ReplyAction="http://tempuri.org/IService/getProductBasicInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductBasicInfo(IPS.DataAcquisition.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getProductBasicInfoResponse EndgetProductBasicInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/FanoutDCP", ReplyAction="http://tempuri.org/IService/FanoutDCPResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFanoutDCP(IPS.DataAcquisition.FanoutDCPRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.FanoutDCPResponse EndFanoutDCP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getDCR", ReplyAction="http://tempuri.org/IService/getDCRResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetDCR(IPS.DataAcquisition.getDCRRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getDCRResponse EndgetDCR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/InsertDCR", ReplyAction="http://tempuri.org/IService/InsertDCRResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginInsertDCR(IPS.DataAcquisition.InsertDCRRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.InsertDCRResponse EndInsertDCR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/getDCPInfo", ReplyAction="http://tempuri.org/IService/getDCPInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetDCPInfo(IPS.DataAcquisition.getDCPInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.DataAcquisition.getDCPInfoResponse EndgetDCPInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="UploadFile")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadFile(IPS.DataAcquisition.FileUploadMessage request, System.AsyncCallback callback, object asyncState);
        
        void EndUploadFile(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineListRequest {
        
        public getVmachineListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getVmachineListResult;
        
        public getVmachineListResponse() {
        }
        
        public getVmachineListResponse(string[] getVmachineListResult) {
            this.getVmachineListResult = getVmachineListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        public getEquipmentListRequest() {
        }
        
        public getEquipmentListRequest(string vMachineName) {
            this.vMachineName = vMachineName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getEquipmentListResult;
        
        public getEquipmentListResponse() {
        }
        
        public getEquipmentListResponse(string[] getEquipmentListResult) {
            this.getEquipmentListResult = getEquipmentListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSensorList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getSensorListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentName;
        
        public getSensorListRequest() {
        }
        
        public getSensorListRequest(string vMachineName, string equipmentName) {
            this.vMachineName = vMachineName;
            this.equipmentName = equipmentName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSensorListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getSensorListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getSensorListResult;
        
        public getSensorListResponse() {
        }
        
        public getSensorListResponse(string[] getSensorListResult) {
            this.getSensorListResult = getSensorListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sensor;
        
        public uploadSTDBRequest() {
        }
        
        public uploadSTDBRequest(string vMachineID, string equipmentID, string sensor) {
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
            this.sensor = sensor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uploadSTDBResult;
        
        public uploadSTDBResponse() {
        }
        
        public uploadSTDBResponse(string uploadSTDBResult) {
            this.uploadSTDBResult = uploadSTDBResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startPeriodTimeUploadSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class startPeriodTimeUploadSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sensor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hour;
        
        public startPeriodTimeUploadSTDBRequest() {
        }
        
        public startPeriodTimeUploadSTDBRequest(string vMachineID, string equipmentID, string sensor, string hour) {
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
            this.sensor = sensor;
            this.hour = hour;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startPeriodTimeUploadSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class startPeriodTimeUploadSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string startPeriodTimeUploadSTDBResult;
        
        public startPeriodTimeUploadSTDBResponse() {
        }
        
        public startPeriodTimeUploadSTDBResponse(string startPeriodTimeUploadSTDBResult) {
            this.startPeriodTimeUploadSTDBResult = startPeriodTimeUploadSTDBResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="stopPeriodTimeUploadSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class stopPeriodTimeUploadSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sensor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hour;
        
        public stopPeriodTimeUploadSTDBRequest() {
        }
        
        public stopPeriodTimeUploadSTDBRequest(string vMachineID, string equipmentID, string sensor, string hour) {
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
            this.sensor = sensor;
            this.hour = hour;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="stopPeriodTimeUploadSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class stopPeriodTimeUploadSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stopPeriodTimeUploadSTDBResult;
        
        public stopPeriodTimeUploadSTDBResponse() {
        }
        
        public stopPeriodTimeUploadSTDBResponse(string stopPeriodTimeUploadSTDBResult) {
            this.stopPeriodTimeUploadSTDBResult = stopPeriodTimeUploadSTDBResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class vMachineState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cNC_TypeField;
        
        private string equipmentNameField;
        
        private string hourField;
        
        private string sensorField;
        
        private string stateField;
        
        private string vMachineNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CNC_Type {
            get {
                return this.cNC_TypeField;
            }
            set {
                this.cNC_TypeField = value;
                this.RaisePropertyChanged("CNC_Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string equipmentName {
            get {
                return this.equipmentNameField;
            }
            set {
                this.equipmentNameField = value;
                this.RaisePropertyChanged("equipmentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
                this.RaisePropertyChanged("hour");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
                this.RaisePropertyChanged("sensor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("state");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string vMachineName {
            get {
                return this.vMachineNameField;
            }
            set {
                this.vMachineNameField = value;
                this.RaisePropertyChanged("vMachineName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class DCPinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string createTimeField;
        
        private string dCPStatusField;
        
        private string dCRStatusField;
        
        private string fileNameField;
        
        private string idField;
        
        private string targetSBIDField;
        
        private string targetSBURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
                this.RaisePropertyChanged("CreateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string DCPStatus {
            get {
                return this.dCPStatusField;
            }
            set {
                this.dCPStatusField = value;
                this.RaisePropertyChanged("DCPStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string DCRStatus {
            get {
                return this.dCRStatusField;
            }
            set {
                this.dCRStatusField = value;
                this.RaisePropertyChanged("DCRStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string TargetSBID {
            get {
                return this.targetSBIDField;
            }
            set {
                this.targetSBIDField = value;
                this.RaisePropertyChanged("TargetSBID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string TargetSBURL {
            get {
                return this.targetSBURLField;
            }
            set {
                this.targetSBURLField = value;
                this.RaisePropertyChanged("TargetSBURL");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class DCPInfoClass : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DCPinfo[] dCPinfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public DCPinfo[] DCPinfoList {
            get {
                return this.dCPinfoListField;
            }
            set {
                this.dCPinfoListField = value;
                this.RaisePropertyChanged("DCPinfoList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class YItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string blockField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
                this.RaisePropertyChanged("Block");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class XItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string nameField;
        
        private string positionField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class CNCInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class vMachineInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CNCInfo[] cNCListField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public CNCInfo[] CNCList {
            get {
                return this.cNCListField;
            }
            set {
                this.cNCListField = value;
                this.RaisePropertyChanged("CNCList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class ServiceBrokerInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string uRLField;
        
        private vMachineInfo[] vMachineListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
                this.RaisePropertyChanged("URL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        public vMachineInfo[] vMachineList {
            get {
                return this.vMachineListField;
            }
            set {
                this.vMachineListField = value;
                this.RaisePropertyChanged("vMachineList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class DADCPInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string collectionMethodField;
        
        private string conjectureTypeField;
        
        private string endTimeField;
        
        private string factoryNameField;
        
        private ServiceBrokerInfo serviceBrokerInformationField;
        
        private string startTimeField;
        
        private string workPieceNameField;
        
        private string workPieceTypeField;
        
        private XItem[] x_DataField;
        
        private YItem[] y_DataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CollectionMethod {
            get {
                return this.collectionMethodField;
            }
            set {
                this.collectionMethodField = value;
                this.RaisePropertyChanged("CollectionMethod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ConjectureType {
            get {
                return this.conjectureTypeField;
            }
            set {
                this.conjectureTypeField = value;
                this.RaisePropertyChanged("ConjectureType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
                this.RaisePropertyChanged("EndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string FactoryName {
            get {
                return this.factoryNameField;
            }
            set {
                this.factoryNameField = value;
                this.RaisePropertyChanged("FactoryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public ServiceBrokerInfo ServiceBrokerInformation {
            get {
                return this.serviceBrokerInformationField;
            }
            set {
                this.serviceBrokerInformationField = value;
                this.RaisePropertyChanged("ServiceBrokerInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string WorkPieceName {
            get {
                return this.workPieceNameField;
            }
            set {
                this.workPieceNameField = value;
                this.RaisePropertyChanged("WorkPieceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string WorkPieceType {
            get {
                return this.workPieceTypeField;
            }
            set {
                this.workPieceTypeField = value;
                this.RaisePropertyChanged("WorkPieceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=8)]
        public XItem[] X_Data {
            get {
                return this.x_DataField;
            }
            set {
                this.x_DataField = value;
                this.RaisePropertyChanged("X_Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=9)]
        public YItem[] Y_Data {
            get {
                return this.y_DataField;
            }
            set {
                this.y_DataField = value;
                this.RaisePropertyChanged("Y_Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Yinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string actionField;
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
                this.RaisePropertyChanged("Action");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Xinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string positionField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class ProductBasicInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Xinfo[] xinfoListField;
        
        private Yinfo[] yinfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public Xinfo[] XinfoList {
            get {
                return this.xinfoListField;
            }
            set {
                this.xinfoListField = value;
                this.RaisePropertyChanged("XinfoList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public Yinfo[] YinfoList {
            get {
                return this.yinfoListField;
            }
            set {
                this.yinfoListField = value;
                this.RaisePropertyChanged("YinfoList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Out_RI : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double[][] outAll_PredictValueListField;
        
        private double[] outRI_ThresholdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdouble", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public double[][] OutAll_PredictValueList {
            get {
                return this.outAll_PredictValueListField;
            }
            set {
                this.outAll_PredictValueListField = value;
                this.RaisePropertyChanged("OutAll_PredictValueList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OutRI_Threshold {
            get {
                return this.outRI_ThresholdField;
            }
            set {
                this.outRI_ThresholdField = value;
                this.RaisePropertyChanged("OutRI_Threshold");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Out_MR : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double[] outAll_MAPEField;
        
        private double[] outAll_MaxErrorField;
        
        private double[][] outAll_PredictValueListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OutAll_MAPE {
            get {
                return this.outAll_MAPEField;
            }
            set {
                this.outAll_MAPEField = value;
                this.RaisePropertyChanged("OutAll_MAPE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OutAll_MaxError {
            get {
                return this.outAll_MaxErrorField;
            }
            set {
                this.outAll_MaxErrorField = value;
                this.RaisePropertyChanged("OutAll_MaxError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdouble", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public double[][] OutAll_PredictValueList {
            get {
                return this.outAll_PredictValueListField;
            }
            set {
                this.outAll_PredictValueListField = value;
                this.RaisePropertyChanged("OutAll_PredictValueList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Out_GSI : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double[] oUTGSI_ThresholdField;
        
        private double[][] outAll_PredictValueListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OUTGSI_Threshold {
            get {
                return this.oUTGSI_ThresholdField;
            }
            set {
                this.oUTGSI_ThresholdField = value;
                this.RaisePropertyChanged("OUTGSI_Threshold");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdouble", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public double[][] OutAll_PredictValueList {
            get {
                return this.outAll_PredictValueListField;
            }
            set {
                this.outAll_PredictValueListField = value;
                this.RaisePropertyChanged("OutAll_PredictValueList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class Out_BPNN : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double[] outAll_MAPEField;
        
        private double[] outAll_MaxErrorField;
        
        private double[][] outAll_PredictValueListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OutAll_MAPE {
            get {
                return this.outAll_MAPEField;
            }
            set {
                this.outAll_MAPEField = value;
                this.RaisePropertyChanged("OutAll_MAPE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] OutAll_MaxError {
            get {
                return this.outAll_MaxErrorField;
            }
            set {
                this.outAll_MaxErrorField = value;
                this.RaisePropertyChanged("OutAll_MaxError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdouble", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public double[][] OutAll_PredictValueList {
            get {
                return this.outAll_PredictValueListField;
            }
            set {
                this.outAll_PredictValueListField = value;
                this.RaisePropertyChanged("OutAll_PredictValueList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
    public partial class ModelPredictiveValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Out_BPNN bpnnValueField;
        
        private int contentsNumberField;
        
        private bool contentsNumberFieldSpecified;
        
        private System.DateTime[] contextsDatetimeField;
        
        private double[] contextsIdField;
        
        private Out_GSI gsiValueField;
        
        private double[] metrologyVlaueField;
        
        private Out_MR mrValueField;
        
        private Out_RI riValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public Out_BPNN bpnnValue {
            get {
                return this.bpnnValueField;
            }
            set {
                this.bpnnValueField = value;
                this.RaisePropertyChanged("bpnnValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int contentsNumber {
            get {
                return this.contentsNumberField;
            }
            set {
                this.contentsNumberField = value;
                this.RaisePropertyChanged("contentsNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contentsNumberSpecified {
            get {
                return this.contentsNumberFieldSpecified;
            }
            set {
                this.contentsNumberFieldSpecified = value;
                this.RaisePropertyChanged("contentsNumberSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public System.DateTime[] contextsDatetime {
            get {
                return this.contextsDatetimeField;
            }
            set {
                this.contextsDatetimeField = value;
                this.RaisePropertyChanged("contextsDatetime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] contextsId {
            get {
                return this.contextsIdField;
            }
            set {
                this.contextsIdField = value;
                this.RaisePropertyChanged("contextsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public Out_GSI gsiValue {
            get {
                return this.gsiValueField;
            }
            set {
                this.gsiValueField = value;
                this.RaisePropertyChanged("gsiValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] metrologyVlaue {
            get {
                return this.metrologyVlaueField;
            }
            set {
                this.metrologyVlaueField = value;
                this.RaisePropertyChanged("metrologyVlaue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public Out_MR mrValue {
            get {
                return this.mrValueField;
            }
            set {
                this.mrValueField = value;
                this.RaisePropertyChanged("mrValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public Out_RI riValue {
            get {
                return this.riValueField;
            }
            set {
                this.riValueField = value;
                this.RaisePropertyChanged("riValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllVmachineStateList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllVmachineStateListRequest {
        
        public getAllVmachineStateListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllVmachineStateListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllVmachineStateListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
        public vMachineState[] getAllVmachineStateListResult;
        
        public getAllVmachineStateListResponse() {
        }
        
        public getAllVmachineStateListResponse(vMachineState[] getAllVmachineStateListResult) {
            this.getAllVmachineStateListResult = getAllVmachineStateListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllStopVmachineStateList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllStopVmachineStateListRequest {
        
        public getAllStopVmachineStateListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllStopVmachineStateListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllStopVmachineStateListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
        public vMachineState[] getAllStopVmachineStateListResult;
        
        public getAllStopVmachineStateListResponse() {
        }
        
        public getAllStopVmachineStateListResponse(vMachineState[] getAllStopVmachineStateListResult) {
            this.getAllStopVmachineStateListResult = getAllStopVmachineStateListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllStartVmachineStateList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllStartVmachineStateListRequest {
        
        public getAllStartVmachineStateListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllStartVmachineStateListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllStartVmachineStateListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataAquactionServices")]
        public vMachineState[] getAllStartVmachineStateListResult;
        
        public getAllStartVmachineStateListResponse() {
        }
        
        public getAllStartVmachineStateListResponse(vMachineState[] getAllStartVmachineStateListResult) {
            this.getAllStartVmachineStateListResult = getAllStartVmachineStateListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadDefOfSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadDefOfSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.ArrayOfXElement ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        public uploadDefOfSTDBRequest() {
        }
        
        public uploadDefOfSTDBRequest(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.ds = ds;
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadDefOfSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadDefOfSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool uploadDefOfSTDBResult;
        
        public uploadDefOfSTDBResponse() {
        }
        
        public uploadDefOfSTDBResponse(bool uploadDefOfSTDBResult) {
            this.uploadDefOfSTDBResult = uploadDefOfSTDBResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateVMResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateVMResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.ArrayOfXElement ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        public updateVMResultRequest() {
        }
        
        public updateVMResultRequest(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.ds = ds;
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateVMResultResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateVMResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateVMResultResult;
        
        public updateVMResultResponse() {
        }
        
        public updateVMResultResponse(string updateVMResultResult) {
            this.updateVMResultResult = updateVMResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getModelResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getModelResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phase;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipment;
        
        public getModelResultRequest() {
        }
        
        public getModelResultRequest(System.DateTime startDate, System.DateTime endDate, string phase, string vMachineName, string equipment) {
            this.startDate = startDate;
            this.endDate = endDate;
            this.phase = phase;
            this.vMachineName = vMachineName;
            this.equipment = equipment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getModelResultResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getModelResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.ModelPredictiveValue getModelResultResult;
        
        public getModelResultResponse() {
        }
        
        public getModelResultResponse(IPS.DataAcquisition.ModelPredictiveValue getModelResultResult) {
            this.getModelResultResult = getModelResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentByName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        public getEquipmentByNameRequest() {
        }
        
        public getEquipmentByNameRequest(string vMachineName) {
            this.vMachineName = vMachineName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentByNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getEquipmentByNameResult;
        
        public getEquipmentByNameResponse() {
        }
        
        public getEquipmentByNameResponse(string[] getEquipmentByNameResult) {
            this.getEquipmentByNameResult = getEquipmentByNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllvMachine", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllvMachineRequest {
        
        public getAllvMachineRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllvMachineResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllvMachineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getAllvMachineResult;
        
        public getAllvMachineResponse() {
        }
        
        public getAllvMachineResponse(string[] getAllvMachineResult) {
            this.getAllvMachineResult = getAllvMachineResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceBrokerInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getServiceBrokerInfoRequest {
        
        public getServiceBrokerInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceBrokerInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getServiceBrokerInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getServiceBrokerInfoResult;
        
        public getServiceBrokerInfoResponse() {
        }
        
        public getServiceBrokerInfoResponse(string[][] getServiceBrokerInfoResult) {
            this.getServiceBrokerInfoResult = getServiceBrokerInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strURL;
        
        public getProductInfoRequest() {
        }
        
        public getProductInfoRequest(string strURL) {
            this.strURL = strURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getProductInfoResult;
        
        public getProductInfoResponse() {
        }
        
        public getProductInfoResponse(string[][] getProductInfoResult) {
            this.getProductInfoResult = getProductInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfo1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfo1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strURL;
        
        public getProductInfo1Request() {
        }
        
        public getProductInfo1Request(string strURL) {
            this.strURL = strURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfo1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfo1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getProductInfo1Result;
        
        public getProductInfo1Response() {
        }
        
        public getProductInfo1Response(string getProductInfo1Result) {
            this.getProductInfo1Result = getProductInfo1Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductionHistoInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductionHistoInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strURL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strProductType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strProductName;
        
        public getProductionHistoInfoRequest() {
        }
        
        public getProductionHistoInfoRequest(string strURL, string strProductType, string strProductName) {
            this.strURL = strURL;
            this.strProductType = strProductType;
            this.strProductName = strProductName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductionHistoInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductionHistoInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getProductionHistoInfoResult;
        
        public getProductionHistoInfoResponse() {
        }
        
        public getProductionHistoInfoResponse(string[][] getProductionHistoInfoResult) {
            this.getProductionHistoInfoResult = getProductionHistoInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductBasicInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductBasicInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strURL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strCNCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strProductType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strProductName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strvMachineID;
        
        public getProductBasicInfoRequest() {
        }
        
        public getProductBasicInfoRequest(string strURL, string strCNCID, string strProductType, string strProductName, string strvMachineID) {
            this.strURL = strURL;
            this.strCNCID = strCNCID;
            this.strProductType = strProductType;
            this.strProductName = strProductName;
            this.strvMachineID = strvMachineID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductBasicInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductBasicInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.ProductBasicInfo getProductBasicInfoResult;
        
        public getProductBasicInfoResponse() {
        }
        
        public getProductBasicInfoResponse(IPS.DataAcquisition.ProductBasicInfo getProductBasicInfoResult) {
            this.getProductBasicInfoResult = getProductBasicInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FanoutDCP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FanoutDCPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.DADCPInfo DCPInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.ProductBasicInfo PBIInfo;
        
        public FanoutDCPRequest() {
        }
        
        public FanoutDCPRequest(IPS.DataAcquisition.DADCPInfo DCPInfo, IPS.DataAcquisition.ProductBasicInfo PBIInfo) {
            this.DCPInfo = DCPInfo;
            this.PBIInfo = PBIInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FanoutDCPResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FanoutDCPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool FanoutDCPResult;
        
        public FanoutDCPResponse() {
        }
        
        public FanoutDCPResponse(bool FanoutDCPResult) {
            this.FanoutDCPResult = FanoutDCPResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDCR", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDCRRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DCRXMLString;
        
        public getDCRRequest() {
        }
        
        public getDCRRequest(string DCRXMLString) {
            this.DCRXMLString = DCRXMLString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDCRResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDCRResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getDCRResult;
        
        public getDCRResponse() {
        }
        
        public getDCRResponse(bool getDCRResult) {
            this.getDCRResult = getDCRResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDCR", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertDCRRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DCRXMLString;
        
        public InsertDCRRequest() {
        }
        
        public InsertDCRRequest(string DCRXMLString) {
            this.DCRXMLString = DCRXMLString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDCRResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertDCRResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertDCRResult;
        
        public InsertDCRResponse() {
        }
        
        public InsertDCRResponse(string InsertDCRResult) {
            this.InsertDCRResult = InsertDCRResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDCPInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDCPInfoRequest {
        
        public getDCPInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDCPInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDCPInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.DataAcquisition.DCPInfoClass getDCPInfoResult;
        
        public getDCPInfoResponse() {
        }
        
        public getDCPInfoResponse(IPS.DataAcquisition.DCPInfoClass getDCPInfoResult) {
            this.getDCPInfoResult = getDCPInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] FileData;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(byte[] FileData) {
            this.FileData = FileData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : IPS.DataAcquisition.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVmachineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVmachineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEquipmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEquipmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSensorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSensorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class uploadSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public uploadSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class startPeriodTimeUploadSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public startPeriodTimeUploadSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class stopPeriodTimeUploadSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public stopPeriodTimeUploadSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllVmachineStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllVmachineStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public vMachineState[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((vMachineState[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllStopVmachineStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllStopVmachineStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public vMachineState[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((vMachineState[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllStartVmachineStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllStartVmachineStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public vMachineState[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((vMachineState[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class uploadDefOfSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public uploadDefOfSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateVMResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateVMResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getModelResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getModelResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IPS.DataAcquisition.ModelPredictiveValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IPS.DataAcquisition.ModelPredictiveValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEquipmentByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEquipmentByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllvMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllvMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getServiceBrokerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getServiceBrokerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductInfo1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductInfo1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductionHistoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductionHistoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductBasicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductBasicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IPS.DataAcquisition.ProductBasicInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IPS.DataAcquisition.ProductBasicInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FanoutDCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FanoutDCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDCRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDCRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertDCRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertDCRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDCPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDCPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IPS.DataAcquisition.DCPInfoClass Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IPS.DataAcquisition.DCPInfoClass)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<IPS.DataAcquisition.IService>, IPS.DataAcquisition.IService {
        
        private BeginOperationDelegate onBegingetVmachineListDelegate;
        
        private EndOperationDelegate onEndgetVmachineListDelegate;
        
        private System.Threading.SendOrPostCallback ongetVmachineListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEquipmentListDelegate;
        
        private EndOperationDelegate onEndgetEquipmentListDelegate;
        
        private System.Threading.SendOrPostCallback ongetEquipmentListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSensorListDelegate;
        
        private EndOperationDelegate onEndgetSensorListDelegate;
        
        private System.Threading.SendOrPostCallback ongetSensorListCompletedDelegate;
        
        private BeginOperationDelegate onBeginuploadSTDBDelegate;
        
        private EndOperationDelegate onEnduploadSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onuploadSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginstartPeriodTimeUploadSTDBDelegate;
        
        private EndOperationDelegate onEndstartPeriodTimeUploadSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onstartPeriodTimeUploadSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginstopPeriodTimeUploadSTDBDelegate;
        
        private EndOperationDelegate onEndstopPeriodTimeUploadSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onstopPeriodTimeUploadSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllVmachineStateListDelegate;
        
        private EndOperationDelegate onEndgetAllVmachineStateListDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllVmachineStateListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllStopVmachineStateListDelegate;
        
        private EndOperationDelegate onEndgetAllStopVmachineStateListDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllStopVmachineStateListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllStartVmachineStateListDelegate;
        
        private EndOperationDelegate onEndgetAllStartVmachineStateListDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllStartVmachineStateListCompletedDelegate;
        
        private BeginOperationDelegate onBeginuploadDefOfSTDBDelegate;
        
        private EndOperationDelegate onEnduploadDefOfSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onuploadDefOfSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateVMResultDelegate;
        
        private EndOperationDelegate onEndupdateVMResultDelegate;
        
        private System.Threading.SendOrPostCallback onupdateVMResultCompletedDelegate;
        
        private BeginOperationDelegate onBegingetModelResultDelegate;
        
        private EndOperationDelegate onEndgetModelResultDelegate;
        
        private System.Threading.SendOrPostCallback ongetModelResultCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEquipmentByNameDelegate;
        
        private EndOperationDelegate onEndgetEquipmentByNameDelegate;
        
        private System.Threading.SendOrPostCallback ongetEquipmentByNameCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllvMachineDelegate;
        
        private EndOperationDelegate onEndgetAllvMachineDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllvMachineCompletedDelegate;
        
        private BeginOperationDelegate onBegingetServiceBrokerInfoDelegate;
        
        private EndOperationDelegate onEndgetServiceBrokerInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetServiceBrokerInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductInfoDelegate;
        
        private EndOperationDelegate onEndgetProductInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductInfo1Delegate;
        
        private EndOperationDelegate onEndgetProductInfo1Delegate;
        
        private System.Threading.SendOrPostCallback ongetProductInfo1CompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductionHistoInfoDelegate;
        
        private EndOperationDelegate onEndgetProductionHistoInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductionHistoInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductBasicInfoDelegate;
        
        private EndOperationDelegate onEndgetProductBasicInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductBasicInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginFanoutDCPDelegate;
        
        private EndOperationDelegate onEndFanoutDCPDelegate;
        
        private System.Threading.SendOrPostCallback onFanoutDCPCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDCRDelegate;
        
        private EndOperationDelegate onEndgetDCRDelegate;
        
        private System.Threading.SendOrPostCallback ongetDCRCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDCRDelegate;
        
        private EndOperationDelegate onEndInsertDCRDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDCRCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDCPInfoDelegate;
        
        private EndOperationDelegate onEndgetDCPInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetDCPInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("無法設定 CookieContainer。請確定繫結包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<getVmachineListCompletedEventArgs> getVmachineListCompleted;
        
        public event System.EventHandler<getEquipmentListCompletedEventArgs> getEquipmentListCompleted;
        
        public event System.EventHandler<getSensorListCompletedEventArgs> getSensorListCompleted;
        
        public event System.EventHandler<uploadSTDBCompletedEventArgs> uploadSTDBCompleted;
        
        public event System.EventHandler<startPeriodTimeUploadSTDBCompletedEventArgs> startPeriodTimeUploadSTDBCompleted;
        
        public event System.EventHandler<stopPeriodTimeUploadSTDBCompletedEventArgs> stopPeriodTimeUploadSTDBCompleted;
        
        public event System.EventHandler<getAllVmachineStateListCompletedEventArgs> getAllVmachineStateListCompleted;
        
        public event System.EventHandler<getAllStopVmachineStateListCompletedEventArgs> getAllStopVmachineStateListCompleted;
        
        public event System.EventHandler<getAllStartVmachineStateListCompletedEventArgs> getAllStartVmachineStateListCompleted;
        
        public event System.EventHandler<uploadDefOfSTDBCompletedEventArgs> uploadDefOfSTDBCompleted;
        
        public event System.EventHandler<updateVMResultCompletedEventArgs> updateVMResultCompleted;
        
        public event System.EventHandler<getModelResultCompletedEventArgs> getModelResultCompleted;
        
        public event System.EventHandler<getEquipmentByNameCompletedEventArgs> getEquipmentByNameCompleted;
        
        public event System.EventHandler<getAllvMachineCompletedEventArgs> getAllvMachineCompleted;
        
        public event System.EventHandler<getServiceBrokerInfoCompletedEventArgs> getServiceBrokerInfoCompleted;
        
        public event System.EventHandler<getProductInfoCompletedEventArgs> getProductInfoCompleted;
        
        public event System.EventHandler<getProductInfo1CompletedEventArgs> getProductInfo1Completed;
        
        public event System.EventHandler<getProductionHistoInfoCompletedEventArgs> getProductionHistoInfoCompleted;
        
        public event System.EventHandler<getProductBasicInfoCompletedEventArgs> getProductBasicInfoCompleted;
        
        public event System.EventHandler<FanoutDCPCompletedEventArgs> FanoutDCPCompleted;
        
        public event System.EventHandler<getDCRCompletedEventArgs> getDCRCompleted;
        
        public event System.EventHandler<InsertDCRCompletedEventArgs> InsertDCRCompleted;
        
        public event System.EventHandler<getDCPInfoCompletedEventArgs> getDCPInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetVmachineList(IPS.DataAcquisition.getVmachineListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVmachineList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetVmachineList(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getVmachineListRequest inValue = new IPS.DataAcquisition.getVmachineListRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetVmachineList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getVmachineListResponse IPS.DataAcquisition.IService.EndgetVmachineList(System.IAsyncResult result) {
            return base.Channel.EndgetVmachineList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetVmachineList(System.IAsyncResult result) {
            IPS.DataAcquisition.getVmachineListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetVmachineList(result);
            return retVal.getVmachineListResult;
        }
        
        private System.IAsyncResult OnBegingetVmachineList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetVmachineList(callback, asyncState);
        }
        
        private object[] OnEndgetVmachineList(System.IAsyncResult result) {
            string[] retVal = this.EndgetVmachineList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVmachineListCompleted(object state) {
            if ((this.getVmachineListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVmachineListCompleted(this, new getVmachineListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVmachineListAsync() {
            this.getVmachineListAsync(null);
        }
        
        public void getVmachineListAsync(object userState) {
            if ((this.onBegingetVmachineListDelegate == null)) {
                this.onBegingetVmachineListDelegate = new BeginOperationDelegate(this.OnBegingetVmachineList);
            }
            if ((this.onEndgetVmachineListDelegate == null)) {
                this.onEndgetVmachineListDelegate = new EndOperationDelegate(this.OnEndgetVmachineList);
            }
            if ((this.ongetVmachineListCompletedDelegate == null)) {
                this.ongetVmachineListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVmachineListCompleted);
            }
            base.InvokeAsync(this.onBegingetVmachineListDelegate, null, this.onEndgetVmachineListDelegate, this.ongetVmachineListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetEquipmentList(IPS.DataAcquisition.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEquipmentList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEquipmentList(string vMachineName, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getEquipmentListRequest inValue = new IPS.DataAcquisition.getEquipmentListRequest();
            inValue.vMachineName = vMachineName;
            return ((IPS.DataAcquisition.IService)(this)).BegingetEquipmentList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getEquipmentListResponse IPS.DataAcquisition.IService.EndgetEquipmentList(System.IAsyncResult result) {
            return base.Channel.EndgetEquipmentList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetEquipmentList(System.IAsyncResult result) {
            IPS.DataAcquisition.getEquipmentListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetEquipmentList(result);
            return retVal.getEquipmentListResult;
        }
        
        private System.IAsyncResult OnBegingetEquipmentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineName = ((string)(inValues[0]));
            return this.BegingetEquipmentList(vMachineName, callback, asyncState);
        }
        
        private object[] OnEndgetEquipmentList(System.IAsyncResult result) {
            string[] retVal = this.EndgetEquipmentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEquipmentListCompleted(object state) {
            if ((this.getEquipmentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEquipmentListCompleted(this, new getEquipmentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEquipmentListAsync(string vMachineName) {
            this.getEquipmentListAsync(vMachineName, null);
        }
        
        public void getEquipmentListAsync(string vMachineName, object userState) {
            if ((this.onBegingetEquipmentListDelegate == null)) {
                this.onBegingetEquipmentListDelegate = new BeginOperationDelegate(this.OnBegingetEquipmentList);
            }
            if ((this.onEndgetEquipmentListDelegate == null)) {
                this.onEndgetEquipmentListDelegate = new EndOperationDelegate(this.OnEndgetEquipmentList);
            }
            if ((this.ongetEquipmentListCompletedDelegate == null)) {
                this.ongetEquipmentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEquipmentListCompleted);
            }
            base.InvokeAsync(this.onBegingetEquipmentListDelegate, new object[] {
                        vMachineName}, this.onEndgetEquipmentListDelegate, this.ongetEquipmentListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetSensorList(IPS.DataAcquisition.getSensorListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSensorList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetSensorList(string vMachineName, string equipmentName, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getSensorListRequest inValue = new IPS.DataAcquisition.getSensorListRequest();
            inValue.vMachineName = vMachineName;
            inValue.equipmentName = equipmentName;
            return ((IPS.DataAcquisition.IService)(this)).BegingetSensorList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getSensorListResponse IPS.DataAcquisition.IService.EndgetSensorList(System.IAsyncResult result) {
            return base.Channel.EndgetSensorList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetSensorList(System.IAsyncResult result) {
            IPS.DataAcquisition.getSensorListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetSensorList(result);
            return retVal.getSensorListResult;
        }
        
        private System.IAsyncResult OnBegingetSensorList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineName = ((string)(inValues[0]));
            string equipmentName = ((string)(inValues[1]));
            return this.BegingetSensorList(vMachineName, equipmentName, callback, asyncState);
        }
        
        private object[] OnEndgetSensorList(System.IAsyncResult result) {
            string[] retVal = this.EndgetSensorList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSensorListCompleted(object state) {
            if ((this.getSensorListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSensorListCompleted(this, new getSensorListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSensorListAsync(string vMachineName, string equipmentName) {
            this.getSensorListAsync(vMachineName, equipmentName, null);
        }
        
        public void getSensorListAsync(string vMachineName, string equipmentName, object userState) {
            if ((this.onBegingetSensorListDelegate == null)) {
                this.onBegingetSensorListDelegate = new BeginOperationDelegate(this.OnBegingetSensorList);
            }
            if ((this.onEndgetSensorListDelegate == null)) {
                this.onEndgetSensorListDelegate = new EndOperationDelegate(this.OnEndgetSensorList);
            }
            if ((this.ongetSensorListCompletedDelegate == null)) {
                this.ongetSensorListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSensorListCompleted);
            }
            base.InvokeAsync(this.onBegingetSensorListDelegate, new object[] {
                        vMachineName,
                        equipmentName}, this.onEndgetSensorListDelegate, this.ongetSensorListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginuploadSTDB(IPS.DataAcquisition.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginuploadSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginuploadSTDB(string vMachineID, string equipmentID, string sensor, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.uploadSTDBRequest inValue = new IPS.DataAcquisition.uploadSTDBRequest();
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            inValue.sensor = sensor;
            return ((IPS.DataAcquisition.IService)(this)).BeginuploadSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.uploadSTDBResponse IPS.DataAcquisition.IService.EnduploadSTDB(System.IAsyncResult result) {
            return base.Channel.EnduploadSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EnduploadSTDB(System.IAsyncResult result) {
            IPS.DataAcquisition.uploadSTDBResponse retVal = ((IPS.DataAcquisition.IService)(this)).EnduploadSTDB(result);
            return retVal.uploadSTDBResult;
        }
        
        private System.IAsyncResult OnBeginuploadSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineID = ((string)(inValues[0]));
            string equipmentID = ((string)(inValues[1]));
            string sensor = ((string)(inValues[2]));
            return this.BeginuploadSTDB(vMachineID, equipmentID, sensor, callback, asyncState);
        }
        
        private object[] OnEnduploadSTDB(System.IAsyncResult result) {
            string retVal = this.EnduploadSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnuploadSTDBCompleted(object state) {
            if ((this.uploadSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.uploadSTDBCompleted(this, new uploadSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void uploadSTDBAsync(string vMachineID, string equipmentID, string sensor) {
            this.uploadSTDBAsync(vMachineID, equipmentID, sensor, null);
        }
        
        public void uploadSTDBAsync(string vMachineID, string equipmentID, string sensor, object userState) {
            if ((this.onBeginuploadSTDBDelegate == null)) {
                this.onBeginuploadSTDBDelegate = new BeginOperationDelegate(this.OnBeginuploadSTDB);
            }
            if ((this.onEnduploadSTDBDelegate == null)) {
                this.onEnduploadSTDBDelegate = new EndOperationDelegate(this.OnEnduploadSTDB);
            }
            if ((this.onuploadSTDBCompletedDelegate == null)) {
                this.onuploadSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnuploadSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginuploadSTDBDelegate, new object[] {
                        vMachineID,
                        equipmentID,
                        sensor}, this.onEnduploadSTDBDelegate, this.onuploadSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginstartPeriodTimeUploadSTDB(IPS.DataAcquisition.startPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginstartPeriodTimeUploadSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginstartPeriodTimeUploadSTDB(string vMachineID, string equipmentID, string sensor, string hour, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.startPeriodTimeUploadSTDBRequest inValue = new IPS.DataAcquisition.startPeriodTimeUploadSTDBRequest();
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            inValue.sensor = sensor;
            inValue.hour = hour;
            return ((IPS.DataAcquisition.IService)(this)).BeginstartPeriodTimeUploadSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse IPS.DataAcquisition.IService.EndstartPeriodTimeUploadSTDB(System.IAsyncResult result) {
            return base.Channel.EndstartPeriodTimeUploadSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndstartPeriodTimeUploadSTDB(System.IAsyncResult result) {
            IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndstartPeriodTimeUploadSTDB(result);
            return retVal.startPeriodTimeUploadSTDBResult;
        }
        
        private System.IAsyncResult OnBeginstartPeriodTimeUploadSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineID = ((string)(inValues[0]));
            string equipmentID = ((string)(inValues[1]));
            string sensor = ((string)(inValues[2]));
            string hour = ((string)(inValues[3]));
            return this.BeginstartPeriodTimeUploadSTDB(vMachineID, equipmentID, sensor, hour, callback, asyncState);
        }
        
        private object[] OnEndstartPeriodTimeUploadSTDB(System.IAsyncResult result) {
            string retVal = this.EndstartPeriodTimeUploadSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnstartPeriodTimeUploadSTDBCompleted(object state) {
            if ((this.startPeriodTimeUploadSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.startPeriodTimeUploadSTDBCompleted(this, new startPeriodTimeUploadSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void startPeriodTimeUploadSTDBAsync(string vMachineID, string equipmentID, string sensor, string hour) {
            this.startPeriodTimeUploadSTDBAsync(vMachineID, equipmentID, sensor, hour, null);
        }
        
        public void startPeriodTimeUploadSTDBAsync(string vMachineID, string equipmentID, string sensor, string hour, object userState) {
            if ((this.onBeginstartPeriodTimeUploadSTDBDelegate == null)) {
                this.onBeginstartPeriodTimeUploadSTDBDelegate = new BeginOperationDelegate(this.OnBeginstartPeriodTimeUploadSTDB);
            }
            if ((this.onEndstartPeriodTimeUploadSTDBDelegate == null)) {
                this.onEndstartPeriodTimeUploadSTDBDelegate = new EndOperationDelegate(this.OnEndstartPeriodTimeUploadSTDB);
            }
            if ((this.onstartPeriodTimeUploadSTDBCompletedDelegate == null)) {
                this.onstartPeriodTimeUploadSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnstartPeriodTimeUploadSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginstartPeriodTimeUploadSTDBDelegate, new object[] {
                        vMachineID,
                        equipmentID,
                        sensor,
                        hour}, this.onEndstartPeriodTimeUploadSTDBDelegate, this.onstartPeriodTimeUploadSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginstopPeriodTimeUploadSTDB(IPS.DataAcquisition.stopPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginstopPeriodTimeUploadSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginstopPeriodTimeUploadSTDB(string vMachineID, string equipmentID, string sensor, string hour, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.stopPeriodTimeUploadSTDBRequest inValue = new IPS.DataAcquisition.stopPeriodTimeUploadSTDBRequest();
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            inValue.sensor = sensor;
            inValue.hour = hour;
            return ((IPS.DataAcquisition.IService)(this)).BeginstopPeriodTimeUploadSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse IPS.DataAcquisition.IService.EndstopPeriodTimeUploadSTDB(System.IAsyncResult result) {
            return base.Channel.EndstopPeriodTimeUploadSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndstopPeriodTimeUploadSTDB(System.IAsyncResult result) {
            IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndstopPeriodTimeUploadSTDB(result);
            return retVal.stopPeriodTimeUploadSTDBResult;
        }
        
        private System.IAsyncResult OnBeginstopPeriodTimeUploadSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineID = ((string)(inValues[0]));
            string equipmentID = ((string)(inValues[1]));
            string sensor = ((string)(inValues[2]));
            string hour = ((string)(inValues[3]));
            return this.BeginstopPeriodTimeUploadSTDB(vMachineID, equipmentID, sensor, hour, callback, asyncState);
        }
        
        private object[] OnEndstopPeriodTimeUploadSTDB(System.IAsyncResult result) {
            string retVal = this.EndstopPeriodTimeUploadSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnstopPeriodTimeUploadSTDBCompleted(object state) {
            if ((this.stopPeriodTimeUploadSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.stopPeriodTimeUploadSTDBCompleted(this, new stopPeriodTimeUploadSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void stopPeriodTimeUploadSTDBAsync(string vMachineID, string equipmentID, string sensor, string hour) {
            this.stopPeriodTimeUploadSTDBAsync(vMachineID, equipmentID, sensor, hour, null);
        }
        
        public void stopPeriodTimeUploadSTDBAsync(string vMachineID, string equipmentID, string sensor, string hour, object userState) {
            if ((this.onBeginstopPeriodTimeUploadSTDBDelegate == null)) {
                this.onBeginstopPeriodTimeUploadSTDBDelegate = new BeginOperationDelegate(this.OnBeginstopPeriodTimeUploadSTDB);
            }
            if ((this.onEndstopPeriodTimeUploadSTDBDelegate == null)) {
                this.onEndstopPeriodTimeUploadSTDBDelegate = new EndOperationDelegate(this.OnEndstopPeriodTimeUploadSTDB);
            }
            if ((this.onstopPeriodTimeUploadSTDBCompletedDelegate == null)) {
                this.onstopPeriodTimeUploadSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnstopPeriodTimeUploadSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginstopPeriodTimeUploadSTDBDelegate, new object[] {
                        vMachineID,
                        equipmentID,
                        sensor,
                        hour}, this.onEndstopPeriodTimeUploadSTDBDelegate, this.onstopPeriodTimeUploadSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetAllVmachineStateList(IPS.DataAcquisition.getAllVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllVmachineStateList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAllVmachineStateList(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getAllVmachineStateListRequest inValue = new IPS.DataAcquisition.getAllVmachineStateListRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetAllVmachineStateList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getAllVmachineStateListResponse IPS.DataAcquisition.IService.EndgetAllVmachineStateList(System.IAsyncResult result) {
            return base.Channel.EndgetAllVmachineStateList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private vMachineState[] EndgetAllVmachineStateList(System.IAsyncResult result) {
            IPS.DataAcquisition.getAllVmachineStateListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetAllVmachineStateList(result);
            return retVal.getAllVmachineStateListResult;
        }
        
        private System.IAsyncResult OnBegingetAllVmachineStateList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllVmachineStateList(callback, asyncState);
        }
        
        private object[] OnEndgetAllVmachineStateList(System.IAsyncResult result) {
            vMachineState[] retVal = this.EndgetAllVmachineStateList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllVmachineStateListCompleted(object state) {
            if ((this.getAllVmachineStateListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllVmachineStateListCompleted(this, new getAllVmachineStateListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllVmachineStateListAsync() {
            this.getAllVmachineStateListAsync(null);
        }
        
        public void getAllVmachineStateListAsync(object userState) {
            if ((this.onBegingetAllVmachineStateListDelegate == null)) {
                this.onBegingetAllVmachineStateListDelegate = new BeginOperationDelegate(this.OnBegingetAllVmachineStateList);
            }
            if ((this.onEndgetAllVmachineStateListDelegate == null)) {
                this.onEndgetAllVmachineStateListDelegate = new EndOperationDelegate(this.OnEndgetAllVmachineStateList);
            }
            if ((this.ongetAllVmachineStateListCompletedDelegate == null)) {
                this.ongetAllVmachineStateListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllVmachineStateListCompleted);
            }
            base.InvokeAsync(this.onBegingetAllVmachineStateListDelegate, null, this.onEndgetAllVmachineStateListDelegate, this.ongetAllVmachineStateListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetAllStopVmachineStateList(IPS.DataAcquisition.getAllStopVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllStopVmachineStateList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAllStopVmachineStateList(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getAllStopVmachineStateListRequest inValue = new IPS.DataAcquisition.getAllStopVmachineStateListRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetAllStopVmachineStateList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getAllStopVmachineStateListResponse IPS.DataAcquisition.IService.EndgetAllStopVmachineStateList(System.IAsyncResult result) {
            return base.Channel.EndgetAllStopVmachineStateList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private vMachineState[] EndgetAllStopVmachineStateList(System.IAsyncResult result) {
            IPS.DataAcquisition.getAllStopVmachineStateListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetAllStopVmachineStateList(result);
            return retVal.getAllStopVmachineStateListResult;
        }
        
        private System.IAsyncResult OnBegingetAllStopVmachineStateList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllStopVmachineStateList(callback, asyncState);
        }
        
        private object[] OnEndgetAllStopVmachineStateList(System.IAsyncResult result) {
            vMachineState[] retVal = this.EndgetAllStopVmachineStateList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllStopVmachineStateListCompleted(object state) {
            if ((this.getAllStopVmachineStateListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllStopVmachineStateListCompleted(this, new getAllStopVmachineStateListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllStopVmachineStateListAsync() {
            this.getAllStopVmachineStateListAsync(null);
        }
        
        public void getAllStopVmachineStateListAsync(object userState) {
            if ((this.onBegingetAllStopVmachineStateListDelegate == null)) {
                this.onBegingetAllStopVmachineStateListDelegate = new BeginOperationDelegate(this.OnBegingetAllStopVmachineStateList);
            }
            if ((this.onEndgetAllStopVmachineStateListDelegate == null)) {
                this.onEndgetAllStopVmachineStateListDelegate = new EndOperationDelegate(this.OnEndgetAllStopVmachineStateList);
            }
            if ((this.ongetAllStopVmachineStateListCompletedDelegate == null)) {
                this.ongetAllStopVmachineStateListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllStopVmachineStateListCompleted);
            }
            base.InvokeAsync(this.onBegingetAllStopVmachineStateListDelegate, null, this.onEndgetAllStopVmachineStateListDelegate, this.ongetAllStopVmachineStateListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetAllStartVmachineStateList(IPS.DataAcquisition.getAllStartVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllStartVmachineStateList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAllStartVmachineStateList(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getAllStartVmachineStateListRequest inValue = new IPS.DataAcquisition.getAllStartVmachineStateListRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetAllStartVmachineStateList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getAllStartVmachineStateListResponse IPS.DataAcquisition.IService.EndgetAllStartVmachineStateList(System.IAsyncResult result) {
            return base.Channel.EndgetAllStartVmachineStateList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private vMachineState[] EndgetAllStartVmachineStateList(System.IAsyncResult result) {
            IPS.DataAcquisition.getAllStartVmachineStateListResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetAllStartVmachineStateList(result);
            return retVal.getAllStartVmachineStateListResult;
        }
        
        private System.IAsyncResult OnBegingetAllStartVmachineStateList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllStartVmachineStateList(callback, asyncState);
        }
        
        private object[] OnEndgetAllStartVmachineStateList(System.IAsyncResult result) {
            vMachineState[] retVal = this.EndgetAllStartVmachineStateList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllStartVmachineStateListCompleted(object state) {
            if ((this.getAllStartVmachineStateListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllStartVmachineStateListCompleted(this, new getAllStartVmachineStateListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllStartVmachineStateListAsync() {
            this.getAllStartVmachineStateListAsync(null);
        }
        
        public void getAllStartVmachineStateListAsync(object userState) {
            if ((this.onBegingetAllStartVmachineStateListDelegate == null)) {
                this.onBegingetAllStartVmachineStateListDelegate = new BeginOperationDelegate(this.OnBegingetAllStartVmachineStateList);
            }
            if ((this.onEndgetAllStartVmachineStateListDelegate == null)) {
                this.onEndgetAllStartVmachineStateListDelegate = new EndOperationDelegate(this.OnEndgetAllStartVmachineStateList);
            }
            if ((this.ongetAllStartVmachineStateListCompletedDelegate == null)) {
                this.ongetAllStartVmachineStateListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllStartVmachineStateListCompleted);
            }
            base.InvokeAsync(this.onBegingetAllStartVmachineStateListDelegate, null, this.onEndgetAllStartVmachineStateListDelegate, this.ongetAllStartVmachineStateListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginuploadDefOfSTDB(IPS.DataAcquisition.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginuploadDefOfSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginuploadDefOfSTDB(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.uploadDefOfSTDBRequest inValue = new IPS.DataAcquisition.uploadDefOfSTDBRequest();
            inValue.ds = ds;
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            return ((IPS.DataAcquisition.IService)(this)).BeginuploadDefOfSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.uploadDefOfSTDBResponse IPS.DataAcquisition.IService.EnduploadDefOfSTDB(System.IAsyncResult result) {
            return base.Channel.EnduploadDefOfSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EnduploadDefOfSTDB(System.IAsyncResult result) {
            IPS.DataAcquisition.uploadDefOfSTDBResponse retVal = ((IPS.DataAcquisition.IService)(this)).EnduploadDefOfSTDB(result);
            return retVal.uploadDefOfSTDBResult;
        }
        
        private System.IAsyncResult OnBeginuploadDefOfSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.ArrayOfXElement ds = ((IPS.DataAcquisition.ArrayOfXElement)(inValues[0]));
            string vMachineID = ((string)(inValues[1]));
            string equipmentID = ((string)(inValues[2]));
            return this.BeginuploadDefOfSTDB(ds, vMachineID, equipmentID, callback, asyncState);
        }
        
        private object[] OnEnduploadDefOfSTDB(System.IAsyncResult result) {
            bool retVal = this.EnduploadDefOfSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnuploadDefOfSTDBCompleted(object state) {
            if ((this.uploadDefOfSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.uploadDefOfSTDBCompleted(this, new uploadDefOfSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void uploadDefOfSTDBAsync(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.uploadDefOfSTDBAsync(ds, vMachineID, equipmentID, null);
        }
        
        public void uploadDefOfSTDBAsync(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID, object userState) {
            if ((this.onBeginuploadDefOfSTDBDelegate == null)) {
                this.onBeginuploadDefOfSTDBDelegate = new BeginOperationDelegate(this.OnBeginuploadDefOfSTDB);
            }
            if ((this.onEnduploadDefOfSTDBDelegate == null)) {
                this.onEnduploadDefOfSTDBDelegate = new EndOperationDelegate(this.OnEnduploadDefOfSTDB);
            }
            if ((this.onuploadDefOfSTDBCompletedDelegate == null)) {
                this.onuploadDefOfSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnuploadDefOfSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginuploadDefOfSTDBDelegate, new object[] {
                        ds,
                        vMachineID,
                        equipmentID}, this.onEnduploadDefOfSTDBDelegate, this.onuploadDefOfSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginupdateVMResult(IPS.DataAcquisition.updateVMResultRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateVMResult(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginupdateVMResult(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.updateVMResultRequest inValue = new IPS.DataAcquisition.updateVMResultRequest();
            inValue.ds = ds;
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            return ((IPS.DataAcquisition.IService)(this)).BeginupdateVMResult(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.updateVMResultResponse IPS.DataAcquisition.IService.EndupdateVMResult(System.IAsyncResult result) {
            return base.Channel.EndupdateVMResult(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndupdateVMResult(System.IAsyncResult result) {
            IPS.DataAcquisition.updateVMResultResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndupdateVMResult(result);
            return retVal.updateVMResultResult;
        }
        
        private System.IAsyncResult OnBeginupdateVMResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.ArrayOfXElement ds = ((IPS.DataAcquisition.ArrayOfXElement)(inValues[0]));
            string vMachineID = ((string)(inValues[1]));
            string equipmentID = ((string)(inValues[2]));
            return this.BeginupdateVMResult(ds, vMachineID, equipmentID, callback, asyncState);
        }
        
        private object[] OnEndupdateVMResult(System.IAsyncResult result) {
            string retVal = this.EndupdateVMResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateVMResultCompleted(object state) {
            if ((this.updateVMResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateVMResultCompleted(this, new updateVMResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateVMResultAsync(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.updateVMResultAsync(ds, vMachineID, equipmentID, null);
        }
        
        public void updateVMResultAsync(IPS.DataAcquisition.ArrayOfXElement ds, string vMachineID, string equipmentID, object userState) {
            if ((this.onBeginupdateVMResultDelegate == null)) {
                this.onBeginupdateVMResultDelegate = new BeginOperationDelegate(this.OnBeginupdateVMResult);
            }
            if ((this.onEndupdateVMResultDelegate == null)) {
                this.onEndupdateVMResultDelegate = new EndOperationDelegate(this.OnEndupdateVMResult);
            }
            if ((this.onupdateVMResultCompletedDelegate == null)) {
                this.onupdateVMResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateVMResultCompleted);
            }
            base.InvokeAsync(this.onBeginupdateVMResultDelegate, new object[] {
                        ds,
                        vMachineID,
                        equipmentID}, this.onEndupdateVMResultDelegate, this.onupdateVMResultCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetModelResult(IPS.DataAcquisition.getModelResultRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetModelResult(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetModelResult(System.DateTime startDate, System.DateTime endDate, string phase, string vMachineName, string equipment, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getModelResultRequest inValue = new IPS.DataAcquisition.getModelResultRequest();
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.phase = phase;
            inValue.vMachineName = vMachineName;
            inValue.equipment = equipment;
            return ((IPS.DataAcquisition.IService)(this)).BegingetModelResult(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getModelResultResponse IPS.DataAcquisition.IService.EndgetModelResult(System.IAsyncResult result) {
            return base.Channel.EndgetModelResult(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private IPS.DataAcquisition.ModelPredictiveValue EndgetModelResult(System.IAsyncResult result) {
            IPS.DataAcquisition.getModelResultResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetModelResult(result);
            return retVal.getModelResultResult;
        }
        
        private System.IAsyncResult OnBegingetModelResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            string phase = ((string)(inValues[2]));
            string vMachineName = ((string)(inValues[3]));
            string equipment = ((string)(inValues[4]));
            return this.BegingetModelResult(startDate, endDate, phase, vMachineName, equipment, callback, asyncState);
        }
        
        private object[] OnEndgetModelResult(System.IAsyncResult result) {
            IPS.DataAcquisition.ModelPredictiveValue retVal = this.EndgetModelResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetModelResultCompleted(object state) {
            if ((this.getModelResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getModelResultCompleted(this, new getModelResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getModelResultAsync(System.DateTime startDate, System.DateTime endDate, string phase, string vMachineName, string equipment) {
            this.getModelResultAsync(startDate, endDate, phase, vMachineName, equipment, null);
        }
        
        public void getModelResultAsync(System.DateTime startDate, System.DateTime endDate, string phase, string vMachineName, string equipment, object userState) {
            if ((this.onBegingetModelResultDelegate == null)) {
                this.onBegingetModelResultDelegate = new BeginOperationDelegate(this.OnBegingetModelResult);
            }
            if ((this.onEndgetModelResultDelegate == null)) {
                this.onEndgetModelResultDelegate = new EndOperationDelegate(this.OnEndgetModelResult);
            }
            if ((this.ongetModelResultCompletedDelegate == null)) {
                this.ongetModelResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetModelResultCompleted);
            }
            base.InvokeAsync(this.onBegingetModelResultDelegate, new object[] {
                        startDate,
                        endDate,
                        phase,
                        vMachineName,
                        equipment}, this.onEndgetModelResultDelegate, this.ongetModelResultCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetEquipmentByName(IPS.DataAcquisition.getEquipmentByNameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEquipmentByName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEquipmentByName(string vMachineName, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getEquipmentByNameRequest inValue = new IPS.DataAcquisition.getEquipmentByNameRequest();
            inValue.vMachineName = vMachineName;
            return ((IPS.DataAcquisition.IService)(this)).BegingetEquipmentByName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getEquipmentByNameResponse IPS.DataAcquisition.IService.EndgetEquipmentByName(System.IAsyncResult result) {
            return base.Channel.EndgetEquipmentByName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetEquipmentByName(System.IAsyncResult result) {
            IPS.DataAcquisition.getEquipmentByNameResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetEquipmentByName(result);
            return retVal.getEquipmentByNameResult;
        }
        
        private System.IAsyncResult OnBegingetEquipmentByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineName = ((string)(inValues[0]));
            return this.BegingetEquipmentByName(vMachineName, callback, asyncState);
        }
        
        private object[] OnEndgetEquipmentByName(System.IAsyncResult result) {
            string[] retVal = this.EndgetEquipmentByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEquipmentByNameCompleted(object state) {
            if ((this.getEquipmentByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEquipmentByNameCompleted(this, new getEquipmentByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEquipmentByNameAsync(string vMachineName) {
            this.getEquipmentByNameAsync(vMachineName, null);
        }
        
        public void getEquipmentByNameAsync(string vMachineName, object userState) {
            if ((this.onBegingetEquipmentByNameDelegate == null)) {
                this.onBegingetEquipmentByNameDelegate = new BeginOperationDelegate(this.OnBegingetEquipmentByName);
            }
            if ((this.onEndgetEquipmentByNameDelegate == null)) {
                this.onEndgetEquipmentByNameDelegate = new EndOperationDelegate(this.OnEndgetEquipmentByName);
            }
            if ((this.ongetEquipmentByNameCompletedDelegate == null)) {
                this.ongetEquipmentByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEquipmentByNameCompleted);
            }
            base.InvokeAsync(this.onBegingetEquipmentByNameDelegate, new object[] {
                        vMachineName}, this.onEndgetEquipmentByNameDelegate, this.ongetEquipmentByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetAllvMachine(IPS.DataAcquisition.getAllvMachineRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllvMachine(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAllvMachine(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getAllvMachineRequest inValue = new IPS.DataAcquisition.getAllvMachineRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetAllvMachine(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getAllvMachineResponse IPS.DataAcquisition.IService.EndgetAllvMachine(System.IAsyncResult result) {
            return base.Channel.EndgetAllvMachine(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetAllvMachine(System.IAsyncResult result) {
            IPS.DataAcquisition.getAllvMachineResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetAllvMachine(result);
            return retVal.getAllvMachineResult;
        }
        
        private System.IAsyncResult OnBegingetAllvMachine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllvMachine(callback, asyncState);
        }
        
        private object[] OnEndgetAllvMachine(System.IAsyncResult result) {
            string[] retVal = this.EndgetAllvMachine(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllvMachineCompleted(object state) {
            if ((this.getAllvMachineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllvMachineCompleted(this, new getAllvMachineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllvMachineAsync() {
            this.getAllvMachineAsync(null);
        }
        
        public void getAllvMachineAsync(object userState) {
            if ((this.onBegingetAllvMachineDelegate == null)) {
                this.onBegingetAllvMachineDelegate = new BeginOperationDelegate(this.OnBegingetAllvMachine);
            }
            if ((this.onEndgetAllvMachineDelegate == null)) {
                this.onEndgetAllvMachineDelegate = new EndOperationDelegate(this.OnEndgetAllvMachine);
            }
            if ((this.ongetAllvMachineCompletedDelegate == null)) {
                this.ongetAllvMachineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllvMachineCompleted);
            }
            base.InvokeAsync(this.onBegingetAllvMachineDelegate, null, this.onEndgetAllvMachineDelegate, this.ongetAllvMachineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetServiceBrokerInfo(IPS.DataAcquisition.getServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetServiceBrokerInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetServiceBrokerInfo(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getServiceBrokerInfoRequest inValue = new IPS.DataAcquisition.getServiceBrokerInfoRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetServiceBrokerInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getServiceBrokerInfoResponse IPS.DataAcquisition.IService.EndgetServiceBrokerInfo(System.IAsyncResult result) {
            return base.Channel.EndgetServiceBrokerInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndgetServiceBrokerInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.getServiceBrokerInfoResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetServiceBrokerInfo(result);
            return retVal.getServiceBrokerInfoResult;
        }
        
        private System.IAsyncResult OnBegingetServiceBrokerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetServiceBrokerInfo(callback, asyncState);
        }
        
        private object[] OnEndgetServiceBrokerInfo(System.IAsyncResult result) {
            string[][] retVal = this.EndgetServiceBrokerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetServiceBrokerInfoCompleted(object state) {
            if ((this.getServiceBrokerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getServiceBrokerInfoCompleted(this, new getServiceBrokerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getServiceBrokerInfoAsync() {
            this.getServiceBrokerInfoAsync(null);
        }
        
        public void getServiceBrokerInfoAsync(object userState) {
            if ((this.onBegingetServiceBrokerInfoDelegate == null)) {
                this.onBegingetServiceBrokerInfoDelegate = new BeginOperationDelegate(this.OnBegingetServiceBrokerInfo);
            }
            if ((this.onEndgetServiceBrokerInfoDelegate == null)) {
                this.onEndgetServiceBrokerInfoDelegate = new EndOperationDelegate(this.OnEndgetServiceBrokerInfo);
            }
            if ((this.ongetServiceBrokerInfoCompletedDelegate == null)) {
                this.ongetServiceBrokerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetServiceBrokerInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetServiceBrokerInfoDelegate, null, this.onEndgetServiceBrokerInfoDelegate, this.ongetServiceBrokerInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetProductInfo(IPS.DataAcquisition.getProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductInfo(string strURL, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getProductInfoRequest inValue = new IPS.DataAcquisition.getProductInfoRequest();
            inValue.strURL = strURL;
            return ((IPS.DataAcquisition.IService)(this)).BegingetProductInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getProductInfoResponse IPS.DataAcquisition.IService.EndgetProductInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndgetProductInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.getProductInfoResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetProductInfo(result);
            return retVal.getProductInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strURL = ((string)(inValues[0]));
            return this.BegingetProductInfo(strURL, callback, asyncState);
        }
        
        private object[] OnEndgetProductInfo(System.IAsyncResult result) {
            string[][] retVal = this.EndgetProductInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductInfoCompleted(object state) {
            if ((this.getProductInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductInfoCompleted(this, new getProductInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductInfoAsync(string strURL) {
            this.getProductInfoAsync(strURL, null);
        }
        
        public void getProductInfoAsync(string strURL, object userState) {
            if ((this.onBegingetProductInfoDelegate == null)) {
                this.onBegingetProductInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductInfo);
            }
            if ((this.onEndgetProductInfoDelegate == null)) {
                this.onEndgetProductInfoDelegate = new EndOperationDelegate(this.OnEndgetProductInfo);
            }
            if ((this.ongetProductInfoCompletedDelegate == null)) {
                this.ongetProductInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductInfoDelegate, new object[] {
                        strURL}, this.onEndgetProductInfoDelegate, this.ongetProductInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetProductInfo1(IPS.DataAcquisition.getProductInfo1Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductInfo1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductInfo1(string strURL, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getProductInfo1Request inValue = new IPS.DataAcquisition.getProductInfo1Request();
            inValue.strURL = strURL;
            return ((IPS.DataAcquisition.IService)(this)).BegingetProductInfo1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getProductInfo1Response IPS.DataAcquisition.IService.EndgetProductInfo1(System.IAsyncResult result) {
            return base.Channel.EndgetProductInfo1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetProductInfo1(System.IAsyncResult result) {
            IPS.DataAcquisition.getProductInfo1Response retVal = ((IPS.DataAcquisition.IService)(this)).EndgetProductInfo1(result);
            return retVal.getProductInfo1Result;
        }
        
        private System.IAsyncResult OnBegingetProductInfo1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strURL = ((string)(inValues[0]));
            return this.BegingetProductInfo1(strURL, callback, asyncState);
        }
        
        private object[] OnEndgetProductInfo1(System.IAsyncResult result) {
            string retVal = this.EndgetProductInfo1(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductInfo1Completed(object state) {
            if ((this.getProductInfo1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductInfo1Completed(this, new getProductInfo1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductInfo1Async(string strURL) {
            this.getProductInfo1Async(strURL, null);
        }
        
        public void getProductInfo1Async(string strURL, object userState) {
            if ((this.onBegingetProductInfo1Delegate == null)) {
                this.onBegingetProductInfo1Delegate = new BeginOperationDelegate(this.OnBegingetProductInfo1);
            }
            if ((this.onEndgetProductInfo1Delegate == null)) {
                this.onEndgetProductInfo1Delegate = new EndOperationDelegate(this.OnEndgetProductInfo1);
            }
            if ((this.ongetProductInfo1CompletedDelegate == null)) {
                this.ongetProductInfo1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductInfo1Completed);
            }
            base.InvokeAsync(this.onBegingetProductInfo1Delegate, new object[] {
                        strURL}, this.onEndgetProductInfo1Delegate, this.ongetProductInfo1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetProductionHistoInfo(IPS.DataAcquisition.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductionHistoInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductionHistoInfo(string strURL, string strProductType, string strProductName, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getProductionHistoInfoRequest inValue = new IPS.DataAcquisition.getProductionHistoInfoRequest();
            inValue.strURL = strURL;
            inValue.strProductType = strProductType;
            inValue.strProductName = strProductName;
            return ((IPS.DataAcquisition.IService)(this)).BegingetProductionHistoInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getProductionHistoInfoResponse IPS.DataAcquisition.IService.EndgetProductionHistoInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductionHistoInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndgetProductionHistoInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.getProductionHistoInfoResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetProductionHistoInfo(result);
            return retVal.getProductionHistoInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductionHistoInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strURL = ((string)(inValues[0]));
            string strProductType = ((string)(inValues[1]));
            string strProductName = ((string)(inValues[2]));
            return this.BegingetProductionHistoInfo(strURL, strProductType, strProductName, callback, asyncState);
        }
        
        private object[] OnEndgetProductionHistoInfo(System.IAsyncResult result) {
            string[][] retVal = this.EndgetProductionHistoInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductionHistoInfoCompleted(object state) {
            if ((this.getProductionHistoInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductionHistoInfoCompleted(this, new getProductionHistoInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductionHistoInfoAsync(string strURL, string strProductType, string strProductName) {
            this.getProductionHistoInfoAsync(strURL, strProductType, strProductName, null);
        }
        
        public void getProductionHistoInfoAsync(string strURL, string strProductType, string strProductName, object userState) {
            if ((this.onBegingetProductionHistoInfoDelegate == null)) {
                this.onBegingetProductionHistoInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductionHistoInfo);
            }
            if ((this.onEndgetProductionHistoInfoDelegate == null)) {
                this.onEndgetProductionHistoInfoDelegate = new EndOperationDelegate(this.OnEndgetProductionHistoInfo);
            }
            if ((this.ongetProductionHistoInfoCompletedDelegate == null)) {
                this.ongetProductionHistoInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductionHistoInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductionHistoInfoDelegate, new object[] {
                        strURL,
                        strProductType,
                        strProductName}, this.onEndgetProductionHistoInfoDelegate, this.ongetProductionHistoInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetProductBasicInfo(IPS.DataAcquisition.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductBasicInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductBasicInfo(string strURL, string strCNCID, string strProductType, string strProductName, string strvMachineID, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getProductBasicInfoRequest inValue = new IPS.DataAcquisition.getProductBasicInfoRequest();
            inValue.strURL = strURL;
            inValue.strCNCID = strCNCID;
            inValue.strProductType = strProductType;
            inValue.strProductName = strProductName;
            inValue.strvMachineID = strvMachineID;
            return ((IPS.DataAcquisition.IService)(this)).BegingetProductBasicInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getProductBasicInfoResponse IPS.DataAcquisition.IService.EndgetProductBasicInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductBasicInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private IPS.DataAcquisition.ProductBasicInfo EndgetProductBasicInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.getProductBasicInfoResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetProductBasicInfo(result);
            return retVal.getProductBasicInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductBasicInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strURL = ((string)(inValues[0]));
            string strCNCID = ((string)(inValues[1]));
            string strProductType = ((string)(inValues[2]));
            string strProductName = ((string)(inValues[3]));
            string strvMachineID = ((string)(inValues[4]));
            return this.BegingetProductBasicInfo(strURL, strCNCID, strProductType, strProductName, strvMachineID, callback, asyncState);
        }
        
        private object[] OnEndgetProductBasicInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.ProductBasicInfo retVal = this.EndgetProductBasicInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductBasicInfoCompleted(object state) {
            if ((this.getProductBasicInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductBasicInfoCompleted(this, new getProductBasicInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductBasicInfoAsync(string strURL, string strCNCID, string strProductType, string strProductName, string strvMachineID) {
            this.getProductBasicInfoAsync(strURL, strCNCID, strProductType, strProductName, strvMachineID, null);
        }
        
        public void getProductBasicInfoAsync(string strURL, string strCNCID, string strProductType, string strProductName, string strvMachineID, object userState) {
            if ((this.onBegingetProductBasicInfoDelegate == null)) {
                this.onBegingetProductBasicInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductBasicInfo);
            }
            if ((this.onEndgetProductBasicInfoDelegate == null)) {
                this.onEndgetProductBasicInfoDelegate = new EndOperationDelegate(this.OnEndgetProductBasicInfo);
            }
            if ((this.ongetProductBasicInfoCompletedDelegate == null)) {
                this.ongetProductBasicInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductBasicInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductBasicInfoDelegate, new object[] {
                        strURL,
                        strCNCID,
                        strProductType,
                        strProductName,
                        strvMachineID}, this.onEndgetProductBasicInfoDelegate, this.ongetProductBasicInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginFanoutDCP(IPS.DataAcquisition.FanoutDCPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFanoutDCP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginFanoutDCP(IPS.DataAcquisition.DADCPInfo DCPInfo, IPS.DataAcquisition.ProductBasicInfo PBIInfo, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.FanoutDCPRequest inValue = new IPS.DataAcquisition.FanoutDCPRequest();
            inValue.DCPInfo = DCPInfo;
            inValue.PBIInfo = PBIInfo;
            return ((IPS.DataAcquisition.IService)(this)).BeginFanoutDCP(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.FanoutDCPResponse IPS.DataAcquisition.IService.EndFanoutDCP(System.IAsyncResult result) {
            return base.Channel.EndFanoutDCP(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndFanoutDCP(System.IAsyncResult result) {
            IPS.DataAcquisition.FanoutDCPResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndFanoutDCP(result);
            return retVal.FanoutDCPResult;
        }
        
        private System.IAsyncResult OnBeginFanoutDCP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.DADCPInfo DCPInfo = ((IPS.DataAcquisition.DADCPInfo)(inValues[0]));
            IPS.DataAcquisition.ProductBasicInfo PBIInfo = ((IPS.DataAcquisition.ProductBasicInfo)(inValues[1]));
            return this.BeginFanoutDCP(DCPInfo, PBIInfo, callback, asyncState);
        }
        
        private object[] OnEndFanoutDCP(System.IAsyncResult result) {
            bool retVal = this.EndFanoutDCP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFanoutDCPCompleted(object state) {
            if ((this.FanoutDCPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FanoutDCPCompleted(this, new FanoutDCPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FanoutDCPAsync(IPS.DataAcquisition.DADCPInfo DCPInfo, IPS.DataAcquisition.ProductBasicInfo PBIInfo) {
            this.FanoutDCPAsync(DCPInfo, PBIInfo, null);
        }
        
        public void FanoutDCPAsync(IPS.DataAcquisition.DADCPInfo DCPInfo, IPS.DataAcquisition.ProductBasicInfo PBIInfo, object userState) {
            if ((this.onBeginFanoutDCPDelegate == null)) {
                this.onBeginFanoutDCPDelegate = new BeginOperationDelegate(this.OnBeginFanoutDCP);
            }
            if ((this.onEndFanoutDCPDelegate == null)) {
                this.onEndFanoutDCPDelegate = new EndOperationDelegate(this.OnEndFanoutDCP);
            }
            if ((this.onFanoutDCPCompletedDelegate == null)) {
                this.onFanoutDCPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFanoutDCPCompleted);
            }
            base.InvokeAsync(this.onBeginFanoutDCPDelegate, new object[] {
                        DCPInfo,
                        PBIInfo}, this.onEndFanoutDCPDelegate, this.onFanoutDCPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetDCR(IPS.DataAcquisition.getDCRRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDCR(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetDCR(string DCRXMLString, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getDCRRequest inValue = new IPS.DataAcquisition.getDCRRequest();
            inValue.DCRXMLString = DCRXMLString;
            return ((IPS.DataAcquisition.IService)(this)).BegingetDCR(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getDCRResponse IPS.DataAcquisition.IService.EndgetDCR(System.IAsyncResult result) {
            return base.Channel.EndgetDCR(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndgetDCR(System.IAsyncResult result) {
            IPS.DataAcquisition.getDCRResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetDCR(result);
            return retVal.getDCRResult;
        }
        
        private System.IAsyncResult OnBegingetDCR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DCRXMLString = ((string)(inValues[0]));
            return this.BegingetDCR(DCRXMLString, callback, asyncState);
        }
        
        private object[] OnEndgetDCR(System.IAsyncResult result) {
            bool retVal = this.EndgetDCR(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDCRCompleted(object state) {
            if ((this.getDCRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDCRCompleted(this, new getDCRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDCRAsync(string DCRXMLString) {
            this.getDCRAsync(DCRXMLString, null);
        }
        
        public void getDCRAsync(string DCRXMLString, object userState) {
            if ((this.onBegingetDCRDelegate == null)) {
                this.onBegingetDCRDelegate = new BeginOperationDelegate(this.OnBegingetDCR);
            }
            if ((this.onEndgetDCRDelegate == null)) {
                this.onEndgetDCRDelegate = new EndOperationDelegate(this.OnEndgetDCR);
            }
            if ((this.ongetDCRCompletedDelegate == null)) {
                this.ongetDCRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDCRCompleted);
            }
            base.InvokeAsync(this.onBegingetDCRDelegate, new object[] {
                        DCRXMLString}, this.onEndgetDCRDelegate, this.ongetDCRCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginInsertDCR(IPS.DataAcquisition.InsertDCRRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDCR(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertDCR(string DCRXMLString, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.InsertDCRRequest inValue = new IPS.DataAcquisition.InsertDCRRequest();
            inValue.DCRXMLString = DCRXMLString;
            return ((IPS.DataAcquisition.IService)(this)).BeginInsertDCR(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.InsertDCRResponse IPS.DataAcquisition.IService.EndInsertDCR(System.IAsyncResult result) {
            return base.Channel.EndInsertDCR(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndInsertDCR(System.IAsyncResult result) {
            IPS.DataAcquisition.InsertDCRResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndInsertDCR(result);
            return retVal.InsertDCRResult;
        }
        
        private System.IAsyncResult OnBeginInsertDCR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DCRXMLString = ((string)(inValues[0]));
            return this.BeginInsertDCR(DCRXMLString, callback, asyncState);
        }
        
        private object[] OnEndInsertDCR(System.IAsyncResult result) {
            string retVal = this.EndInsertDCR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertDCRCompleted(object state) {
            if ((this.InsertDCRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDCRCompleted(this, new InsertDCRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDCRAsync(string DCRXMLString) {
            this.InsertDCRAsync(DCRXMLString, null);
        }
        
        public void InsertDCRAsync(string DCRXMLString, object userState) {
            if ((this.onBeginInsertDCRDelegate == null)) {
                this.onBeginInsertDCRDelegate = new BeginOperationDelegate(this.OnBeginInsertDCR);
            }
            if ((this.onEndInsertDCRDelegate == null)) {
                this.onEndInsertDCRDelegate = new EndOperationDelegate(this.OnEndInsertDCR);
            }
            if ((this.onInsertDCRCompletedDelegate == null)) {
                this.onInsertDCRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDCRCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDCRDelegate, new object[] {
                        DCRXMLString}, this.onEndInsertDCRDelegate, this.onInsertDCRCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BegingetDCPInfo(IPS.DataAcquisition.getDCPInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDCPInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetDCPInfo(System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.getDCPInfoRequest inValue = new IPS.DataAcquisition.getDCPInfoRequest();
            return ((IPS.DataAcquisition.IService)(this)).BegingetDCPInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.DataAcquisition.getDCPInfoResponse IPS.DataAcquisition.IService.EndgetDCPInfo(System.IAsyncResult result) {
            return base.Channel.EndgetDCPInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private IPS.DataAcquisition.DCPInfoClass EndgetDCPInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.getDCPInfoResponse retVal = ((IPS.DataAcquisition.IService)(this)).EndgetDCPInfo(result);
            return retVal.getDCPInfoResult;
        }
        
        private System.IAsyncResult OnBegingetDCPInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetDCPInfo(callback, asyncState);
        }
        
        private object[] OnEndgetDCPInfo(System.IAsyncResult result) {
            IPS.DataAcquisition.DCPInfoClass retVal = this.EndgetDCPInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDCPInfoCompleted(object state) {
            if ((this.getDCPInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDCPInfoCompleted(this, new getDCPInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDCPInfoAsync() {
            this.getDCPInfoAsync(null);
        }
        
        public void getDCPInfoAsync(object userState) {
            if ((this.onBegingetDCPInfoDelegate == null)) {
                this.onBegingetDCPInfoDelegate = new BeginOperationDelegate(this.OnBegingetDCPInfo);
            }
            if ((this.onEndgetDCPInfoDelegate == null)) {
                this.onEndgetDCPInfoDelegate = new EndOperationDelegate(this.OnEndgetDCPInfo);
            }
            if ((this.ongetDCPInfoCompletedDelegate == null)) {
                this.ongetDCPInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDCPInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetDCPInfoDelegate, null, this.onEndgetDCPInfoDelegate, this.ongetDCPInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.DataAcquisition.IService.BeginUploadFile(IPS.DataAcquisition.FileUploadMessage request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile(byte[] FileData, System.AsyncCallback callback, object asyncState) {
            IPS.DataAcquisition.FileUploadMessage inValue = new IPS.DataAcquisition.FileUploadMessage();
            inValue.FileData = FileData;
            return ((IPS.DataAcquisition.IService)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void IPS.DataAcquisition.IService.EndUploadFile(System.IAsyncResult result) {
            base.Channel.EndUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileData = ((byte[])(inValues[0]));
            return this.BeginUploadFile(FileData, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            ((IPS.DataAcquisition.IService)(this)).EndUploadFile(result);
            return null;
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(byte[] FileData) {
            this.UploadFileAsync(FileData, null);
        }
        
        public void UploadFileAsync(byte[] FileData, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileData}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IPS.DataAcquisition.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<IPS.DataAcquisition.IService>, IPS.DataAcquisition.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<IPS.DataAcquisition.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetVmachineList(IPS.DataAcquisition.getVmachineListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getVmachineList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getVmachineListResponse EndgetVmachineList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getVmachineListResponse _result = ((IPS.DataAcquisition.getVmachineListResponse)(base.EndInvoke("getVmachineList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEquipmentList(IPS.DataAcquisition.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEquipmentList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getEquipmentListResponse EndgetEquipmentList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getEquipmentListResponse _result = ((IPS.DataAcquisition.getEquipmentListResponse)(base.EndInvoke("getEquipmentList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSensorList(IPS.DataAcquisition.getSensorListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getSensorList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getSensorListResponse EndgetSensorList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getSensorListResponse _result = ((IPS.DataAcquisition.getSensorListResponse)(base.EndInvoke("getSensorList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginuploadSTDB(IPS.DataAcquisition.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("uploadSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.uploadSTDBResponse EnduploadSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.uploadSTDBResponse _result = ((IPS.DataAcquisition.uploadSTDBResponse)(base.EndInvoke("uploadSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginstartPeriodTimeUploadSTDB(IPS.DataAcquisition.startPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("startPeriodTimeUploadSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse EndstartPeriodTimeUploadSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse _result = ((IPS.DataAcquisition.startPeriodTimeUploadSTDBResponse)(base.EndInvoke("startPeriodTimeUploadSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginstopPeriodTimeUploadSTDB(IPS.DataAcquisition.stopPeriodTimeUploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("stopPeriodTimeUploadSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse EndstopPeriodTimeUploadSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse _result = ((IPS.DataAcquisition.stopPeriodTimeUploadSTDBResponse)(base.EndInvoke("stopPeriodTimeUploadSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllVmachineStateList(IPS.DataAcquisition.getAllVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAllVmachineStateList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getAllVmachineStateListResponse EndgetAllVmachineStateList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getAllVmachineStateListResponse _result = ((IPS.DataAcquisition.getAllVmachineStateListResponse)(base.EndInvoke("getAllVmachineStateList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllStopVmachineStateList(IPS.DataAcquisition.getAllStopVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAllStopVmachineStateList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getAllStopVmachineStateListResponse EndgetAllStopVmachineStateList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getAllStopVmachineStateListResponse _result = ((IPS.DataAcquisition.getAllStopVmachineStateListResponse)(base.EndInvoke("getAllStopVmachineStateList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllStartVmachineStateList(IPS.DataAcquisition.getAllStartVmachineStateListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAllStartVmachineStateList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getAllStartVmachineStateListResponse EndgetAllStartVmachineStateList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getAllStartVmachineStateListResponse _result = ((IPS.DataAcquisition.getAllStartVmachineStateListResponse)(base.EndInvoke("getAllStartVmachineStateList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginuploadDefOfSTDB(IPS.DataAcquisition.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("uploadDefOfSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.uploadDefOfSTDBResponse EnduploadDefOfSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.uploadDefOfSTDBResponse _result = ((IPS.DataAcquisition.uploadDefOfSTDBResponse)(base.EndInvoke("uploadDefOfSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateVMResult(IPS.DataAcquisition.updateVMResultRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("updateVMResult", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.updateVMResultResponse EndupdateVMResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.updateVMResultResponse _result = ((IPS.DataAcquisition.updateVMResultResponse)(base.EndInvoke("updateVMResult", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetModelResult(IPS.DataAcquisition.getModelResultRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getModelResult", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getModelResultResponse EndgetModelResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getModelResultResponse _result = ((IPS.DataAcquisition.getModelResultResponse)(base.EndInvoke("getModelResult", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEquipmentByName(IPS.DataAcquisition.getEquipmentByNameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEquipmentByName", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getEquipmentByNameResponse EndgetEquipmentByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getEquipmentByNameResponse _result = ((IPS.DataAcquisition.getEquipmentByNameResponse)(base.EndInvoke("getEquipmentByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllvMachine(IPS.DataAcquisition.getAllvMachineRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAllvMachine", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getAllvMachineResponse EndgetAllvMachine(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getAllvMachineResponse _result = ((IPS.DataAcquisition.getAllvMachineResponse)(base.EndInvoke("getAllvMachine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetServiceBrokerInfo(IPS.DataAcquisition.getServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getServiceBrokerInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getServiceBrokerInfoResponse EndgetServiceBrokerInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getServiceBrokerInfoResponse _result = ((IPS.DataAcquisition.getServiceBrokerInfoResponse)(base.EndInvoke("getServiceBrokerInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductInfo(IPS.DataAcquisition.getProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getProductInfoResponse EndgetProductInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getProductInfoResponse _result = ((IPS.DataAcquisition.getProductInfoResponse)(base.EndInvoke("getProductInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductInfo1(IPS.DataAcquisition.getProductInfo1Request request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductInfo1", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getProductInfo1Response EndgetProductInfo1(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getProductInfo1Response _result = ((IPS.DataAcquisition.getProductInfo1Response)(base.EndInvoke("getProductInfo1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductionHistoInfo(IPS.DataAcquisition.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductionHistoInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getProductionHistoInfoResponse EndgetProductionHistoInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getProductionHistoInfoResponse _result = ((IPS.DataAcquisition.getProductionHistoInfoResponse)(base.EndInvoke("getProductionHistoInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductBasicInfo(IPS.DataAcquisition.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductBasicInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getProductBasicInfoResponse EndgetProductBasicInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getProductBasicInfoResponse _result = ((IPS.DataAcquisition.getProductBasicInfoResponse)(base.EndInvoke("getProductBasicInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFanoutDCP(IPS.DataAcquisition.FanoutDCPRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("FanoutDCP", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.FanoutDCPResponse EndFanoutDCP(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.FanoutDCPResponse _result = ((IPS.DataAcquisition.FanoutDCPResponse)(base.EndInvoke("FanoutDCP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDCR(IPS.DataAcquisition.getDCRRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getDCR", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getDCRResponse EndgetDCR(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getDCRResponse _result = ((IPS.DataAcquisition.getDCRResponse)(base.EndInvoke("getDCR", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertDCR(IPS.DataAcquisition.InsertDCRRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertDCR", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.InsertDCRResponse EndInsertDCR(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.InsertDCRResponse _result = ((IPS.DataAcquisition.InsertDCRResponse)(base.EndInvoke("InsertDCR", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDCPInfo(IPS.DataAcquisition.getDCPInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getDCPInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.DataAcquisition.getDCPInfoResponse EndgetDCPInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.DataAcquisition.getDCPInfoResponse _result = ((IPS.DataAcquisition.getDCPInfoResponse)(base.EndInvoke("getDCPInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(IPS.DataAcquisition.FileUploadMessage request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadFile", _args, result);
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "4.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
