//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.269
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace IPS.MachineInfomation {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MachineInfomation.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getProductBasicInfo", ReplyAction="http://tempuri.org/IService1/getProductBasicInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductBasicInfo(IPS.MachineInfomation.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getProductBasicInfoResponse EndgetProductBasicInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getProductionHistoInfo", ReplyAction="http://tempuri.org/IService1/getProductionHistoInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductionHistoInfo(IPS.MachineInfomation.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getProductionHistoInfoResponse EndgetProductionHistoInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getDCP", ReplyAction="http://tempuri.org/IService1/getDCPResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetDCP(System.AsyncCallback callback, object asyncState);
        
        bool EndgetDCP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ServiceBroker_sendDataCollectionReport_Return", ReplyAction="http://tempuri.org/IService1/ServiceBroker_sendDataCollectionReport_ReturnRespons" +
            "e")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginServiceBroker_sendDataCollectionReport_Return(IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse EndServiceBroker_sendDataCollectionReport_Return(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Get_Model_From_MM", ReplyAction="http://tempuri.org/IService1/Get_Model_From_MMResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGet_Model_From_MM(IPS.MachineInfomation.Get_Model_From_MMRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Get_Model_From_MMResponse EndGet_Model_From_MM(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/get_vMachineIP", ReplyAction="http://tempuri.org/IService1/get_vMachineIPResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Beginget_vMachineIP(IPS.MachineInfomation.get_vMachineIPRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.get_vMachineIPResponse Endget_vMachineIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getEquipmentInformationList", ReplyAction="http://tempuri.org/IService1/getEquipmentInformationListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetEquipmentInformationList(IPS.MachineInfomation.getEquipmentInformationListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getEquipmentInformationListResponse EndgetEquipmentInformationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetCompanyInfo", ReplyAction="http://tempuri.org/IService1/GetCompanyInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetCompanyInfo(IPS.MachineInfomation.GetCompanyInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.GetCompanyInfoResponse EndGetCompanyInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetServiceBrokerInfo", ReplyAction="http://tempuri.org/IService1/GetServiceBrokerInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetServiceBrokerInfo(IPS.MachineInfomation.GetServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.GetServiceBrokerInfoResponse EndGetServiceBrokerInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetvMachineCNCInfo", ReplyAction="http://tempuri.org/IService1/GetvMachineCNCInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetvMachineCNCInfo(IPS.MachineInfomation.GetvMachineCNCInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.GetvMachineCNCInfoResponse EndGetvMachineCNCInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetvMachineCNCInfo_Ontology", ReplyAction="http://tempuri.org/IService1/GetvMachineCNCInfo_OntologyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetvMachineCNCInfo_Ontology(IPS.MachineInfomation.GetvMachineCNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse EndGetvMachineCNCInfo_Ontology(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DownloadNCFile", ReplyAction="http://tempuri.org/IService1/DownloadNCFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDownloadNCFile(IPS.MachineInfomation.DownloadNCFileRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.DownloadNCFileResponse EndDownloadNCFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Get_vMachineInfo_Ontology", ReplyAction="http://tempuri.org/IService1/Get_vMachineInfo_OntologyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGet_vMachineInfo_Ontology(IPS.MachineInfomation.Get_vMachineInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse EndGet_vMachineInfo_Ontology(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Get_CNCInfo_Ontology", ReplyAction="http://tempuri.org/IService1/Get_CNCInfo_OntologyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGet_CNCInfo_Ontology(IPS.MachineInfomation.Get_CNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Get_CNCInfo_OntologyResponse EndGet_CNCInfo_Ontology(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/kinfe_Info", ReplyAction="http://tempuri.org/IService1/kinfe_InfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Beginkinfe_Info(IPS.MachineInfomation.kinfe_InfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.kinfe_InfoResponse Endkinfe_Info(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getVmachineList", ReplyAction="http://tempuri.org/IService1/getVmachineListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVmachineList(IPS.MachineInfomation.getVmachineListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getVmachineListResponse EndgetVmachineList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/registerVmachine", ReplyAction="http://tempuri.org/IService1/registerVmachineResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginregisterVmachine(IPS.MachineInfomation.registerVmachineRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.registerVmachineResponse EndregisterVmachine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/sendAlarm", ReplyAction="http://tempuri.org/IService1/sendAlarmResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginsendAlarm(IPS.MachineInfomation.sendAlarmRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.sendAlarmResponse EndsendAlarm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getEquipmentList", ReplyAction="http://tempuri.org/IService1/getEquipmentListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetEquipmentList(IPS.MachineInfomation.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getEquipmentListResponse EndgetEquipmentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/fanOutModel", ReplyAction="http://tempuri.org/IService1/fanOutModelResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginfanOutModel(IPS.MachineInfomation.fanOutModelRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.fanOutModelResponse EndfanOutModel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getVmachineInformation", ReplyAction="http://tempuri.org/IService1/getVmachineInformationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVmachineInformation(System.AsyncCallback callback, object asyncState);
        
        void EndgetVmachineInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getRunningModelInformation", ReplyAction="http://tempuri.org/IService1/getRunningModelInformationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetRunningModelInformation(IPS.MachineInfomation.getRunningModelInformationRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getRunningModelInformationResponse EndgetRunningModelInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getVmachineInformationList", ReplyAction="http://tempuri.org/IService1/getVmachineInformationListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVmachineInformationList(IPS.MachineInfomation.getVmachineInformationListRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getVmachineInformationListResponse EndgetVmachineInformationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/uploadSTDB", ReplyAction="http://tempuri.org/IService1/uploadSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginuploadSTDB(IPS.MachineInfomation.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.uploadSTDBResponse EnduploadSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/uploadDefOfSTDB", ReplyAction="http://tempuri.org/IService1/uploadDefOfSTDBResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginuploadDefOfSTDB(IPS.MachineInfomation.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.uploadDefOfSTDBResponse EnduploadDefOfSTDB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/updateVMResult", ReplyAction="http://tempuri.org/IService1/updateVMResultResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginupdateVMResult(IPS.MachineInfomation.updateVMResultRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.updateVMResultResponse EndupdateVMResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getEquipmentListByVmachine", ReplyAction="http://tempuri.org/IService1/getEquipmentListByVmachineResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetEquipmentListByVmachine(IPS.MachineInfomation.getEquipmentListByVmachineRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getEquipmentListByVmachineResponse EndgetEquipmentListByVmachine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Insert_vNachineState", ReplyAction="http://tempuri.org/IService1/Insert_vNachineStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginInsert_vNachineState(IPS.MachineInfomation.Insert_vNachineStateRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Insert_vNachineStateResponse EndInsert_vNachineState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Update_vNachineState", ReplyAction="http://tempuri.org/IService1/Update_vNachineStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdate_vNachineState(IPS.MachineInfomation.Update_vNachineStateRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Update_vNachineStateResponse EndUpdate_vNachineState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Delete_vMachibne", ReplyAction="http://tempuri.org/IService1/Delete_vMachibneResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDelete_vMachibne(IPS.MachineInfomation.Delete_vMachibneRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Delete_vMachibneResponse EndDelete_vMachibne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getVmachineList1", ReplyAction="http://tempuri.org/IService1/getVmachineList1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVmachineList1(IPS.MachineInfomation.getVmachineList1Request request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getVmachineList1Response EndgetVmachineList1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/vMachine_RegInfo_Check", ReplyAction="http://tempuri.org/IService1/vMachine_RegInfo_CheckResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginvMachine_RegInfo_Check(IPS.MachineInfomation.vMachine_RegInfo_CheckRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.vMachine_RegInfo_CheckResponse EndvMachine_RegInfo_Check(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Cnc_State_Check", ReplyAction="http://tempuri.org/IService1/Cnc_State_CheckResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCnc_State_Check(IPS.MachineInfomation.Cnc_State_CheckRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.Cnc_State_CheckResponse EndCnc_State_Check(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Begintest(IPS.MachineInfomation.testRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.testResponse Endtest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/testv", ReplyAction="http://tempuri.org/IService1/testvResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Begintestv(IPS.MachineInfomation.testvRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.testvResponse Endtestv(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/testm", ReplyAction="http://tempuri.org/IService1/testmResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Begintestm(System.AsyncCallback callback, object asyncState);
        
        void Endtestm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/registerCNCInfo", ReplyAction="http://tempuri.org/IService1/registerCNCInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginregisterCNCInfo(IPS.MachineInfomation.registerCNCInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.registerCNCInfoResponse EndregisterCNCInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/registervMachineInfo", ReplyAction="http://tempuri.org/IService1/registervMachineInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginregistervMachineInfo(IPS.MachineInfomation.registervMachineInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.registervMachineInfoResponse EndregistervMachineInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/modify_cncstate", ReplyAction="http://tempuri.org/IService1/modify_cncstateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Beginmodify_cncstate(IPS.MachineInfomation.modify_cncstateRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.modify_cncstateResponse Endmodify_cncstate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/modify_vMachinestate", ReplyAction="http://tempuri.org/IService1/modify_vMachinestateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult Beginmodify_vMachinestate(IPS.MachineInfomation.modify_vMachinestateRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.modify_vMachinestateResponse Endmodify_vMachinestate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getProductInfo", ReplyAction="http://tempuri.org/IService1/getProductInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetProductInfo(IPS.MachineInfomation.getProductInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.getProductInfoResponse EndgetProductInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/registerProductionHistory", ReplyAction="http://tempuri.org/IService1/registerProductionHistoryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginregisterProductionHistory(IPS.MachineInfomation.registerProductionHistoryRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.registerProductionHistoryResponse EndregisterProductionHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/registerProductInfo", ReplyAction="http://tempuri.org/IService1/registerProductInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginregisterProductInfo(IPS.MachineInfomation.registerProductInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        IPS.MachineInfomation.registerProductInfoResponse EndregisterProductInfo(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    public partial class ProductBasicInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Xinfo[] xinfoListField;
        
        private Yinfo[] yinfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public Xinfo[] XinfoList {
            get {
                return this.xinfoListField;
            }
            set {
                this.xinfoListField = value;
                this.RaisePropertyChanged("XinfoList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public Yinfo[] YinfoList {
            get {
                return this.yinfoListField;
            }
            set {
                this.yinfoListField = value;
                this.RaisePropertyChanged("YinfoList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    public partial class Xinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string positionField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ModelItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] modelBytesField;
        
        private string modelNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=0)]
        public byte[] modelBytes {
            get {
                return this.modelBytesField;
            }
            set {
                this.modelBytesField = value;
                this.RaisePropertyChanged("modelBytes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string modelName {
            get {
                return this.modelNameField;
            }
            set {
                this.modelNameField = value;
                this.RaisePropertyChanged("modelName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Model : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cOMPANYField;
        
        private string codeIDField;
        
        private string g_CodeField;
        
        private string[] indicatorSpec_LCLField;
        
        private string[] indicatorSpec_LSLField;
        
        private string[] indicatorSpec_UCLField;
        
        private string[] indicatorSpec_USLField;
        
        private string[] measureSpec_LCLField;
        
        private string[] measureSpec_LSLField;
        
        private string[] measureSpec_TargetField;
        
        private string[] measureSpec_UCLField;
        
        private string[] measureSpec_USLField;
        
        private string metrologyItemField;
        
        private string model_IDField;
        
        private string pkField;
        
        private string postYType_1Field;
        
        private string postYType_2Field;
        
        private string versionField;
        
        private string cncTypeField;
        
        private string cnc_numberField;
        
        private System.DateTime createTimeField;
        
        private bool createTimeFieldSpecified;
        
        private string createUserField;
        
        private System.DateTime dataEndTimeField;
        
        private bool dataEndTimeFieldSpecified;
        
        private System.DateTime dataStartTimeField;
        
        private bool dataStartTimeFieldSpecified;
        
        private string[] indicatorField;
        
        private System.DateTime indicatorEndDateField;
        
        private bool indicatorEndDateFieldSpecified;
        
        private string[] indicatorIndexListField;
        
        private System.DateTime indicatorStartDateField;
        
        private bool indicatorStartDateFieldSpecified;
        
        private double[] matSizeListField;
        
        private System.DateTime modelCreateDateField;
        
        private bool modelCreateDateFieldSpecified;
        
        private string modelCreateUserField;
        
        private string modelIDField;
        
        private ModelItem[] modelItemField;
        
        private string[] modelNameListField;
        
        private double modelSizeField;
        
        private bool modelSizeFieldSpecified;
        
        private string[] pointIndexListField;
        
        private string positionField;
        
        private string producttypeField;
        
        private string seat_numberField;
        
        private string sensorField;
        
        private string vMachineIDField;
        
        private string vMachineNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string COMPANY {
            get {
                return this.cOMPANYField;
            }
            set {
                this.cOMPANYField = value;
                this.RaisePropertyChanged("COMPANY");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string CodeID {
            get {
                return this.codeIDField;
            }
            set {
                this.codeIDField = value;
                this.RaisePropertyChanged("CodeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string G_Code {
            get {
                return this.g_CodeField;
            }
            set {
                this.g_CodeField = value;
                this.RaisePropertyChanged("G_Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] IndicatorSpec_LCL {
            get {
                return this.indicatorSpec_LCLField;
            }
            set {
                this.indicatorSpec_LCLField = value;
                this.RaisePropertyChanged("IndicatorSpec_LCL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] IndicatorSpec_LSL {
            get {
                return this.indicatorSpec_LSLField;
            }
            set {
                this.indicatorSpec_LSLField = value;
                this.RaisePropertyChanged("IndicatorSpec_LSL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] IndicatorSpec_UCL {
            get {
                return this.indicatorSpec_UCLField;
            }
            set {
                this.indicatorSpec_UCLField = value;
                this.RaisePropertyChanged("IndicatorSpec_UCL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] IndicatorSpec_USL {
            get {
                return this.indicatorSpec_USLField;
            }
            set {
                this.indicatorSpec_USLField = value;
                this.RaisePropertyChanged("IndicatorSpec_USL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MeasureSpec_LCL {
            get {
                return this.measureSpec_LCLField;
            }
            set {
                this.measureSpec_LCLField = value;
                this.RaisePropertyChanged("MeasureSpec_LCL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MeasureSpec_LSL {
            get {
                return this.measureSpec_LSLField;
            }
            set {
                this.measureSpec_LSLField = value;
                this.RaisePropertyChanged("MeasureSpec_LSL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=9)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MeasureSpec_Target {
            get {
                return this.measureSpec_TargetField;
            }
            set {
                this.measureSpec_TargetField = value;
                this.RaisePropertyChanged("MeasureSpec_Target");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=10)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MeasureSpec_UCL {
            get {
                return this.measureSpec_UCLField;
            }
            set {
                this.measureSpec_UCLField = value;
                this.RaisePropertyChanged("MeasureSpec_UCL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=11)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MeasureSpec_USL {
            get {
                return this.measureSpec_USLField;
            }
            set {
                this.measureSpec_USLField = value;
                this.RaisePropertyChanged("MeasureSpec_USL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public string MetrologyItem {
            get {
                return this.metrologyItemField;
            }
            set {
                this.metrologyItemField = value;
                this.RaisePropertyChanged("MetrologyItem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public string Model_ID {
            get {
                return this.model_IDField;
            }
            set {
                this.model_IDField = value;
                this.RaisePropertyChanged("Model_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public string PK {
            get {
                return this.pkField;
            }
            set {
                this.pkField = value;
                this.RaisePropertyChanged("PK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=15)]
        public string PostYType_1 {
            get {
                return this.postYType_1Field;
            }
            set {
                this.postYType_1Field = value;
                this.RaisePropertyChanged("PostYType_1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=16)]
        public string PostYType_2 {
            get {
                return this.postYType_2Field;
            }
            set {
                this.postYType_2Field = value;
                this.RaisePropertyChanged("PostYType_2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=18)]
        public string cncType {
            get {
                return this.cncTypeField;
            }
            set {
                this.cncTypeField = value;
                this.RaisePropertyChanged("cncType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=19)]
        public string cnc_number {
            get {
                return this.cnc_numberField;
            }
            set {
                this.cnc_numberField = value;
                this.RaisePropertyChanged("cnc_number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
                this.RaisePropertyChanged("createTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createTimeSpecified {
            get {
                return this.createTimeFieldSpecified;
            }
            set {
                this.createTimeFieldSpecified = value;
                this.RaisePropertyChanged("createTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=21)]
        public string createUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
                this.RaisePropertyChanged("createUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public System.DateTime dataEndTime {
            get {
                return this.dataEndTimeField;
            }
            set {
                this.dataEndTimeField = value;
                this.RaisePropertyChanged("dataEndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataEndTimeSpecified {
            get {
                return this.dataEndTimeFieldSpecified;
            }
            set {
                this.dataEndTimeFieldSpecified = value;
                this.RaisePropertyChanged("dataEndTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public System.DateTime dataStartTime {
            get {
                return this.dataStartTimeField;
            }
            set {
                this.dataStartTimeField = value;
                this.RaisePropertyChanged("dataStartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataStartTimeSpecified {
            get {
                return this.dataStartTimeFieldSpecified;
            }
            set {
                this.dataStartTimeFieldSpecified = value;
                this.RaisePropertyChanged("dataStartTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=24)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] indicator {
            get {
                return this.indicatorField;
            }
            set {
                this.indicatorField = value;
                this.RaisePropertyChanged("indicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public System.DateTime indicatorEndDate {
            get {
                return this.indicatorEndDateField;
            }
            set {
                this.indicatorEndDateField = value;
                this.RaisePropertyChanged("indicatorEndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indicatorEndDateSpecified {
            get {
                return this.indicatorEndDateFieldSpecified;
            }
            set {
                this.indicatorEndDateFieldSpecified = value;
                this.RaisePropertyChanged("indicatorEndDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=26)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] indicatorIndexList {
            get {
                return this.indicatorIndexListField;
            }
            set {
                this.indicatorIndexListField = value;
                this.RaisePropertyChanged("indicatorIndexList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public System.DateTime indicatorStartDate {
            get {
                return this.indicatorStartDateField;
            }
            set {
                this.indicatorStartDateField = value;
                this.RaisePropertyChanged("indicatorStartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indicatorStartDateSpecified {
            get {
                return this.indicatorStartDateFieldSpecified;
            }
            set {
                this.indicatorStartDateFieldSpecified = value;
                this.RaisePropertyChanged("indicatorStartDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=28)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] matSizeList {
            get {
                return this.matSizeListField;
            }
            set {
                this.matSizeListField = value;
                this.RaisePropertyChanged("matSizeList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public System.DateTime modelCreateDate {
            get {
                return this.modelCreateDateField;
            }
            set {
                this.modelCreateDateField = value;
                this.RaisePropertyChanged("modelCreateDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modelCreateDateSpecified {
            get {
                return this.modelCreateDateFieldSpecified;
            }
            set {
                this.modelCreateDateFieldSpecified = value;
                this.RaisePropertyChanged("modelCreateDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=30)]
        public string modelCreateUser {
            get {
                return this.modelCreateUserField;
            }
            set {
                this.modelCreateUserField = value;
                this.RaisePropertyChanged("modelCreateUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=31)]
        public string modelID {
            get {
                return this.modelIDField;
            }
            set {
                this.modelIDField = value;
                this.RaisePropertyChanged("modelID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=32)]
        public ModelItem[] modelItem {
            get {
                return this.modelItemField;
            }
            set {
                this.modelItemField = value;
                this.RaisePropertyChanged("modelItem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=33)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] modelNameList {
            get {
                return this.modelNameListField;
            }
            set {
                this.modelNameListField = value;
                this.RaisePropertyChanged("modelNameList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public double modelSize {
            get {
                return this.modelSizeField;
            }
            set {
                this.modelSizeField = value;
                this.RaisePropertyChanged("modelSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modelSizeSpecified {
            get {
                return this.modelSizeFieldSpecified;
            }
            set {
                this.modelSizeFieldSpecified = value;
                this.RaisePropertyChanged("modelSizeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=35)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] pointIndexList {
            get {
                return this.pointIndexListField;
            }
            set {
                this.pointIndexListField = value;
                this.RaisePropertyChanged("pointIndexList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=36)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=37)]
        public string producttype {
            get {
                return this.producttypeField;
            }
            set {
                this.producttypeField = value;
                this.RaisePropertyChanged("producttype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=38)]
        public string seat_number {
            get {
                return this.seat_numberField;
            }
            set {
                this.seat_numberField = value;
                this.RaisePropertyChanged("seat_number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=39)]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
                this.RaisePropertyChanged("sensor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=40)]
        public string vMachineID {
            get {
                return this.vMachineIDField;
            }
            set {
                this.vMachineIDField = value;
                this.RaisePropertyChanged("vMachineID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=41)]
        public string vMachineName {
            get {
                return this.vMachineNameField;
            }
            set {
                this.vMachineNameField = value;
                this.RaisePropertyChanged("vMachineName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    public partial class ModelFull : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] equipmentListField;
        
        private Model modelField;
        
        private string[] vMachineListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
                this.RaisePropertyChanged("equipmentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public Model model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
                this.RaisePropertyChanged("model");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] vMachineList {
            get {
                return this.vMachineListField;
            }
            set {
                this.vMachineListField = value;
                this.RaisePropertyChanged("vMachineList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class EquipmentType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string equipmenPictureNameField;
        
        private string equipmenTypeField;
        
        private byte[] equipmentPictureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                this.equipmenPictureNameField = value;
                this.RaisePropertyChanged("equipmenPictureName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                this.equipmenTypeField = value;
                this.RaisePropertyChanged("equipmenType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=2)]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                this.equipmentPictureField = value;
                this.RaisePropertyChanged("equipmentPicture");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Equipment1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cnc_StateField;
        
        private string iPv4Field;
        
        private string iPv4SubnetMaskField;
        
        private string service_StatusField;
        
        private string equimentControllerTypeField;
        
        private string equipmenNoField;
        
        private string equipmenPictureNameField;
        
        private string equipmenTypeField;
        
        private string equipmentIpField;
        
        private string equipmentLocationField;
        
        private byte[] equipmentPictureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Cnc_State {
            get {
                return this.cnc_StateField;
            }
            set {
                this.cnc_StateField = value;
                this.RaisePropertyChanged("Cnc_State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string IPv4SubnetMask {
            get {
                return this.iPv4SubnetMaskField;
            }
            set {
                this.iPv4SubnetMaskField = value;
                this.RaisePropertyChanged("IPv4SubnetMask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string Service_Status {
            get {
                return this.service_StatusField;
            }
            set {
                this.service_StatusField = value;
                this.RaisePropertyChanged("Service_Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string equimentControllerType {
            get {
                return this.equimentControllerTypeField;
            }
            set {
                this.equimentControllerTypeField = value;
                this.RaisePropertyChanged("equimentControllerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string equipmenNo {
            get {
                return this.equipmenNoField;
            }
            set {
                this.equipmenNoField = value;
                this.RaisePropertyChanged("equipmenNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                this.equipmenPictureNameField = value;
                this.RaisePropertyChanged("equipmenPictureName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                this.equipmenTypeField = value;
                this.RaisePropertyChanged("equipmenType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string equipmentIp {
            get {
                return this.equipmentIpField;
            }
            set {
                this.equipmentIpField = value;
                this.RaisePropertyChanged("equipmentIp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public string equipmentLocation {
            get {
                return this.equipmentLocationField;
            }
            set {
                this.equipmentLocationField = value;
                this.RaisePropertyChanged("equipmentLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=10)]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                this.equipmentPictureField = value;
                this.RaisePropertyChanged("equipmentPicture");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Equipment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string iPv4Field;
        
        private string iPv4SubnetMaskField;
        
        private string equimentControllerTypeField;
        
        private string equipmenNoField;
        
        private string equipmenPictureNameField;
        
        private string equipmenTypeField;
        
        private string equipmentIpField;
        
        private string equipmentLocationField;
        
        private byte[] equipmentPictureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string IPv4SubnetMask {
            get {
                return this.iPv4SubnetMaskField;
            }
            set {
                this.iPv4SubnetMaskField = value;
                this.RaisePropertyChanged("IPv4SubnetMask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string equimentControllerType {
            get {
                return this.equimentControllerTypeField;
            }
            set {
                this.equimentControllerTypeField = value;
                this.RaisePropertyChanged("equimentControllerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string equipmenNo {
            get {
                return this.equipmenNoField;
            }
            set {
                this.equipmenNoField = value;
                this.RaisePropertyChanged("equipmenNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                this.equipmenPictureNameField = value;
                this.RaisePropertyChanged("equipmenPictureName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                this.equipmenTypeField = value;
                this.RaisePropertyChanged("equipmenType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string equipmentIp {
            get {
                return this.equipmentIpField;
            }
            set {
                this.equipmentIpField = value;
                this.RaisePropertyChanged("equipmentIp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string equipmentLocation {
            get {
                return this.equipmentLocationField;
            }
            set {
                this.equipmentLocationField = value;
                this.RaisePropertyChanged("equipmentLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=8)]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                this.equipmentPictureField = value;
                this.RaisePropertyChanged("equipmentPicture");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Vmachine : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Equipment[] equipmentListField;
        
        private Equipment1[] equipmentList1Field;
        
        private string vMachineIdField;
        
        private string vMachineIpField;
        
        private string vMachineIp1Field;
        
        private string vMachine_StateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        public Equipment[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
                this.RaisePropertyChanged("equipmentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public Equipment1[] equipmentList1 {
            get {
                return this.equipmentList1Field;
            }
            set {
                this.equipmentList1Field = value;
                this.RaisePropertyChanged("equipmentList1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string vMachineId {
            get {
                return this.vMachineIdField;
            }
            set {
                this.vMachineIdField = value;
                this.RaisePropertyChanged("vMachineId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string vMachineIp {
            get {
                return this.vMachineIpField;
            }
            set {
                this.vMachineIpField = value;
                this.RaisePropertyChanged("vMachineIp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string vMachineIp1 {
            get {
                return this.vMachineIp1Field;
            }
            set {
                this.vMachineIp1Field = value;
                this.RaisePropertyChanged("vMachineIp1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string vMachine_State {
            get {
                return this.vMachine_StateField;
            }
            set {
                this.vMachine_StateField = value;
                this.RaisePropertyChanged("vMachine_State");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ModelManagementServices")]
    public partial class EquipmentInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cNCIDField;
        
        private string stateField;
        
        private string v_Machine_IDField;
        
        private string v_Machine_IPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CNCID {
            get {
                return this.cNCIDField;
            }
            set {
                this.cNCIDField = value;
                this.RaisePropertyChanged("CNCID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string v_Machine_ID {
            get {
                return this.v_Machine_IDField;
            }
            set {
                this.v_Machine_IDField = value;
                this.RaisePropertyChanged("v_Machine_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string v_Machine_IP {
            get {
                return this.v_Machine_IPField;
            }
            set {
                this.v_Machine_IPField = value;
                this.RaisePropertyChanged("v_Machine_IP");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    public partial class Model_GetContent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cNC_IDField;
        
        private string fileNameField;
        
        private string filePathField;
        
        private string pkField;
        
        private string cretateTimeField;
        
        private string vMachineIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CNC_ID {
            get {
                return this.cNC_IDField;
            }
            set {
                this.cNC_IDField = value;
                this.RaisePropertyChanged("CNC_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
                this.RaisePropertyChanged("FilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string PK {
            get {
                return this.pkField;
            }
            set {
                this.pkField = value;
                this.RaisePropertyChanged("PK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string cretateTime {
            get {
                return this.cretateTimeField;
            }
            set {
                this.cretateTimeField = value;
                this.RaisePropertyChanged("cretateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string vMachineIP {
            get {
                return this.vMachineIPField;
            }
            set {
                this.vMachineIPField = value;
                this.RaisePropertyChanged("vMachineIP");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    public partial class Yinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string actionField;
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
                this.RaisePropertyChanged("Action");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductBasicInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductBasicInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Product_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Product_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_ID;
        
        public getProductBasicInfoRequest() {
        }
        
        public getProductBasicInfoRequest(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID) {
            this.Product_Type = Product_Type;
            this.Product_Name = Product_Name;
            this.CNC_ID = CNC_ID;
            this.vMachine_ID = vMachine_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductBasicInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductBasicInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.MachineInfomation.ProductBasicInfo getProductBasicInfoResult;
        
        public getProductBasicInfoResponse() {
        }
        
        public getProductBasicInfoResponse(IPS.MachineInfomation.ProductBasicInfo getProductBasicInfoResult) {
            this.getProductBasicInfoResult = getProductBasicInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductionHistoInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductionHistoInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Ptype;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pname;
        
        public getProductionHistoInfoRequest() {
        }
        
        public getProductionHistoInfoRequest(string Ptype, string Pname) {
            this.Ptype = Ptype;
            this.Pname = Pname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductionHistoInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductionHistoInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getProductionHistoInfoResult;
        
        public getProductionHistoInfoResponse() {
        }
        
        public getProductionHistoInfoResponse(string[][] getProductionHistoInfoResult) {
            this.getProductionHistoInfoResult = getProductionHistoInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServiceBroker_sendDataCollectionReport_Return", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ServiceBroker_sendDataCollectionReport_ReturnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string inAnswer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string inDCP_ID;
        
        public ServiceBroker_sendDataCollectionReport_ReturnRequest() {
        }
        
        public ServiceBroker_sendDataCollectionReport_ReturnRequest(string inAnswer, string inDCP_ID) {
            this.inAnswer = inAnswer;
            this.inDCP_ID = inDCP_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServiceBroker_sendDataCollectionReport_ReturnResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ServiceBroker_sendDataCollectionReport_ReturnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ServiceBroker_sendDataCollectionReport_ReturnResult;
        
        public ServiceBroker_sendDataCollectionReport_ReturnResponse() {
        }
        
        public ServiceBroker_sendDataCollectionReport_ReturnResponse(bool ServiceBroker_sendDataCollectionReport_ReturnResult) {
            this.ServiceBroker_sendDataCollectionReport_ReturnResult = ServiceBroker_sendDataCollectionReport_ReturnResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_Model_From_MM", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_Model_From_MMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
        public Model_GetContent[] Model_Info;
        
        public Get_Model_From_MMRequest() {
        }
        
        public Get_Model_From_MMRequest(Model_GetContent[] Model_Info) {
            this.Model_Info = Model_Info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_Model_From_MMResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_Model_From_MMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Get_Model_From_MMResult;
        
        public Get_Model_From_MMResponse() {
        }
        
        public Get_Model_From_MMResponse(bool Get_Model_From_MMResult) {
            this.Get_Model_From_MMResult = Get_Model_From_MMResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="get_vMachineIP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class get_vMachineIPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int ModelInfo_Count;
        
        public get_vMachineIPRequest() {
        }
        
        public get_vMachineIPRequest(string vMachine_ID, int ModelInfo_Count) {
            this.vMachine_ID = vMachine_ID;
            this.ModelInfo_Count = ModelInfo_Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="get_vMachineIPResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class get_vMachineIPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] get_vMachineIPResult;
        
        public get_vMachineIPResponse() {
        }
        
        public get_vMachineIPResponse(string[] get_vMachineIPResult) {
            this.get_vMachineIPResult = get_vMachineIPResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentInformationList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentInformationListRequest {
        
        public getEquipmentInformationListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentInformationListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentInformationListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ModelManagementServices")]
        public EquipmentInformation[] getEquipmentInformationListResult;
        
        public getEquipmentInformationListResponse() {
        }
        
        public getEquipmentInformationListResponse(EquipmentInformation[] getEquipmentInformationListResult) {
            this.getEquipmentInformationListResult = getEquipmentInformationListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCompanyInfoRequest {
        
        public GetCompanyInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCompanyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCompanyInfoResult;
        
        public GetCompanyInfoResponse() {
        }
        
        public GetCompanyInfoResponse(string GetCompanyInfoResult) {
            this.GetCompanyInfoResult = GetCompanyInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceBrokerInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceBrokerInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XMLFile;
        
        public GetServiceBrokerInfoRequest() {
        }
        
        public GetServiceBrokerInfoRequest(string XMLFile) {
            this.XMLFile = XMLFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceBrokerInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceBrokerInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetServiceBrokerInfoResult;
        
        public GetServiceBrokerInfoResponse() {
        }
        
        public GetServiceBrokerInfoResponse(string GetServiceBrokerInfoResult) {
            this.GetServiceBrokerInfoResult = GetServiceBrokerInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvMachineCNCInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetvMachineCNCInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XMLFile;
        
        public GetvMachineCNCInfoRequest() {
        }
        
        public GetvMachineCNCInfoRequest(string XMLFile) {
            this.XMLFile = XMLFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvMachineCNCInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetvMachineCNCInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetvMachineCNCInfoResult;
        
        public GetvMachineCNCInfoResponse() {
        }
        
        public GetvMachineCNCInfoResponse(string GetvMachineCNCInfoResult) {
            this.GetvMachineCNCInfoResult = GetvMachineCNCInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvMachineCNCInfo_Ontology", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetvMachineCNCInfo_OntologyRequest {
        
        public GetvMachineCNCInfo_OntologyRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvMachineCNCInfo_OntologyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetvMachineCNCInfo_OntologyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetvMachineCNCInfo_OntologyResult;
        
        public GetvMachineCNCInfo_OntologyResponse() {
        }
        
        public GetvMachineCNCInfo_OntologyResponse(string GetvMachineCNCInfo_OntologyResult) {
            this.GetvMachineCNCInfo_OntologyResult = GetvMachineCNCInfo_OntologyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadNCFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadNCFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XMLFile;
        
        public DownloadNCFileRequest() {
        }
        
        public DownloadNCFileRequest(string XMLFile) {
            this.XMLFile = XMLFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadNCFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadNCFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool DownloadNCFileResult;
        
        public DownloadNCFileResponse() {
        }
        
        public DownloadNCFileResponse(bool DownloadNCFileResult) {
            this.DownloadNCFileResult = DownloadNCFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_vMachineInfo_Ontology", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_vMachineInfo_OntologyRequest {
        
        public Get_vMachineInfo_OntologyRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_vMachineInfo_OntologyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_vMachineInfo_OntologyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Get_vMachineInfo_OntologyResult;
        
        public Get_vMachineInfo_OntologyResponse() {
        }
        
        public Get_vMachineInfo_OntologyResponse(string Get_vMachineInfo_OntologyResult) {
            this.Get_vMachineInfo_OntologyResult = Get_vMachineInfo_OntologyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CNCInfo_Ontology", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CNCInfo_OntologyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_ID;
        
        public Get_CNCInfo_OntologyRequest() {
        }
        
        public Get_CNCInfo_OntologyRequest(string vMachine_ID) {
            this.vMachine_ID = vMachine_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CNCInfo_OntologyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CNCInfo_OntologyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Get_CNCInfo_OntologyResult;
        
        public Get_CNCInfo_OntologyResponse() {
        }
        
        public Get_CNCInfo_OntologyResponse(string Get_CNCInfo_OntologyResult) {
            this.Get_CNCInfo_OntologyResult = Get_CNCInfo_OntologyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="kinfe_Info", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class kinfe_InfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XMLFile;
        
        public kinfe_InfoRequest() {
        }
        
        public kinfe_InfoRequest(string XMLFile) {
            this.XMLFile = XMLFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="kinfe_InfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class kinfe_InfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] kinfe_InfoResult;
        
        public kinfe_InfoResponse() {
        }
        
        public kinfe_InfoResponse(string[][] kinfe_InfoResult) {
            this.kinfe_InfoResult = kinfe_InfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineListRequest {
        
        public getVmachineListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Vmachine[] getVmachineListResult;
        
        public getVmachineListResponse() {
        }
        
        public getVmachineListResponse(Vmachine[] getVmachineListResult) {
            this.getVmachineListResult = getVmachineListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerVmachine", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerVmachineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cem;
        
        public registerVmachineRequest() {
        }
        
        public registerVmachineRequest(string cem) {
            this.cem = cem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerVmachineResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerVmachineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registerVmachineResult;
        
        public registerVmachineResponse() {
        }
        
        public registerVmachineResponse(string registerVmachineResult) {
            this.registerVmachineResult = registerVmachineResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendAlarm", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class sendAlarmRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string eventDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int errorCode;
        
        public sendAlarmRequest() {
        }
        
        public sendAlarmRequest(string vMachineName, string eventDescription, int errorCode) {
            this.vMachineName = vMachineName;
            this.eventDescription = eventDescription;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendAlarmResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class sendAlarmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool sendAlarmResult;
        
        public sendAlarmResponse() {
        }
        
        public sendAlarmResponse(bool sendAlarmResult) {
            this.sendAlarmResult = sendAlarmResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        public getEquipmentListRequest() {
        }
        
        public getEquipmentListRequest(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public EquipmentType[] getEquipmentListResult;
        
        public getEquipmentListResponse() {
        }
        
        public getEquipmentListResponse(EquipmentType[] getEquipmentListResult) {
            this.getEquipmentListResult = getEquipmentListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="fanOutModel", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class fanOutModelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.MachineInfomation.ModelFull modelfull;
        
        public fanOutModelRequest() {
        }
        
        public fanOutModelRequest(IPS.MachineInfomation.ModelFull modelfull) {
            this.modelfull = modelfull;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="fanOutModelResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class fanOutModelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fanOutModelResult;
        
        public fanOutModelResponse() {
        }
        
        public fanOutModelResponse(string fanOutModelResult) {
            this.fanOutModelResult = fanOutModelResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRunningModelInformation", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getRunningModelInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName;
        
        public getRunningModelInformationRequest() {
        }
        
        public getRunningModelInformationRequest(string vMachineId, string userName) {
            this.vMachineId = vMachineId;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRunningModelInformationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getRunningModelInformationResponse {
        
        public getRunningModelInformationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineInformationList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineInformationListRequest {
        
        public getVmachineInformationListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineInformationListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineInformationListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Vmachine[] getVmachineInformationListResult;
        
        public getVmachineInformationListResponse() {
        }
        
        public getVmachineInformationListResponse(Vmachine[] getVmachineInformationListResult) {
            this.getVmachineInformationListResult = getVmachineInformationListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sensor;
        
        public uploadSTDBRequest() {
        }
        
        public uploadSTDBRequest(string vMachineID, string equipmentID, string sensor) {
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
            this.sensor = sensor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.MachineInfomation.ArrayOfXElement uploadSTDBResult;
        
        public uploadSTDBResponse() {
        }
        
        public uploadSTDBResponse(IPS.MachineInfomation.ArrayOfXElement uploadSTDBResult) {
            this.uploadSTDBResult = uploadSTDBResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadDefOfSTDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadDefOfSTDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.MachineInfomation.ArrayOfXElement ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        public uploadDefOfSTDBRequest() {
        }
        
        public uploadDefOfSTDBRequest(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.ds = ds;
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadDefOfSTDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadDefOfSTDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool uploadDefOfSTDBResult;
        
        public uploadDefOfSTDBResponse() {
        }
        
        public uploadDefOfSTDBResponse(bool uploadDefOfSTDBResult) {
            this.uploadDefOfSTDBResult = uploadDefOfSTDBResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateVMResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateVMResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IPS.MachineInfomation.ArrayOfXElement ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string equipmentID;
        
        public updateVMResultRequest() {
        }
        
        public updateVMResultRequest(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.ds = ds;
            this.vMachineID = vMachineID;
            this.equipmentID = equipmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateVMResultResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateVMResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateVMResultResult;
        
        public updateVMResultResponse() {
        }
        
        public updateVMResultResponse(string updateVMResultResult) {
            this.updateVMResultResult = updateVMResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentListByVmachine", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListByVmachineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineName;
        
        public getEquipmentListByVmachineRequest() {
        }
        
        public getEquipmentListByVmachineRequest(string vMachineName) {
            this.vMachineName = vMachineName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEquipmentListByVmachineResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEquipmentListByVmachineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getEquipmentListByVmachineResult;
        
        public getEquipmentListByVmachineResponse() {
        }
        
        public getEquipmentListByVmachineResponse(string[] getEquipmentListByVmachineResult) {
            this.getEquipmentListByVmachineResult = getEquipmentListByVmachineResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_vNachineState", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Insert_vNachineStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Num;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_ControllerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Service_Status;
        
        public Insert_vNachineStateRequest() {
        }
        
        public Insert_vNachineStateRequest(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.vMachine_Name = vMachine_Name;
            this.vMachine_IP = vMachine_IP;
            this.vMachine_State = vMachine_State;
            this.Cnc_Num = Cnc_Num;
            this.Cnc_State = Cnc_State;
            this.Cnc_IP = Cnc_IP;
            this.Cnc_Type = Cnc_Type;
            this.Cnc_ControllerType = Cnc_ControllerType;
            this.Service_Status = Service_Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_vNachineStateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Insert_vNachineStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Insert_vNachineStateResult;
        
        public Insert_vNachineStateResponse() {
        }
        
        public Insert_vNachineStateResponse(string Insert_vNachineStateResult) {
            this.Insert_vNachineStateResult = Insert_vNachineStateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_vNachineState", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Update_vNachineStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ovMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string oCnc_Num;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Num;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_ControllerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Service_Status;
        
        public Update_vNachineStateRequest() {
        }
        
        public Update_vNachineStateRequest(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.ovMachine_Name = ovMachine_Name;
            this.oCnc_Num = oCnc_Num;
            this.vMachine_Name = vMachine_Name;
            this.vMachine_IP = vMachine_IP;
            this.vMachine_State = vMachine_State;
            this.Cnc_Num = Cnc_Num;
            this.Cnc_State = Cnc_State;
            this.Cnc_IP = Cnc_IP;
            this.Cnc_Type = Cnc_Type;
            this.Cnc_ControllerType = Cnc_ControllerType;
            this.Service_Status = Service_Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_vNachineStateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Update_vNachineStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Update_vNachineStateResult;
        
        public Update_vNachineStateResponse() {
        }
        
        public Update_vNachineStateResponse(string Update_vNachineStateResult) {
            this.Update_vNachineStateResult = Update_vNachineStateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete_vMachibne", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Delete_vMachibneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Num;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool flag_vMachine;
        
        public Delete_vMachibneRequest() {
        }
        
        public Delete_vMachibneRequest(string Cnc_Num, string vMachine_Name, bool flag_vMachine) {
            this.Cnc_Num = Cnc_Num;
            this.vMachine_Name = vMachine_Name;
            this.flag_vMachine = flag_vMachine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete_vMachibneResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Delete_vMachibneResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Delete_vMachibneResult;
        
        public Delete_vMachibneResponse() {
        }
        
        public Delete_vMachibneResponse(string Delete_vMachibneResult) {
            this.Delete_vMachibneResult = Delete_vMachibneResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineList1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineList1Request {
        
        public getVmachineList1Request() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVmachineList1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getVmachineList1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Vmachine[] getVmachineList1Result;
        
        public getVmachineList1Response() {
        }
        
        public getVmachineList1Response(Vmachine[] getVmachineList1Result) {
            this.getVmachineList1Result = getVmachineList1Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="vMachine_RegInfo_Check", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class vMachine_RegInfo_CheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_State;
        
        public vMachine_RegInfo_CheckRequest() {
        }
        
        public vMachine_RegInfo_CheckRequest(string vMachine_Name, string vMachine_IP, string vMachine_State) {
            this.vMachine_Name = vMachine_Name;
            this.vMachine_IP = vMachine_IP;
            this.vMachine_State = vMachine_State;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="vMachine_RegInfo_CheckResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class vMachine_RegInfo_CheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_RegInfo_CheckResult;
        
        public vMachine_RegInfo_CheckResponse() {
        }
        
        public vMachine_RegInfo_CheckResponse(string vMachine_RegInfo_CheckResult) {
            this.vMachine_RegInfo_CheckResult = vMachine_RegInfo_CheckResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Cnc_State_Check", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Cnc_State_CheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachine_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Num;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_State;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_ControllerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Service_Status;
        
        public Cnc_State_CheckRequest() {
        }
        
        public Cnc_State_CheckRequest(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.vMachine_Name = vMachine_Name;
            this.vMachine_IP = vMachine_IP;
            this.vMachine_State = vMachine_State;
            this.Cnc_Num = Cnc_Num;
            this.Cnc_State = Cnc_State;
            this.Cnc_IP = Cnc_IP;
            this.Cnc_Type = Cnc_Type;
            this.Cnc_ControllerType = Cnc_ControllerType;
            this.Service_Status = Service_Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Cnc_State_CheckResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Cnc_State_CheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnc_State_CheckResult;
        
        public Cnc_State_CheckResponse() {
        }
        
        public Cnc_State_CheckResponse(string Cnc_State_CheckResult) {
            this.Cnc_State_CheckResult = Cnc_State_CheckResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="test", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class testRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string s;
        
        public testRequest() {
        }
        
        public testRequest(string s) {
            this.s = s;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="testResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class testResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string testResult;
        
        public testResponse() {
        }
        
        public testResponse(string testResult) {
            this.testResult = testResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="testv", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class testvRequest {
        
        public testvRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="testvResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class testvResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string testvResult;
        
        public testvResponse() {
        }
        
        public testvResponse(string testvResult) {
            this.testvResult = testvResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerCNCInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerCNCInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_machine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNCIP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNCState;
        
        public registerCNCInfoRequest() {
        }
        
        public registerCNCInfoRequest(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState) {
            this.v_machine_ID = v_machine_ID;
            this.CNC_ID = CNC_ID;
            this.CNCIP = CNCIP;
            this.CNC_Type = CNC_Type;
            this.CNCState = CNCState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerCNCInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerCNCInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool registerCNCInfoResult;
        
        public registerCNCInfoResponse() {
        }
        
        public registerCNCInfoResponse(bool registerCNCInfoResult) {
            this.registerCNCInfoResult = registerCNCInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registervMachineInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registervMachineInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_machine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_MachineIP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] CNCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vMachineState;
        
        public registervMachineInfoRequest() {
        }
        
        public registervMachineInfoRequest(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState) {
            this.v_machine_ID = v_machine_ID;
            this.v_MachineIP = v_MachineIP;
            this.CNCID = CNCID;
            this.vMachineState = vMachineState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registervMachineInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registervMachineInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool registervMachineInfoResult;
        
        public registervMachineInfoResponse() {
        }
        
        public registervMachineInfoResponse(bool registervMachineInfoResult) {
            this.registervMachineInfoResult = registervMachineInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="modify_cncstate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class modify_cncstateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_machine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNCState;
        
        public modify_cncstateRequest() {
        }
        
        public modify_cncstateRequest(string v_machine_ID, string CNC_ID, string CNCState) {
            this.v_machine_ID = v_machine_ID;
            this.CNC_ID = CNC_ID;
            this.CNCState = CNCState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="modify_cncstateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class modify_cncstateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool modify_cncstateResult;
        
        public modify_cncstateResponse() {
        }
        
        public modify_cncstateResponse(bool modify_cncstateResult) {
            this.modify_cncstateResult = modify_cncstateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="modify_vMachinestate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class modify_vMachinestateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_machine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_machine_IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string State;
        
        public modify_vMachinestateRequest() {
        }
        
        public modify_vMachinestateRequest(string v_machine_ID, string v_machine_IP, string State) {
            this.v_machine_ID = v_machine_ID;
            this.v_machine_IP = v_machine_IP;
            this.State = State;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="modify_vMachinestateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class modify_vMachinestateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool modify_vMachinestateResult;
        
        public modify_vMachinestateResponse() {
        }
        
        public modify_vMachinestateResponse(bool modify_vMachinestateResult) {
            this.modify_vMachinestateResult = modify_vMachinestateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfoRequest {
        
        public getProductInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getProductInfoResult;
        
        public getProductInfoResponse() {
        }
        
        public getProductInfoResponse(string[][] getProductInfoResult) {
            this.getProductInfoResult = getProductInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerProductionHistory", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerProductionHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProductName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProductType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkPieceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_MachineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkPieceState;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public System.DateTime Process_StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.DateTime Process_EndTime;
        
        public registerProductionHistoryRequest() {
        }
        
        public registerProductionHistoryRequest(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime) {
            this.ProductName = ProductName;
            this.ProductType = ProductType;
            this.WorkPieceID = WorkPieceID;
            this.v_MachineID = v_MachineID;
            this.CNC_ID = CNC_ID;
            this.CNC_Type = CNC_Type;
            this.WorkPieceState = WorkPieceState;
            this.Process_StartTime = Process_StartTime;
            this.Process_EndTime = Process_EndTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerProductionHistoryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerProductionHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool registerProductionHistoryResult;
        
        public registerProductionHistoryResponse() {
        }
        
        public registerProductionHistoryResponse(bool registerProductionHistoryResult) {
            this.registerProductionHistoryResult = registerProductionHistoryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerProductInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerProductInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CNC_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string v_Machine_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CLFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProductType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string inProductTypeSub_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string inMetrology_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string inBlock_ID;
        
        public registerProductInfoRequest() {
        }
        
        public registerProductInfoRequest(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID) {
            this.CNC_ID = CNC_ID;
            this.v_Machine_ID = v_Machine_ID;
            this.CLFile = CLFile;
            this.ProductType = ProductType;
            this.inProductTypeSub_ID = inProductTypeSub_ID;
            this.inMetrology_ID = inMetrology_ID;
            this.inBlock_ID = inBlock_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerProductInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class registerProductInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registerProductInfoResult;
        
        public registerProductInfoResponse() {
        }
        
        public registerProductInfoResponse(string registerProductInfoResult) {
            this.registerProductInfoResult = registerProductInfoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : IPS.MachineInfomation.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductBasicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductBasicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IPS.MachineInfomation.ProductBasicInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IPS.MachineInfomation.ProductBasicInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductionHistoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductionHistoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBroker_sendDataCollectionReport_ReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ServiceBroker_sendDataCollectionReport_ReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_Model_From_MMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_Model_From_MMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class get_vMachineIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public get_vMachineIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEquipmentInformationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEquipmentInformationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EquipmentInformation[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EquipmentInformation[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceBrokerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceBrokerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetvMachineCNCInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetvMachineCNCInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetvMachineCNCInfo_OntologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetvMachineCNCInfo_OntologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadNCFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadNCFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_vMachineInfo_OntologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_vMachineInfo_OntologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_CNCInfo_OntologyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_CNCInfo_OntologyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class kinfe_InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public kinfe_InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVmachineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVmachineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Vmachine[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Vmachine[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerVmachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerVmachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sendAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sendAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEquipmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEquipmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EquipmentType[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EquipmentType[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class fanOutModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public fanOutModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVmachineInformationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVmachineInformationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Vmachine[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Vmachine[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class uploadSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public uploadSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IPS.MachineInfomation.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IPS.MachineInfomation.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class uploadDefOfSTDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public uploadDefOfSTDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateVMResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateVMResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEquipmentListByVmachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEquipmentListByVmachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Insert_vNachineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Insert_vNachineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Update_vNachineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Update_vNachineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Delete_vMachibneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Delete_vMachibneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVmachineList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVmachineList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Vmachine[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Vmachine[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class vMachine_RegInfo_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public vMachine_RegInfo_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Cnc_State_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Cnc_State_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerCNCInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerCNCInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registervMachineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registervMachineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class modify_cncstateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public modify_cncstateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class modify_vMachinestateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public modify_vMachinestateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerProductionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerProductionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<IPS.MachineInfomation.IService1>, IPS.MachineInfomation.IService1 {
        
        private BeginOperationDelegate onBegingetProductBasicInfoDelegate;
        
        private EndOperationDelegate onEndgetProductBasicInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductBasicInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductionHistoInfoDelegate;
        
        private EndOperationDelegate onEndgetProductionHistoInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductionHistoInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDCPDelegate;
        
        private EndOperationDelegate onEndgetDCPDelegate;
        
        private System.Threading.SendOrPostCallback ongetDCPCompletedDelegate;
        
        private BeginOperationDelegate onBeginServiceBroker_sendDataCollectionReport_ReturnDelegate;
        
        private EndOperationDelegate onEndServiceBroker_sendDataCollectionReport_ReturnDelegate;
        
        private System.Threading.SendOrPostCallback onServiceBroker_sendDataCollectionReport_ReturnCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_Model_From_MMDelegate;
        
        private EndOperationDelegate onEndGet_Model_From_MMDelegate;
        
        private System.Threading.SendOrPostCallback onGet_Model_From_MMCompletedDelegate;
        
        private BeginOperationDelegate onBeginget_vMachineIPDelegate;
        
        private EndOperationDelegate onEndget_vMachineIPDelegate;
        
        private System.Threading.SendOrPostCallback onget_vMachineIPCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEquipmentInformationListDelegate;
        
        private EndOperationDelegate onEndgetEquipmentInformationListDelegate;
        
        private System.Threading.SendOrPostCallback ongetEquipmentInformationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompanyInfoDelegate;
        
        private EndOperationDelegate onEndGetCompanyInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServiceBrokerInfoDelegate;
        
        private EndOperationDelegate onEndGetServiceBrokerInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceBrokerInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetvMachineCNCInfoDelegate;
        
        private EndOperationDelegate onEndGetvMachineCNCInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetvMachineCNCInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetvMachineCNCInfo_OntologyDelegate;
        
        private EndOperationDelegate onEndGetvMachineCNCInfo_OntologyDelegate;
        
        private System.Threading.SendOrPostCallback onGetvMachineCNCInfo_OntologyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadNCFileDelegate;
        
        private EndOperationDelegate onEndDownloadNCFileDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadNCFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_vMachineInfo_OntologyDelegate;
        
        private EndOperationDelegate onEndGet_vMachineInfo_OntologyDelegate;
        
        private System.Threading.SendOrPostCallback onGet_vMachineInfo_OntologyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_CNCInfo_OntologyDelegate;
        
        private EndOperationDelegate onEndGet_CNCInfo_OntologyDelegate;
        
        private System.Threading.SendOrPostCallback onGet_CNCInfo_OntologyCompletedDelegate;
        
        private BeginOperationDelegate onBeginkinfe_InfoDelegate;
        
        private EndOperationDelegate onEndkinfe_InfoDelegate;
        
        private System.Threading.SendOrPostCallback onkinfe_InfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetVmachineListDelegate;
        
        private EndOperationDelegate onEndgetVmachineListDelegate;
        
        private System.Threading.SendOrPostCallback ongetVmachineListCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterVmachineDelegate;
        
        private EndOperationDelegate onEndregisterVmachineDelegate;
        
        private System.Threading.SendOrPostCallback onregisterVmachineCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendAlarmDelegate;
        
        private EndOperationDelegate onEndsendAlarmDelegate;
        
        private System.Threading.SendOrPostCallback onsendAlarmCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEquipmentListDelegate;
        
        private EndOperationDelegate onEndgetEquipmentListDelegate;
        
        private System.Threading.SendOrPostCallback ongetEquipmentListCompletedDelegate;
        
        private BeginOperationDelegate onBeginfanOutModelDelegate;
        
        private EndOperationDelegate onEndfanOutModelDelegate;
        
        private System.Threading.SendOrPostCallback onfanOutModelCompletedDelegate;
        
        private BeginOperationDelegate onBegingetVmachineInformationDelegate;
        
        private EndOperationDelegate onEndgetVmachineInformationDelegate;
        
        private System.Threading.SendOrPostCallback ongetVmachineInformationCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRunningModelInformationDelegate;
        
        private EndOperationDelegate onEndgetRunningModelInformationDelegate;
        
        private System.Threading.SendOrPostCallback ongetRunningModelInformationCompletedDelegate;
        
        private BeginOperationDelegate onBegingetVmachineInformationListDelegate;
        
        private EndOperationDelegate onEndgetVmachineInformationListDelegate;
        
        private System.Threading.SendOrPostCallback ongetVmachineInformationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginuploadSTDBDelegate;
        
        private EndOperationDelegate onEnduploadSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onuploadSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginuploadDefOfSTDBDelegate;
        
        private EndOperationDelegate onEnduploadDefOfSTDBDelegate;
        
        private System.Threading.SendOrPostCallback onuploadDefOfSTDBCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateVMResultDelegate;
        
        private EndOperationDelegate onEndupdateVMResultDelegate;
        
        private System.Threading.SendOrPostCallback onupdateVMResultCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEquipmentListByVmachineDelegate;
        
        private EndOperationDelegate onEndgetEquipmentListByVmachineDelegate;
        
        private System.Threading.SendOrPostCallback ongetEquipmentListByVmachineCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsert_vNachineStateDelegate;
        
        private EndOperationDelegate onEndInsert_vNachineStateDelegate;
        
        private System.Threading.SendOrPostCallback onInsert_vNachineStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdate_vNachineStateDelegate;
        
        private EndOperationDelegate onEndUpdate_vNachineStateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdate_vNachineStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelete_vMachibneDelegate;
        
        private EndOperationDelegate onEndDelete_vMachibneDelegate;
        
        private System.Threading.SendOrPostCallback onDelete_vMachibneCompletedDelegate;
        
        private BeginOperationDelegate onBegingetVmachineList1Delegate;
        
        private EndOperationDelegate onEndgetVmachineList1Delegate;
        
        private System.Threading.SendOrPostCallback ongetVmachineList1CompletedDelegate;
        
        private BeginOperationDelegate onBeginvMachine_RegInfo_CheckDelegate;
        
        private EndOperationDelegate onEndvMachine_RegInfo_CheckDelegate;
        
        private System.Threading.SendOrPostCallback onvMachine_RegInfo_CheckCompletedDelegate;
        
        private BeginOperationDelegate onBeginCnc_State_CheckDelegate;
        
        private EndOperationDelegate onEndCnc_State_CheckDelegate;
        
        private System.Threading.SendOrPostCallback onCnc_State_CheckCompletedDelegate;
        
        private BeginOperationDelegate onBegintestDelegate;
        
        private EndOperationDelegate onEndtestDelegate;
        
        private System.Threading.SendOrPostCallback ontestCompletedDelegate;
        
        private BeginOperationDelegate onBegintestvDelegate;
        
        private EndOperationDelegate onEndtestvDelegate;
        
        private System.Threading.SendOrPostCallback ontestvCompletedDelegate;
        
        private BeginOperationDelegate onBegintestmDelegate;
        
        private EndOperationDelegate onEndtestmDelegate;
        
        private System.Threading.SendOrPostCallback ontestmCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterCNCInfoDelegate;
        
        private EndOperationDelegate onEndregisterCNCInfoDelegate;
        
        private System.Threading.SendOrPostCallback onregisterCNCInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginregistervMachineInfoDelegate;
        
        private EndOperationDelegate onEndregistervMachineInfoDelegate;
        
        private System.Threading.SendOrPostCallback onregistervMachineInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginmodify_cncstateDelegate;
        
        private EndOperationDelegate onEndmodify_cncstateDelegate;
        
        private System.Threading.SendOrPostCallback onmodify_cncstateCompletedDelegate;
        
        private BeginOperationDelegate onBeginmodify_vMachinestateDelegate;
        
        private EndOperationDelegate onEndmodify_vMachinestateDelegate;
        
        private System.Threading.SendOrPostCallback onmodify_vMachinestateCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProductInfoDelegate;
        
        private EndOperationDelegate onEndgetProductInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetProductInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterProductionHistoryDelegate;
        
        private EndOperationDelegate onEndregisterProductionHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onregisterProductionHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterProductInfoDelegate;
        
        private EndOperationDelegate onEndregisterProductInfoDelegate;
        
        private System.Threading.SendOrPostCallback onregisterProductInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("無法設定 CookieContainer。請確定繫結包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<getProductBasicInfoCompletedEventArgs> getProductBasicInfoCompleted;
        
        public event System.EventHandler<getProductionHistoInfoCompletedEventArgs> getProductionHistoInfoCompleted;
        
        public event System.EventHandler<getDCPCompletedEventArgs> getDCPCompleted;
        
        public event System.EventHandler<ServiceBroker_sendDataCollectionReport_ReturnCompletedEventArgs> ServiceBroker_sendDataCollectionReport_ReturnCompleted;
        
        public event System.EventHandler<Get_Model_From_MMCompletedEventArgs> Get_Model_From_MMCompleted;
        
        public event System.EventHandler<get_vMachineIPCompletedEventArgs> get_vMachineIPCompleted;
        
        public event System.EventHandler<getEquipmentInformationListCompletedEventArgs> getEquipmentInformationListCompleted;
        
        public event System.EventHandler<GetCompanyInfoCompletedEventArgs> GetCompanyInfoCompleted;
        
        public event System.EventHandler<GetServiceBrokerInfoCompletedEventArgs> GetServiceBrokerInfoCompleted;
        
        public event System.EventHandler<GetvMachineCNCInfoCompletedEventArgs> GetvMachineCNCInfoCompleted;
        
        public event System.EventHandler<GetvMachineCNCInfo_OntologyCompletedEventArgs> GetvMachineCNCInfo_OntologyCompleted;
        
        public event System.EventHandler<DownloadNCFileCompletedEventArgs> DownloadNCFileCompleted;
        
        public event System.EventHandler<Get_vMachineInfo_OntologyCompletedEventArgs> Get_vMachineInfo_OntologyCompleted;
        
        public event System.EventHandler<Get_CNCInfo_OntologyCompletedEventArgs> Get_CNCInfo_OntologyCompleted;
        
        public event System.EventHandler<kinfe_InfoCompletedEventArgs> kinfe_InfoCompleted;
        
        public event System.EventHandler<getVmachineListCompletedEventArgs> getVmachineListCompleted;
        
        public event System.EventHandler<registerVmachineCompletedEventArgs> registerVmachineCompleted;
        
        public event System.EventHandler<sendAlarmCompletedEventArgs> sendAlarmCompleted;
        
        public event System.EventHandler<getEquipmentListCompletedEventArgs> getEquipmentListCompleted;
        
        public event System.EventHandler<fanOutModelCompletedEventArgs> fanOutModelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> getVmachineInformationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> getRunningModelInformationCompleted;
        
        public event System.EventHandler<getVmachineInformationListCompletedEventArgs> getVmachineInformationListCompleted;
        
        public event System.EventHandler<uploadSTDBCompletedEventArgs> uploadSTDBCompleted;
        
        public event System.EventHandler<uploadDefOfSTDBCompletedEventArgs> uploadDefOfSTDBCompleted;
        
        public event System.EventHandler<updateVMResultCompletedEventArgs> updateVMResultCompleted;
        
        public event System.EventHandler<getEquipmentListByVmachineCompletedEventArgs> getEquipmentListByVmachineCompleted;
        
        public event System.EventHandler<Insert_vNachineStateCompletedEventArgs> Insert_vNachineStateCompleted;
        
        public event System.EventHandler<Update_vNachineStateCompletedEventArgs> Update_vNachineStateCompleted;
        
        public event System.EventHandler<Delete_vMachibneCompletedEventArgs> Delete_vMachibneCompleted;
        
        public event System.EventHandler<getVmachineList1CompletedEventArgs> getVmachineList1Completed;
        
        public event System.EventHandler<vMachine_RegInfo_CheckCompletedEventArgs> vMachine_RegInfo_CheckCompleted;
        
        public event System.EventHandler<Cnc_State_CheckCompletedEventArgs> Cnc_State_CheckCompleted;
        
        public event System.EventHandler<testCompletedEventArgs> testCompleted;
        
        public event System.EventHandler<testvCompletedEventArgs> testvCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> testmCompleted;
        
        public event System.EventHandler<registerCNCInfoCompletedEventArgs> registerCNCInfoCompleted;
        
        public event System.EventHandler<registervMachineInfoCompletedEventArgs> registervMachineInfoCompleted;
        
        public event System.EventHandler<modify_cncstateCompletedEventArgs> modify_cncstateCompleted;
        
        public event System.EventHandler<modify_vMachinestateCompletedEventArgs> modify_vMachinestateCompleted;
        
        public event System.EventHandler<getProductInfoCompletedEventArgs> getProductInfoCompleted;
        
        public event System.EventHandler<registerProductionHistoryCompletedEventArgs> registerProductionHistoryCompleted;
        
        public event System.EventHandler<registerProductInfoCompletedEventArgs> registerProductInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetProductBasicInfo(IPS.MachineInfomation.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductBasicInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductBasicInfo(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getProductBasicInfoRequest inValue = new IPS.MachineInfomation.getProductBasicInfoRequest();
            inValue.Product_Type = Product_Type;
            inValue.Product_Name = Product_Name;
            inValue.CNC_ID = CNC_ID;
            inValue.vMachine_ID = vMachine_ID;
            return ((IPS.MachineInfomation.IService1)(this)).BegingetProductBasicInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getProductBasicInfoResponse IPS.MachineInfomation.IService1.EndgetProductBasicInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductBasicInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private IPS.MachineInfomation.ProductBasicInfo EndgetProductBasicInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.getProductBasicInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetProductBasicInfo(result);
            return retVal.getProductBasicInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductBasicInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Product_Type = ((string)(inValues[0]));
            string Product_Name = ((string)(inValues[1]));
            string CNC_ID = ((string)(inValues[2]));
            string vMachine_ID = ((string)(inValues[3]));
            return this.BegingetProductBasicInfo(Product_Type, Product_Name, CNC_ID, vMachine_ID, callback, asyncState);
        }
        
        private object[] OnEndgetProductBasicInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.ProductBasicInfo retVal = this.EndgetProductBasicInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductBasicInfoCompleted(object state) {
            if ((this.getProductBasicInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductBasicInfoCompleted(this, new getProductBasicInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductBasicInfoAsync(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID) {
            this.getProductBasicInfoAsync(Product_Type, Product_Name, CNC_ID, vMachine_ID, null);
        }
        
        public void getProductBasicInfoAsync(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID, object userState) {
            if ((this.onBegingetProductBasicInfoDelegate == null)) {
                this.onBegingetProductBasicInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductBasicInfo);
            }
            if ((this.onEndgetProductBasicInfoDelegate == null)) {
                this.onEndgetProductBasicInfoDelegate = new EndOperationDelegate(this.OnEndgetProductBasicInfo);
            }
            if ((this.ongetProductBasicInfoCompletedDelegate == null)) {
                this.ongetProductBasicInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductBasicInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductBasicInfoDelegate, new object[] {
                        Product_Type,
                        Product_Name,
                        CNC_ID,
                        vMachine_ID}, this.onEndgetProductBasicInfoDelegate, this.ongetProductBasicInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetProductionHistoInfo(IPS.MachineInfomation.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductionHistoInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductionHistoInfo(string Ptype, string Pname, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getProductionHistoInfoRequest inValue = new IPS.MachineInfomation.getProductionHistoInfoRequest();
            inValue.Ptype = Ptype;
            inValue.Pname = Pname;
            return ((IPS.MachineInfomation.IService1)(this)).BegingetProductionHistoInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getProductionHistoInfoResponse IPS.MachineInfomation.IService1.EndgetProductionHistoInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductionHistoInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndgetProductionHistoInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.getProductionHistoInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetProductionHistoInfo(result);
            return retVal.getProductionHistoInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductionHistoInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Ptype = ((string)(inValues[0]));
            string Pname = ((string)(inValues[1]));
            return this.BegingetProductionHistoInfo(Ptype, Pname, callback, asyncState);
        }
        
        private object[] OnEndgetProductionHistoInfo(System.IAsyncResult result) {
            string[][] retVal = this.EndgetProductionHistoInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductionHistoInfoCompleted(object state) {
            if ((this.getProductionHistoInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductionHistoInfoCompleted(this, new getProductionHistoInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductionHistoInfoAsync(string Ptype, string Pname) {
            this.getProductionHistoInfoAsync(Ptype, Pname, null);
        }
        
        public void getProductionHistoInfoAsync(string Ptype, string Pname, object userState) {
            if ((this.onBegingetProductionHistoInfoDelegate == null)) {
                this.onBegingetProductionHistoInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductionHistoInfo);
            }
            if ((this.onEndgetProductionHistoInfoDelegate == null)) {
                this.onEndgetProductionHistoInfoDelegate = new EndOperationDelegate(this.OnEndgetProductionHistoInfo);
            }
            if ((this.ongetProductionHistoInfoCompletedDelegate == null)) {
                this.ongetProductionHistoInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductionHistoInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductionHistoInfoDelegate, new object[] {
                        Ptype,
                        Pname}, this.onEndgetProductionHistoInfoDelegate, this.ongetProductionHistoInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetDCP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDCP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IPS.MachineInfomation.IService1.EndgetDCP(System.IAsyncResult result) {
            return base.Channel.EndgetDCP(result);
        }
        
        private System.IAsyncResult OnBegingetDCP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IPS.MachineInfomation.IService1)(this)).BegingetDCP(callback, asyncState);
        }
        
        private object[] OnEndgetDCP(System.IAsyncResult result) {
            bool retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetDCP(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDCPCompleted(object state) {
            if ((this.getDCPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDCPCompleted(this, new getDCPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDCPAsync() {
            this.getDCPAsync(null);
        }
        
        public void getDCPAsync(object userState) {
            if ((this.onBegingetDCPDelegate == null)) {
                this.onBegingetDCPDelegate = new BeginOperationDelegate(this.OnBegingetDCP);
            }
            if ((this.onEndgetDCPDelegate == null)) {
                this.onEndgetDCPDelegate = new EndOperationDelegate(this.OnEndgetDCP);
            }
            if ((this.ongetDCPCompletedDelegate == null)) {
                this.ongetDCPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDCPCompleted);
            }
            base.InvokeAsync(this.onBegingetDCPDelegate, null, this.onEndgetDCPDelegate, this.ongetDCPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginServiceBroker_sendDataCollectionReport_Return(IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginServiceBroker_sendDataCollectionReport_Return(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginServiceBroker_sendDataCollectionReport_Return(string inAnswer, string inDCP_ID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnRequest inValue = new IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnRequest();
            inValue.inAnswer = inAnswer;
            inValue.inDCP_ID = inDCP_ID;
            return ((IPS.MachineInfomation.IService1)(this)).BeginServiceBroker_sendDataCollectionReport_Return(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse IPS.MachineInfomation.IService1.EndServiceBroker_sendDataCollectionReport_Return(System.IAsyncResult result) {
            return base.Channel.EndServiceBroker_sendDataCollectionReport_Return(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndServiceBroker_sendDataCollectionReport_Return(System.IAsyncResult result) {
            IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndServiceBroker_sendDataCollectionReport_Return(result);
            return retVal.ServiceBroker_sendDataCollectionReport_ReturnResult;
        }
        
        private System.IAsyncResult OnBeginServiceBroker_sendDataCollectionReport_Return(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inAnswer = ((string)(inValues[0]));
            string inDCP_ID = ((string)(inValues[1]));
            return this.BeginServiceBroker_sendDataCollectionReport_Return(inAnswer, inDCP_ID, callback, asyncState);
        }
        
        private object[] OnEndServiceBroker_sendDataCollectionReport_Return(System.IAsyncResult result) {
            bool retVal = this.EndServiceBroker_sendDataCollectionReport_Return(result);
            return new object[] {
                    retVal};
        }
        
        private void OnServiceBroker_sendDataCollectionReport_ReturnCompleted(object state) {
            if ((this.ServiceBroker_sendDataCollectionReport_ReturnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ServiceBroker_sendDataCollectionReport_ReturnCompleted(this, new ServiceBroker_sendDataCollectionReport_ReturnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ServiceBroker_sendDataCollectionReport_ReturnAsync(string inAnswer, string inDCP_ID) {
            this.ServiceBroker_sendDataCollectionReport_ReturnAsync(inAnswer, inDCP_ID, null);
        }
        
        public void ServiceBroker_sendDataCollectionReport_ReturnAsync(string inAnswer, string inDCP_ID, object userState) {
            if ((this.onBeginServiceBroker_sendDataCollectionReport_ReturnDelegate == null)) {
                this.onBeginServiceBroker_sendDataCollectionReport_ReturnDelegate = new BeginOperationDelegate(this.OnBeginServiceBroker_sendDataCollectionReport_Return);
            }
            if ((this.onEndServiceBroker_sendDataCollectionReport_ReturnDelegate == null)) {
                this.onEndServiceBroker_sendDataCollectionReport_ReturnDelegate = new EndOperationDelegate(this.OnEndServiceBroker_sendDataCollectionReport_Return);
            }
            if ((this.onServiceBroker_sendDataCollectionReport_ReturnCompletedDelegate == null)) {
                this.onServiceBroker_sendDataCollectionReport_ReturnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnServiceBroker_sendDataCollectionReport_ReturnCompleted);
            }
            base.InvokeAsync(this.onBeginServiceBroker_sendDataCollectionReport_ReturnDelegate, new object[] {
                        inAnswer,
                        inDCP_ID}, this.onEndServiceBroker_sendDataCollectionReport_ReturnDelegate, this.onServiceBroker_sendDataCollectionReport_ReturnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGet_Model_From_MM(IPS.MachineInfomation.Get_Model_From_MMRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_Model_From_MM(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGet_Model_From_MM(Model_GetContent[] Model_Info, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Get_Model_From_MMRequest inValue = new IPS.MachineInfomation.Get_Model_From_MMRequest();
            inValue.Model_Info = Model_Info;
            return ((IPS.MachineInfomation.IService1)(this)).BeginGet_Model_From_MM(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Get_Model_From_MMResponse IPS.MachineInfomation.IService1.EndGet_Model_From_MM(System.IAsyncResult result) {
            return base.Channel.EndGet_Model_From_MM(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGet_Model_From_MM(System.IAsyncResult result) {
            IPS.MachineInfomation.Get_Model_From_MMResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGet_Model_From_MM(result);
            return retVal.Get_Model_From_MMResult;
        }
        
        private System.IAsyncResult OnBeginGet_Model_From_MM(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Model_GetContent[] Model_Info = ((Model_GetContent[])(inValues[0]));
            return this.BeginGet_Model_From_MM(Model_Info, callback, asyncState);
        }
        
        private object[] OnEndGet_Model_From_MM(System.IAsyncResult result) {
            bool retVal = this.EndGet_Model_From_MM(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_Model_From_MMCompleted(object state) {
            if ((this.Get_Model_From_MMCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_Model_From_MMCompleted(this, new Get_Model_From_MMCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_Model_From_MMAsync(Model_GetContent[] Model_Info) {
            this.Get_Model_From_MMAsync(Model_Info, null);
        }
        
        public void Get_Model_From_MMAsync(Model_GetContent[] Model_Info, object userState) {
            if ((this.onBeginGet_Model_From_MMDelegate == null)) {
                this.onBeginGet_Model_From_MMDelegate = new BeginOperationDelegate(this.OnBeginGet_Model_From_MM);
            }
            if ((this.onEndGet_Model_From_MMDelegate == null)) {
                this.onEndGet_Model_From_MMDelegate = new EndOperationDelegate(this.OnEndGet_Model_From_MM);
            }
            if ((this.onGet_Model_From_MMCompletedDelegate == null)) {
                this.onGet_Model_From_MMCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_Model_From_MMCompleted);
            }
            base.InvokeAsync(this.onBeginGet_Model_From_MMDelegate, new object[] {
                        Model_Info}, this.onEndGet_Model_From_MMDelegate, this.onGet_Model_From_MMCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Beginget_vMachineIP(IPS.MachineInfomation.get_vMachineIPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginget_vMachineIP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginget_vMachineIP(string vMachine_ID, int ModelInfo_Count, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.get_vMachineIPRequest inValue = new IPS.MachineInfomation.get_vMachineIPRequest();
            inValue.vMachine_ID = vMachine_ID;
            inValue.ModelInfo_Count = ModelInfo_Count;
            return ((IPS.MachineInfomation.IService1)(this)).Beginget_vMachineIP(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.get_vMachineIPResponse IPS.MachineInfomation.IService1.Endget_vMachineIP(System.IAsyncResult result) {
            return base.Channel.Endget_vMachineIP(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] Endget_vMachineIP(System.IAsyncResult result) {
            IPS.MachineInfomation.get_vMachineIPResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endget_vMachineIP(result);
            return retVal.get_vMachineIPResult;
        }
        
        private System.IAsyncResult OnBeginget_vMachineIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachine_ID = ((string)(inValues[0]));
            int ModelInfo_Count = ((int)(inValues[1]));
            return this.Beginget_vMachineIP(vMachine_ID, ModelInfo_Count, callback, asyncState);
        }
        
        private object[] OnEndget_vMachineIP(System.IAsyncResult result) {
            string[] retVal = this.Endget_vMachineIP(result);
            return new object[] {
                    retVal};
        }
        
        private void Onget_vMachineIPCompleted(object state) {
            if ((this.get_vMachineIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.get_vMachineIPCompleted(this, new get_vMachineIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void get_vMachineIPAsync(string vMachine_ID, int ModelInfo_Count) {
            this.get_vMachineIPAsync(vMachine_ID, ModelInfo_Count, null);
        }
        
        public void get_vMachineIPAsync(string vMachine_ID, int ModelInfo_Count, object userState) {
            if ((this.onBeginget_vMachineIPDelegate == null)) {
                this.onBeginget_vMachineIPDelegate = new BeginOperationDelegate(this.OnBeginget_vMachineIP);
            }
            if ((this.onEndget_vMachineIPDelegate == null)) {
                this.onEndget_vMachineIPDelegate = new EndOperationDelegate(this.OnEndget_vMachineIP);
            }
            if ((this.onget_vMachineIPCompletedDelegate == null)) {
                this.onget_vMachineIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onget_vMachineIPCompleted);
            }
            base.InvokeAsync(this.onBeginget_vMachineIPDelegate, new object[] {
                        vMachine_ID,
                        ModelInfo_Count}, this.onEndget_vMachineIPDelegate, this.onget_vMachineIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetEquipmentInformationList(IPS.MachineInfomation.getEquipmentInformationListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEquipmentInformationList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEquipmentInformationList(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getEquipmentInformationListRequest inValue = new IPS.MachineInfomation.getEquipmentInformationListRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BegingetEquipmentInformationList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getEquipmentInformationListResponse IPS.MachineInfomation.IService1.EndgetEquipmentInformationList(System.IAsyncResult result) {
            return base.Channel.EndgetEquipmentInformationList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private EquipmentInformation[] EndgetEquipmentInformationList(System.IAsyncResult result) {
            IPS.MachineInfomation.getEquipmentInformationListResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetEquipmentInformationList(result);
            return retVal.getEquipmentInformationListResult;
        }
        
        private System.IAsyncResult OnBegingetEquipmentInformationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetEquipmentInformationList(callback, asyncState);
        }
        
        private object[] OnEndgetEquipmentInformationList(System.IAsyncResult result) {
            EquipmentInformation[] retVal = this.EndgetEquipmentInformationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEquipmentInformationListCompleted(object state) {
            if ((this.getEquipmentInformationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEquipmentInformationListCompleted(this, new getEquipmentInformationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEquipmentInformationListAsync() {
            this.getEquipmentInformationListAsync(null);
        }
        
        public void getEquipmentInformationListAsync(object userState) {
            if ((this.onBegingetEquipmentInformationListDelegate == null)) {
                this.onBegingetEquipmentInformationListDelegate = new BeginOperationDelegate(this.OnBegingetEquipmentInformationList);
            }
            if ((this.onEndgetEquipmentInformationListDelegate == null)) {
                this.onEndgetEquipmentInformationListDelegate = new EndOperationDelegate(this.OnEndgetEquipmentInformationList);
            }
            if ((this.ongetEquipmentInformationListCompletedDelegate == null)) {
                this.ongetEquipmentInformationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEquipmentInformationListCompleted);
            }
            base.InvokeAsync(this.onBegingetEquipmentInformationListDelegate, null, this.onEndgetEquipmentInformationListDelegate, this.ongetEquipmentInformationListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGetCompanyInfo(IPS.MachineInfomation.GetCompanyInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanyInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetCompanyInfo(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.GetCompanyInfoRequest inValue = new IPS.MachineInfomation.GetCompanyInfoRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BeginGetCompanyInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.GetCompanyInfoResponse IPS.MachineInfomation.IService1.EndGetCompanyInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCompanyInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetCompanyInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.GetCompanyInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGetCompanyInfo(result);
            return retVal.GetCompanyInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetCompanyInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCompanyInfo(callback, asyncState);
        }
        
        private object[] OnEndGetCompanyInfo(System.IAsyncResult result) {
            string retVal = this.EndGetCompanyInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyInfoCompleted(object state) {
            if ((this.GetCompanyInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyInfoCompleted(this, new GetCompanyInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyInfoAsync() {
            this.GetCompanyInfoAsync(null);
        }
        
        public void GetCompanyInfoAsync(object userState) {
            if ((this.onBeginGetCompanyInfoDelegate == null)) {
                this.onBeginGetCompanyInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCompanyInfo);
            }
            if ((this.onEndGetCompanyInfoDelegate == null)) {
                this.onEndGetCompanyInfoDelegate = new EndOperationDelegate(this.OnEndGetCompanyInfo);
            }
            if ((this.onGetCompanyInfoCompletedDelegate == null)) {
                this.onGetCompanyInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyInfoDelegate, null, this.onEndGetCompanyInfoDelegate, this.onGetCompanyInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGetServiceBrokerInfo(IPS.MachineInfomation.GetServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceBrokerInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetServiceBrokerInfo(string XMLFile, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.GetServiceBrokerInfoRequest inValue = new IPS.MachineInfomation.GetServiceBrokerInfoRequest();
            inValue.XMLFile = XMLFile;
            return ((IPS.MachineInfomation.IService1)(this)).BeginGetServiceBrokerInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.GetServiceBrokerInfoResponse IPS.MachineInfomation.IService1.EndGetServiceBrokerInfo(System.IAsyncResult result) {
            return base.Channel.EndGetServiceBrokerInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetServiceBrokerInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.GetServiceBrokerInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGetServiceBrokerInfo(result);
            return retVal.GetServiceBrokerInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetServiceBrokerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string XMLFile = ((string)(inValues[0]));
            return this.BeginGetServiceBrokerInfo(XMLFile, callback, asyncState);
        }
        
        private object[] OnEndGetServiceBrokerInfo(System.IAsyncResult result) {
            string retVal = this.EndGetServiceBrokerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceBrokerInfoCompleted(object state) {
            if ((this.GetServiceBrokerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceBrokerInfoCompleted(this, new GetServiceBrokerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceBrokerInfoAsync(string XMLFile) {
            this.GetServiceBrokerInfoAsync(XMLFile, null);
        }
        
        public void GetServiceBrokerInfoAsync(string XMLFile, object userState) {
            if ((this.onBeginGetServiceBrokerInfoDelegate == null)) {
                this.onBeginGetServiceBrokerInfoDelegate = new BeginOperationDelegate(this.OnBeginGetServiceBrokerInfo);
            }
            if ((this.onEndGetServiceBrokerInfoDelegate == null)) {
                this.onEndGetServiceBrokerInfoDelegate = new EndOperationDelegate(this.OnEndGetServiceBrokerInfo);
            }
            if ((this.onGetServiceBrokerInfoCompletedDelegate == null)) {
                this.onGetServiceBrokerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceBrokerInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceBrokerInfoDelegate, new object[] {
                        XMLFile}, this.onEndGetServiceBrokerInfoDelegate, this.onGetServiceBrokerInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGetvMachineCNCInfo(IPS.MachineInfomation.GetvMachineCNCInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetvMachineCNCInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetvMachineCNCInfo(string XMLFile, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.GetvMachineCNCInfoRequest inValue = new IPS.MachineInfomation.GetvMachineCNCInfoRequest();
            inValue.XMLFile = XMLFile;
            return ((IPS.MachineInfomation.IService1)(this)).BeginGetvMachineCNCInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.GetvMachineCNCInfoResponse IPS.MachineInfomation.IService1.EndGetvMachineCNCInfo(System.IAsyncResult result) {
            return base.Channel.EndGetvMachineCNCInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetvMachineCNCInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.GetvMachineCNCInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGetvMachineCNCInfo(result);
            return retVal.GetvMachineCNCInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetvMachineCNCInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string XMLFile = ((string)(inValues[0]));
            return this.BeginGetvMachineCNCInfo(XMLFile, callback, asyncState);
        }
        
        private object[] OnEndGetvMachineCNCInfo(System.IAsyncResult result) {
            string retVal = this.EndGetvMachineCNCInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetvMachineCNCInfoCompleted(object state) {
            if ((this.GetvMachineCNCInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetvMachineCNCInfoCompleted(this, new GetvMachineCNCInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetvMachineCNCInfoAsync(string XMLFile) {
            this.GetvMachineCNCInfoAsync(XMLFile, null);
        }
        
        public void GetvMachineCNCInfoAsync(string XMLFile, object userState) {
            if ((this.onBeginGetvMachineCNCInfoDelegate == null)) {
                this.onBeginGetvMachineCNCInfoDelegate = new BeginOperationDelegate(this.OnBeginGetvMachineCNCInfo);
            }
            if ((this.onEndGetvMachineCNCInfoDelegate == null)) {
                this.onEndGetvMachineCNCInfoDelegate = new EndOperationDelegate(this.OnEndGetvMachineCNCInfo);
            }
            if ((this.onGetvMachineCNCInfoCompletedDelegate == null)) {
                this.onGetvMachineCNCInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetvMachineCNCInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetvMachineCNCInfoDelegate, new object[] {
                        XMLFile}, this.onEndGetvMachineCNCInfoDelegate, this.onGetvMachineCNCInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGetvMachineCNCInfo_Ontology(IPS.MachineInfomation.GetvMachineCNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetvMachineCNCInfo_Ontology(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetvMachineCNCInfo_Ontology(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.GetvMachineCNCInfo_OntologyRequest inValue = new IPS.MachineInfomation.GetvMachineCNCInfo_OntologyRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BeginGetvMachineCNCInfo_Ontology(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse IPS.MachineInfomation.IService1.EndGetvMachineCNCInfo_Ontology(System.IAsyncResult result) {
            return base.Channel.EndGetvMachineCNCInfo_Ontology(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetvMachineCNCInfo_Ontology(System.IAsyncResult result) {
            IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGetvMachineCNCInfo_Ontology(result);
            return retVal.GetvMachineCNCInfo_OntologyResult;
        }
        
        private System.IAsyncResult OnBeginGetvMachineCNCInfo_Ontology(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetvMachineCNCInfo_Ontology(callback, asyncState);
        }
        
        private object[] OnEndGetvMachineCNCInfo_Ontology(System.IAsyncResult result) {
            string retVal = this.EndGetvMachineCNCInfo_Ontology(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetvMachineCNCInfo_OntologyCompleted(object state) {
            if ((this.GetvMachineCNCInfo_OntologyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetvMachineCNCInfo_OntologyCompleted(this, new GetvMachineCNCInfo_OntologyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetvMachineCNCInfo_OntologyAsync() {
            this.GetvMachineCNCInfo_OntologyAsync(null);
        }
        
        public void GetvMachineCNCInfo_OntologyAsync(object userState) {
            if ((this.onBeginGetvMachineCNCInfo_OntologyDelegate == null)) {
                this.onBeginGetvMachineCNCInfo_OntologyDelegate = new BeginOperationDelegate(this.OnBeginGetvMachineCNCInfo_Ontology);
            }
            if ((this.onEndGetvMachineCNCInfo_OntologyDelegate == null)) {
                this.onEndGetvMachineCNCInfo_OntologyDelegate = new EndOperationDelegate(this.OnEndGetvMachineCNCInfo_Ontology);
            }
            if ((this.onGetvMachineCNCInfo_OntologyCompletedDelegate == null)) {
                this.onGetvMachineCNCInfo_OntologyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetvMachineCNCInfo_OntologyCompleted);
            }
            base.InvokeAsync(this.onBeginGetvMachineCNCInfo_OntologyDelegate, null, this.onEndGetvMachineCNCInfo_OntologyDelegate, this.onGetvMachineCNCInfo_OntologyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginDownloadNCFile(IPS.MachineInfomation.DownloadNCFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadNCFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDownloadNCFile(string XMLFile, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.DownloadNCFileRequest inValue = new IPS.MachineInfomation.DownloadNCFileRequest();
            inValue.XMLFile = XMLFile;
            return ((IPS.MachineInfomation.IService1)(this)).BeginDownloadNCFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.DownloadNCFileResponse IPS.MachineInfomation.IService1.EndDownloadNCFile(System.IAsyncResult result) {
            return base.Channel.EndDownloadNCFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndDownloadNCFile(System.IAsyncResult result) {
            IPS.MachineInfomation.DownloadNCFileResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndDownloadNCFile(result);
            return retVal.DownloadNCFileResult;
        }
        
        private System.IAsyncResult OnBeginDownloadNCFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string XMLFile = ((string)(inValues[0]));
            return this.BeginDownloadNCFile(XMLFile, callback, asyncState);
        }
        
        private object[] OnEndDownloadNCFile(System.IAsyncResult result) {
            bool retVal = this.EndDownloadNCFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadNCFileCompleted(object state) {
            if ((this.DownloadNCFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadNCFileCompleted(this, new DownloadNCFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadNCFileAsync(string XMLFile) {
            this.DownloadNCFileAsync(XMLFile, null);
        }
        
        public void DownloadNCFileAsync(string XMLFile, object userState) {
            if ((this.onBeginDownloadNCFileDelegate == null)) {
                this.onBeginDownloadNCFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadNCFile);
            }
            if ((this.onEndDownloadNCFileDelegate == null)) {
                this.onEndDownloadNCFileDelegate = new EndOperationDelegate(this.OnEndDownloadNCFile);
            }
            if ((this.onDownloadNCFileCompletedDelegate == null)) {
                this.onDownloadNCFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadNCFileCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadNCFileDelegate, new object[] {
                        XMLFile}, this.onEndDownloadNCFileDelegate, this.onDownloadNCFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGet_vMachineInfo_Ontology(IPS.MachineInfomation.Get_vMachineInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_vMachineInfo_Ontology(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGet_vMachineInfo_Ontology(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Get_vMachineInfo_OntologyRequest inValue = new IPS.MachineInfomation.Get_vMachineInfo_OntologyRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BeginGet_vMachineInfo_Ontology(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse IPS.MachineInfomation.IService1.EndGet_vMachineInfo_Ontology(System.IAsyncResult result) {
            return base.Channel.EndGet_vMachineInfo_Ontology(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGet_vMachineInfo_Ontology(System.IAsyncResult result) {
            IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGet_vMachineInfo_Ontology(result);
            return retVal.Get_vMachineInfo_OntologyResult;
        }
        
        private System.IAsyncResult OnBeginGet_vMachineInfo_Ontology(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGet_vMachineInfo_Ontology(callback, asyncState);
        }
        
        private object[] OnEndGet_vMachineInfo_Ontology(System.IAsyncResult result) {
            string retVal = this.EndGet_vMachineInfo_Ontology(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_vMachineInfo_OntologyCompleted(object state) {
            if ((this.Get_vMachineInfo_OntologyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_vMachineInfo_OntologyCompleted(this, new Get_vMachineInfo_OntologyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_vMachineInfo_OntologyAsync() {
            this.Get_vMachineInfo_OntologyAsync(null);
        }
        
        public void Get_vMachineInfo_OntologyAsync(object userState) {
            if ((this.onBeginGet_vMachineInfo_OntologyDelegate == null)) {
                this.onBeginGet_vMachineInfo_OntologyDelegate = new BeginOperationDelegate(this.OnBeginGet_vMachineInfo_Ontology);
            }
            if ((this.onEndGet_vMachineInfo_OntologyDelegate == null)) {
                this.onEndGet_vMachineInfo_OntologyDelegate = new EndOperationDelegate(this.OnEndGet_vMachineInfo_Ontology);
            }
            if ((this.onGet_vMachineInfo_OntologyCompletedDelegate == null)) {
                this.onGet_vMachineInfo_OntologyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_vMachineInfo_OntologyCompleted);
            }
            base.InvokeAsync(this.onBeginGet_vMachineInfo_OntologyDelegate, null, this.onEndGet_vMachineInfo_OntologyDelegate, this.onGet_vMachineInfo_OntologyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginGet_CNCInfo_Ontology(IPS.MachineInfomation.Get_CNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_CNCInfo_Ontology(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGet_CNCInfo_Ontology(string vMachine_ID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Get_CNCInfo_OntologyRequest inValue = new IPS.MachineInfomation.Get_CNCInfo_OntologyRequest();
            inValue.vMachine_ID = vMachine_ID;
            return ((IPS.MachineInfomation.IService1)(this)).BeginGet_CNCInfo_Ontology(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Get_CNCInfo_OntologyResponse IPS.MachineInfomation.IService1.EndGet_CNCInfo_Ontology(System.IAsyncResult result) {
            return base.Channel.EndGet_CNCInfo_Ontology(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGet_CNCInfo_Ontology(System.IAsyncResult result) {
            IPS.MachineInfomation.Get_CNCInfo_OntologyResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndGet_CNCInfo_Ontology(result);
            return retVal.Get_CNCInfo_OntologyResult;
        }
        
        private System.IAsyncResult OnBeginGet_CNCInfo_Ontology(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachine_ID = ((string)(inValues[0]));
            return this.BeginGet_CNCInfo_Ontology(vMachine_ID, callback, asyncState);
        }
        
        private object[] OnEndGet_CNCInfo_Ontology(System.IAsyncResult result) {
            string retVal = this.EndGet_CNCInfo_Ontology(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_CNCInfo_OntologyCompleted(object state) {
            if ((this.Get_CNCInfo_OntologyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_CNCInfo_OntologyCompleted(this, new Get_CNCInfo_OntologyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_CNCInfo_OntologyAsync(string vMachine_ID) {
            this.Get_CNCInfo_OntologyAsync(vMachine_ID, null);
        }
        
        public void Get_CNCInfo_OntologyAsync(string vMachine_ID, object userState) {
            if ((this.onBeginGet_CNCInfo_OntologyDelegate == null)) {
                this.onBeginGet_CNCInfo_OntologyDelegate = new BeginOperationDelegate(this.OnBeginGet_CNCInfo_Ontology);
            }
            if ((this.onEndGet_CNCInfo_OntologyDelegate == null)) {
                this.onEndGet_CNCInfo_OntologyDelegate = new EndOperationDelegate(this.OnEndGet_CNCInfo_Ontology);
            }
            if ((this.onGet_CNCInfo_OntologyCompletedDelegate == null)) {
                this.onGet_CNCInfo_OntologyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_CNCInfo_OntologyCompleted);
            }
            base.InvokeAsync(this.onBeginGet_CNCInfo_OntologyDelegate, new object[] {
                        vMachine_ID}, this.onEndGet_CNCInfo_OntologyDelegate, this.onGet_CNCInfo_OntologyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Beginkinfe_Info(IPS.MachineInfomation.kinfe_InfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginkinfe_Info(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginkinfe_Info(string XMLFile, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.kinfe_InfoRequest inValue = new IPS.MachineInfomation.kinfe_InfoRequest();
            inValue.XMLFile = XMLFile;
            return ((IPS.MachineInfomation.IService1)(this)).Beginkinfe_Info(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.kinfe_InfoResponse IPS.MachineInfomation.IService1.Endkinfe_Info(System.IAsyncResult result) {
            return base.Channel.Endkinfe_Info(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] Endkinfe_Info(System.IAsyncResult result) {
            IPS.MachineInfomation.kinfe_InfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endkinfe_Info(result);
            return retVal.kinfe_InfoResult;
        }
        
        private System.IAsyncResult OnBeginkinfe_Info(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string XMLFile = ((string)(inValues[0]));
            return this.Beginkinfe_Info(XMLFile, callback, asyncState);
        }
        
        private object[] OnEndkinfe_Info(System.IAsyncResult result) {
            string[][] retVal = this.Endkinfe_Info(result);
            return new object[] {
                    retVal};
        }
        
        private void Onkinfe_InfoCompleted(object state) {
            if ((this.kinfe_InfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.kinfe_InfoCompleted(this, new kinfe_InfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void kinfe_InfoAsync(string XMLFile) {
            this.kinfe_InfoAsync(XMLFile, null);
        }
        
        public void kinfe_InfoAsync(string XMLFile, object userState) {
            if ((this.onBeginkinfe_InfoDelegate == null)) {
                this.onBeginkinfe_InfoDelegate = new BeginOperationDelegate(this.OnBeginkinfe_Info);
            }
            if ((this.onEndkinfe_InfoDelegate == null)) {
                this.onEndkinfe_InfoDelegate = new EndOperationDelegate(this.OnEndkinfe_Info);
            }
            if ((this.onkinfe_InfoCompletedDelegate == null)) {
                this.onkinfe_InfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onkinfe_InfoCompleted);
            }
            base.InvokeAsync(this.onBeginkinfe_InfoDelegate, new object[] {
                        XMLFile}, this.onEndkinfe_InfoDelegate, this.onkinfe_InfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetVmachineList(IPS.MachineInfomation.getVmachineListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVmachineList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetVmachineList(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getVmachineListRequest inValue = new IPS.MachineInfomation.getVmachineListRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BegingetVmachineList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getVmachineListResponse IPS.MachineInfomation.IService1.EndgetVmachineList(System.IAsyncResult result) {
            return base.Channel.EndgetVmachineList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Vmachine[] EndgetVmachineList(System.IAsyncResult result) {
            IPS.MachineInfomation.getVmachineListResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetVmachineList(result);
            return retVal.getVmachineListResult;
        }
        
        private System.IAsyncResult OnBegingetVmachineList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetVmachineList(callback, asyncState);
        }
        
        private object[] OnEndgetVmachineList(System.IAsyncResult result) {
            Vmachine[] retVal = this.EndgetVmachineList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVmachineListCompleted(object state) {
            if ((this.getVmachineListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVmachineListCompleted(this, new getVmachineListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVmachineListAsync() {
            this.getVmachineListAsync(null);
        }
        
        public void getVmachineListAsync(object userState) {
            if ((this.onBegingetVmachineListDelegate == null)) {
                this.onBegingetVmachineListDelegate = new BeginOperationDelegate(this.OnBegingetVmachineList);
            }
            if ((this.onEndgetVmachineListDelegate == null)) {
                this.onEndgetVmachineListDelegate = new EndOperationDelegate(this.OnEndgetVmachineList);
            }
            if ((this.ongetVmachineListCompletedDelegate == null)) {
                this.ongetVmachineListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVmachineListCompleted);
            }
            base.InvokeAsync(this.onBegingetVmachineListDelegate, null, this.onEndgetVmachineListDelegate, this.ongetVmachineListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginregisterVmachine(IPS.MachineInfomation.registerVmachineRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregisterVmachine(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginregisterVmachine(string cem, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.registerVmachineRequest inValue = new IPS.MachineInfomation.registerVmachineRequest();
            inValue.cem = cem;
            return ((IPS.MachineInfomation.IService1)(this)).BeginregisterVmachine(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.registerVmachineResponse IPS.MachineInfomation.IService1.EndregisterVmachine(System.IAsyncResult result) {
            return base.Channel.EndregisterVmachine(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndregisterVmachine(System.IAsyncResult result) {
            IPS.MachineInfomation.registerVmachineResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndregisterVmachine(result);
            return retVal.registerVmachineResult;
        }
        
        private System.IAsyncResult OnBeginregisterVmachine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cem = ((string)(inValues[0]));
            return this.BeginregisterVmachine(cem, callback, asyncState);
        }
        
        private object[] OnEndregisterVmachine(System.IAsyncResult result) {
            string retVal = this.EndregisterVmachine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterVmachineCompleted(object state) {
            if ((this.registerVmachineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerVmachineCompleted(this, new registerVmachineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerVmachineAsync(string cem) {
            this.registerVmachineAsync(cem, null);
        }
        
        public void registerVmachineAsync(string cem, object userState) {
            if ((this.onBeginregisterVmachineDelegate == null)) {
                this.onBeginregisterVmachineDelegate = new BeginOperationDelegate(this.OnBeginregisterVmachine);
            }
            if ((this.onEndregisterVmachineDelegate == null)) {
                this.onEndregisterVmachineDelegate = new EndOperationDelegate(this.OnEndregisterVmachine);
            }
            if ((this.onregisterVmachineCompletedDelegate == null)) {
                this.onregisterVmachineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterVmachineCompleted);
            }
            base.InvokeAsync(this.onBeginregisterVmachineDelegate, new object[] {
                        cem}, this.onEndregisterVmachineDelegate, this.onregisterVmachineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginsendAlarm(IPS.MachineInfomation.sendAlarmRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendAlarm(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginsendAlarm(string vMachineName, string eventDescription, int errorCode, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.sendAlarmRequest inValue = new IPS.MachineInfomation.sendAlarmRequest();
            inValue.vMachineName = vMachineName;
            inValue.eventDescription = eventDescription;
            inValue.errorCode = errorCode;
            return ((IPS.MachineInfomation.IService1)(this)).BeginsendAlarm(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.sendAlarmResponse IPS.MachineInfomation.IService1.EndsendAlarm(System.IAsyncResult result) {
            return base.Channel.EndsendAlarm(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndsendAlarm(System.IAsyncResult result) {
            IPS.MachineInfomation.sendAlarmResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndsendAlarm(result);
            return retVal.sendAlarmResult;
        }
        
        private System.IAsyncResult OnBeginsendAlarm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineName = ((string)(inValues[0]));
            string eventDescription = ((string)(inValues[1]));
            int errorCode = ((int)(inValues[2]));
            return this.BeginsendAlarm(vMachineName, eventDescription, errorCode, callback, asyncState);
        }
        
        private object[] OnEndsendAlarm(System.IAsyncResult result) {
            bool retVal = this.EndsendAlarm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsendAlarmCompleted(object state) {
            if ((this.sendAlarmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendAlarmCompleted(this, new sendAlarmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendAlarmAsync(string vMachineName, string eventDescription, int errorCode) {
            this.sendAlarmAsync(vMachineName, eventDescription, errorCode, null);
        }
        
        public void sendAlarmAsync(string vMachineName, string eventDescription, int errorCode, object userState) {
            if ((this.onBeginsendAlarmDelegate == null)) {
                this.onBeginsendAlarmDelegate = new BeginOperationDelegate(this.OnBeginsendAlarm);
            }
            if ((this.onEndsendAlarmDelegate == null)) {
                this.onEndsendAlarmDelegate = new EndOperationDelegate(this.OnEndsendAlarm);
            }
            if ((this.onsendAlarmCompletedDelegate == null)) {
                this.onsendAlarmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendAlarmCompleted);
            }
            base.InvokeAsync(this.onBeginsendAlarmDelegate, new object[] {
                        vMachineName,
                        eventDescription,
                        errorCode}, this.onEndsendAlarmDelegate, this.onsendAlarmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetEquipmentList(IPS.MachineInfomation.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEquipmentList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEquipmentList(string userName, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getEquipmentListRequest inValue = new IPS.MachineInfomation.getEquipmentListRequest();
            inValue.userName = userName;
            return ((IPS.MachineInfomation.IService1)(this)).BegingetEquipmentList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getEquipmentListResponse IPS.MachineInfomation.IService1.EndgetEquipmentList(System.IAsyncResult result) {
            return base.Channel.EndgetEquipmentList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private EquipmentType[] EndgetEquipmentList(System.IAsyncResult result) {
            IPS.MachineInfomation.getEquipmentListResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetEquipmentList(result);
            return retVal.getEquipmentListResult;
        }
        
        private System.IAsyncResult OnBegingetEquipmentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BegingetEquipmentList(userName, callback, asyncState);
        }
        
        private object[] OnEndgetEquipmentList(System.IAsyncResult result) {
            EquipmentType[] retVal = this.EndgetEquipmentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEquipmentListCompleted(object state) {
            if ((this.getEquipmentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEquipmentListCompleted(this, new getEquipmentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEquipmentListAsync(string userName) {
            this.getEquipmentListAsync(userName, null);
        }
        
        public void getEquipmentListAsync(string userName, object userState) {
            if ((this.onBegingetEquipmentListDelegate == null)) {
                this.onBegingetEquipmentListDelegate = new BeginOperationDelegate(this.OnBegingetEquipmentList);
            }
            if ((this.onEndgetEquipmentListDelegate == null)) {
                this.onEndgetEquipmentListDelegate = new EndOperationDelegate(this.OnEndgetEquipmentList);
            }
            if ((this.ongetEquipmentListCompletedDelegate == null)) {
                this.ongetEquipmentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEquipmentListCompleted);
            }
            base.InvokeAsync(this.onBegingetEquipmentListDelegate, new object[] {
                        userName}, this.onEndgetEquipmentListDelegate, this.ongetEquipmentListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginfanOutModel(IPS.MachineInfomation.fanOutModelRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfanOutModel(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginfanOutModel(IPS.MachineInfomation.ModelFull modelfull, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.fanOutModelRequest inValue = new IPS.MachineInfomation.fanOutModelRequest();
            inValue.modelfull = modelfull;
            return ((IPS.MachineInfomation.IService1)(this)).BeginfanOutModel(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.fanOutModelResponse IPS.MachineInfomation.IService1.EndfanOutModel(System.IAsyncResult result) {
            return base.Channel.EndfanOutModel(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndfanOutModel(System.IAsyncResult result) {
            IPS.MachineInfomation.fanOutModelResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndfanOutModel(result);
            return retVal.fanOutModelResult;
        }
        
        private System.IAsyncResult OnBeginfanOutModel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.ModelFull modelfull = ((IPS.MachineInfomation.ModelFull)(inValues[0]));
            return this.BeginfanOutModel(modelfull, callback, asyncState);
        }
        
        private object[] OnEndfanOutModel(System.IAsyncResult result) {
            string retVal = this.EndfanOutModel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfanOutModelCompleted(object state) {
            if ((this.fanOutModelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fanOutModelCompleted(this, new fanOutModelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fanOutModelAsync(IPS.MachineInfomation.ModelFull modelfull) {
            this.fanOutModelAsync(modelfull, null);
        }
        
        public void fanOutModelAsync(IPS.MachineInfomation.ModelFull modelfull, object userState) {
            if ((this.onBeginfanOutModelDelegate == null)) {
                this.onBeginfanOutModelDelegate = new BeginOperationDelegate(this.OnBeginfanOutModel);
            }
            if ((this.onEndfanOutModelDelegate == null)) {
                this.onEndfanOutModelDelegate = new EndOperationDelegate(this.OnEndfanOutModel);
            }
            if ((this.onfanOutModelCompletedDelegate == null)) {
                this.onfanOutModelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfanOutModelCompleted);
            }
            base.InvokeAsync(this.onBeginfanOutModelDelegate, new object[] {
                        modelfull}, this.onEndfanOutModelDelegate, this.onfanOutModelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetVmachineInformation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVmachineInformation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void IPS.MachineInfomation.IService1.EndgetVmachineInformation(System.IAsyncResult result) {
            base.Channel.EndgetVmachineInformation(result);
        }
        
        private System.IAsyncResult OnBegingetVmachineInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IPS.MachineInfomation.IService1)(this)).BegingetVmachineInformation(callback, asyncState);
        }
        
        private object[] OnEndgetVmachineInformation(System.IAsyncResult result) {
            ((IPS.MachineInfomation.IService1)(this)).EndgetVmachineInformation(result);
            return null;
        }
        
        private void OngetVmachineInformationCompleted(object state) {
            if ((this.getVmachineInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVmachineInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVmachineInformationAsync() {
            this.getVmachineInformationAsync(null);
        }
        
        public void getVmachineInformationAsync(object userState) {
            if ((this.onBegingetVmachineInformationDelegate == null)) {
                this.onBegingetVmachineInformationDelegate = new BeginOperationDelegate(this.OnBegingetVmachineInformation);
            }
            if ((this.onEndgetVmachineInformationDelegate == null)) {
                this.onEndgetVmachineInformationDelegate = new EndOperationDelegate(this.OnEndgetVmachineInformation);
            }
            if ((this.ongetVmachineInformationCompletedDelegate == null)) {
                this.ongetVmachineInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVmachineInformationCompleted);
            }
            base.InvokeAsync(this.onBegingetVmachineInformationDelegate, null, this.onEndgetVmachineInformationDelegate, this.ongetVmachineInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetRunningModelInformation(IPS.MachineInfomation.getRunningModelInformationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRunningModelInformation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetRunningModelInformation(string vMachineId, string userName, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getRunningModelInformationRequest inValue = new IPS.MachineInfomation.getRunningModelInformationRequest();
            inValue.vMachineId = vMachineId;
            inValue.userName = userName;
            return ((IPS.MachineInfomation.IService1)(this)).BegingetRunningModelInformation(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getRunningModelInformationResponse IPS.MachineInfomation.IService1.EndgetRunningModelInformation(System.IAsyncResult result) {
            return base.Channel.EndgetRunningModelInformation(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndgetRunningModelInformation(System.IAsyncResult result) {
            IPS.MachineInfomation.getRunningModelInformationResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetRunningModelInformation(result);
        }
        
        private System.IAsyncResult OnBegingetRunningModelInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineId = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            return this.BegingetRunningModelInformation(vMachineId, userName, callback, asyncState);
        }
        
        private object[] OnEndgetRunningModelInformation(System.IAsyncResult result) {
            this.EndgetRunningModelInformation(result);
            return null;
        }
        
        private void OngetRunningModelInformationCompleted(object state) {
            if ((this.getRunningModelInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRunningModelInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRunningModelInformationAsync(string vMachineId, string userName) {
            this.getRunningModelInformationAsync(vMachineId, userName, null);
        }
        
        public void getRunningModelInformationAsync(string vMachineId, string userName, object userState) {
            if ((this.onBegingetRunningModelInformationDelegate == null)) {
                this.onBegingetRunningModelInformationDelegate = new BeginOperationDelegate(this.OnBegingetRunningModelInformation);
            }
            if ((this.onEndgetRunningModelInformationDelegate == null)) {
                this.onEndgetRunningModelInformationDelegate = new EndOperationDelegate(this.OnEndgetRunningModelInformation);
            }
            if ((this.ongetRunningModelInformationCompletedDelegate == null)) {
                this.ongetRunningModelInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRunningModelInformationCompleted);
            }
            base.InvokeAsync(this.onBegingetRunningModelInformationDelegate, new object[] {
                        vMachineId,
                        userName}, this.onEndgetRunningModelInformationDelegate, this.ongetRunningModelInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetVmachineInformationList(IPS.MachineInfomation.getVmachineInformationListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVmachineInformationList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetVmachineInformationList(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getVmachineInformationListRequest inValue = new IPS.MachineInfomation.getVmachineInformationListRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BegingetVmachineInformationList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getVmachineInformationListResponse IPS.MachineInfomation.IService1.EndgetVmachineInformationList(System.IAsyncResult result) {
            return base.Channel.EndgetVmachineInformationList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Vmachine[] EndgetVmachineInformationList(System.IAsyncResult result) {
            IPS.MachineInfomation.getVmachineInformationListResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetVmachineInformationList(result);
            return retVal.getVmachineInformationListResult;
        }
        
        private System.IAsyncResult OnBegingetVmachineInformationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetVmachineInformationList(callback, asyncState);
        }
        
        private object[] OnEndgetVmachineInformationList(System.IAsyncResult result) {
            Vmachine[] retVal = this.EndgetVmachineInformationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVmachineInformationListCompleted(object state) {
            if ((this.getVmachineInformationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVmachineInformationListCompleted(this, new getVmachineInformationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVmachineInformationListAsync() {
            this.getVmachineInformationListAsync(null);
        }
        
        public void getVmachineInformationListAsync(object userState) {
            if ((this.onBegingetVmachineInformationListDelegate == null)) {
                this.onBegingetVmachineInformationListDelegate = new BeginOperationDelegate(this.OnBegingetVmachineInformationList);
            }
            if ((this.onEndgetVmachineInformationListDelegate == null)) {
                this.onEndgetVmachineInformationListDelegate = new EndOperationDelegate(this.OnEndgetVmachineInformationList);
            }
            if ((this.ongetVmachineInformationListCompletedDelegate == null)) {
                this.ongetVmachineInformationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVmachineInformationListCompleted);
            }
            base.InvokeAsync(this.onBegingetVmachineInformationListDelegate, null, this.onEndgetVmachineInformationListDelegate, this.ongetVmachineInformationListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginuploadSTDB(IPS.MachineInfomation.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginuploadSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginuploadSTDB(string vMachineID, string equipmentID, string sensor, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.uploadSTDBRequest inValue = new IPS.MachineInfomation.uploadSTDBRequest();
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            inValue.sensor = sensor;
            return ((IPS.MachineInfomation.IService1)(this)).BeginuploadSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.uploadSTDBResponse IPS.MachineInfomation.IService1.EnduploadSTDB(System.IAsyncResult result) {
            return base.Channel.EnduploadSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private IPS.MachineInfomation.ArrayOfXElement EnduploadSTDB(System.IAsyncResult result) {
            IPS.MachineInfomation.uploadSTDBResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EnduploadSTDB(result);
            return retVal.uploadSTDBResult;
        }
        
        private System.IAsyncResult OnBeginuploadSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineID = ((string)(inValues[0]));
            string equipmentID = ((string)(inValues[1]));
            string sensor = ((string)(inValues[2]));
            return this.BeginuploadSTDB(vMachineID, equipmentID, sensor, callback, asyncState);
        }
        
        private object[] OnEnduploadSTDB(System.IAsyncResult result) {
            IPS.MachineInfomation.ArrayOfXElement retVal = this.EnduploadSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnuploadSTDBCompleted(object state) {
            if ((this.uploadSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.uploadSTDBCompleted(this, new uploadSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void uploadSTDBAsync(string vMachineID, string equipmentID, string sensor) {
            this.uploadSTDBAsync(vMachineID, equipmentID, sensor, null);
        }
        
        public void uploadSTDBAsync(string vMachineID, string equipmentID, string sensor, object userState) {
            if ((this.onBeginuploadSTDBDelegate == null)) {
                this.onBeginuploadSTDBDelegate = new BeginOperationDelegate(this.OnBeginuploadSTDB);
            }
            if ((this.onEnduploadSTDBDelegate == null)) {
                this.onEnduploadSTDBDelegate = new EndOperationDelegate(this.OnEnduploadSTDB);
            }
            if ((this.onuploadSTDBCompletedDelegate == null)) {
                this.onuploadSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnuploadSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginuploadSTDBDelegate, new object[] {
                        vMachineID,
                        equipmentID,
                        sensor}, this.onEnduploadSTDBDelegate, this.onuploadSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginuploadDefOfSTDB(IPS.MachineInfomation.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginuploadDefOfSTDB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginuploadDefOfSTDB(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.uploadDefOfSTDBRequest inValue = new IPS.MachineInfomation.uploadDefOfSTDBRequest();
            inValue.ds = ds;
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            return ((IPS.MachineInfomation.IService1)(this)).BeginuploadDefOfSTDB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.uploadDefOfSTDBResponse IPS.MachineInfomation.IService1.EnduploadDefOfSTDB(System.IAsyncResult result) {
            return base.Channel.EnduploadDefOfSTDB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EnduploadDefOfSTDB(System.IAsyncResult result) {
            IPS.MachineInfomation.uploadDefOfSTDBResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EnduploadDefOfSTDB(result);
            return retVal.uploadDefOfSTDBResult;
        }
        
        private System.IAsyncResult OnBeginuploadDefOfSTDB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.ArrayOfXElement ds = ((IPS.MachineInfomation.ArrayOfXElement)(inValues[0]));
            string vMachineID = ((string)(inValues[1]));
            string equipmentID = ((string)(inValues[2]));
            return this.BeginuploadDefOfSTDB(ds, vMachineID, equipmentID, callback, asyncState);
        }
        
        private object[] OnEnduploadDefOfSTDB(System.IAsyncResult result) {
            bool retVal = this.EnduploadDefOfSTDB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnuploadDefOfSTDBCompleted(object state) {
            if ((this.uploadDefOfSTDBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.uploadDefOfSTDBCompleted(this, new uploadDefOfSTDBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void uploadDefOfSTDBAsync(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.uploadDefOfSTDBAsync(ds, vMachineID, equipmentID, null);
        }
        
        public void uploadDefOfSTDBAsync(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID, object userState) {
            if ((this.onBeginuploadDefOfSTDBDelegate == null)) {
                this.onBeginuploadDefOfSTDBDelegate = new BeginOperationDelegate(this.OnBeginuploadDefOfSTDB);
            }
            if ((this.onEnduploadDefOfSTDBDelegate == null)) {
                this.onEnduploadDefOfSTDBDelegate = new EndOperationDelegate(this.OnEnduploadDefOfSTDB);
            }
            if ((this.onuploadDefOfSTDBCompletedDelegate == null)) {
                this.onuploadDefOfSTDBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnuploadDefOfSTDBCompleted);
            }
            base.InvokeAsync(this.onBeginuploadDefOfSTDBDelegate, new object[] {
                        ds,
                        vMachineID,
                        equipmentID}, this.onEnduploadDefOfSTDBDelegate, this.onuploadDefOfSTDBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginupdateVMResult(IPS.MachineInfomation.updateVMResultRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateVMResult(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginupdateVMResult(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.updateVMResultRequest inValue = new IPS.MachineInfomation.updateVMResultRequest();
            inValue.ds = ds;
            inValue.vMachineID = vMachineID;
            inValue.equipmentID = equipmentID;
            return ((IPS.MachineInfomation.IService1)(this)).BeginupdateVMResult(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.updateVMResultResponse IPS.MachineInfomation.IService1.EndupdateVMResult(System.IAsyncResult result) {
            return base.Channel.EndupdateVMResult(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndupdateVMResult(System.IAsyncResult result) {
            IPS.MachineInfomation.updateVMResultResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndupdateVMResult(result);
            return retVal.updateVMResultResult;
        }
        
        private System.IAsyncResult OnBeginupdateVMResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.ArrayOfXElement ds = ((IPS.MachineInfomation.ArrayOfXElement)(inValues[0]));
            string vMachineID = ((string)(inValues[1]));
            string equipmentID = ((string)(inValues[2]));
            return this.BeginupdateVMResult(ds, vMachineID, equipmentID, callback, asyncState);
        }
        
        private object[] OnEndupdateVMResult(System.IAsyncResult result) {
            string retVal = this.EndupdateVMResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateVMResultCompleted(object state) {
            if ((this.updateVMResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateVMResultCompleted(this, new updateVMResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateVMResultAsync(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID) {
            this.updateVMResultAsync(ds, vMachineID, equipmentID, null);
        }
        
        public void updateVMResultAsync(IPS.MachineInfomation.ArrayOfXElement ds, string vMachineID, string equipmentID, object userState) {
            if ((this.onBeginupdateVMResultDelegate == null)) {
                this.onBeginupdateVMResultDelegate = new BeginOperationDelegate(this.OnBeginupdateVMResult);
            }
            if ((this.onEndupdateVMResultDelegate == null)) {
                this.onEndupdateVMResultDelegate = new EndOperationDelegate(this.OnEndupdateVMResult);
            }
            if ((this.onupdateVMResultCompletedDelegate == null)) {
                this.onupdateVMResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateVMResultCompleted);
            }
            base.InvokeAsync(this.onBeginupdateVMResultDelegate, new object[] {
                        ds,
                        vMachineID,
                        equipmentID}, this.onEndupdateVMResultDelegate, this.onupdateVMResultCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetEquipmentListByVmachine(IPS.MachineInfomation.getEquipmentListByVmachineRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEquipmentListByVmachine(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEquipmentListByVmachine(string vMachineName, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getEquipmentListByVmachineRequest inValue = new IPS.MachineInfomation.getEquipmentListByVmachineRequest();
            inValue.vMachineName = vMachineName;
            return ((IPS.MachineInfomation.IService1)(this)).BegingetEquipmentListByVmachine(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getEquipmentListByVmachineResponse IPS.MachineInfomation.IService1.EndgetEquipmentListByVmachine(System.IAsyncResult result) {
            return base.Channel.EndgetEquipmentListByVmachine(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndgetEquipmentListByVmachine(System.IAsyncResult result) {
            IPS.MachineInfomation.getEquipmentListByVmachineResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetEquipmentListByVmachine(result);
            return retVal.getEquipmentListByVmachineResult;
        }
        
        private System.IAsyncResult OnBegingetEquipmentListByVmachine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachineName = ((string)(inValues[0]));
            return this.BegingetEquipmentListByVmachine(vMachineName, callback, asyncState);
        }
        
        private object[] OnEndgetEquipmentListByVmachine(System.IAsyncResult result) {
            string[] retVal = this.EndgetEquipmentListByVmachine(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEquipmentListByVmachineCompleted(object state) {
            if ((this.getEquipmentListByVmachineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEquipmentListByVmachineCompleted(this, new getEquipmentListByVmachineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEquipmentListByVmachineAsync(string vMachineName) {
            this.getEquipmentListByVmachineAsync(vMachineName, null);
        }
        
        public void getEquipmentListByVmachineAsync(string vMachineName, object userState) {
            if ((this.onBegingetEquipmentListByVmachineDelegate == null)) {
                this.onBegingetEquipmentListByVmachineDelegate = new BeginOperationDelegate(this.OnBegingetEquipmentListByVmachine);
            }
            if ((this.onEndgetEquipmentListByVmachineDelegate == null)) {
                this.onEndgetEquipmentListByVmachineDelegate = new EndOperationDelegate(this.OnEndgetEquipmentListByVmachine);
            }
            if ((this.ongetEquipmentListByVmachineCompletedDelegate == null)) {
                this.ongetEquipmentListByVmachineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEquipmentListByVmachineCompleted);
            }
            base.InvokeAsync(this.onBegingetEquipmentListByVmachineDelegate, new object[] {
                        vMachineName}, this.onEndgetEquipmentListByVmachineDelegate, this.ongetEquipmentListByVmachineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginInsert_vNachineState(IPS.MachineInfomation.Insert_vNachineStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsert_vNachineState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsert_vNachineState(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Insert_vNachineStateRequest inValue = new IPS.MachineInfomation.Insert_vNachineStateRequest();
            inValue.vMachine_Name = vMachine_Name;
            inValue.vMachine_IP = vMachine_IP;
            inValue.vMachine_State = vMachine_State;
            inValue.Cnc_Num = Cnc_Num;
            inValue.Cnc_State = Cnc_State;
            inValue.Cnc_IP = Cnc_IP;
            inValue.Cnc_Type = Cnc_Type;
            inValue.Cnc_ControllerType = Cnc_ControllerType;
            inValue.Service_Status = Service_Status;
            return ((IPS.MachineInfomation.IService1)(this)).BeginInsert_vNachineState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Insert_vNachineStateResponse IPS.MachineInfomation.IService1.EndInsert_vNachineState(System.IAsyncResult result) {
            return base.Channel.EndInsert_vNachineState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndInsert_vNachineState(System.IAsyncResult result) {
            IPS.MachineInfomation.Insert_vNachineStateResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndInsert_vNachineState(result);
            return retVal.Insert_vNachineStateResult;
        }
        
        private System.IAsyncResult OnBeginInsert_vNachineState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachine_Name = ((string)(inValues[0]));
            string vMachine_IP = ((string)(inValues[1]));
            string vMachine_State = ((string)(inValues[2]));
            string Cnc_Num = ((string)(inValues[3]));
            string Cnc_State = ((string)(inValues[4]));
            string Cnc_IP = ((string)(inValues[5]));
            string Cnc_Type = ((string)(inValues[6]));
            string Cnc_ControllerType = ((string)(inValues[7]));
            string Service_Status = ((string)(inValues[8]));
            return this.BeginInsert_vNachineState(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, callback, asyncState);
        }
        
        private object[] OnEndInsert_vNachineState(System.IAsyncResult result) {
            string retVal = this.EndInsert_vNachineState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsert_vNachineStateCompleted(object state) {
            if ((this.Insert_vNachineStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Insert_vNachineStateCompleted(this, new Insert_vNachineStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Insert_vNachineStateAsync(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.Insert_vNachineStateAsync(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, null);
        }
        
        public void Insert_vNachineStateAsync(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, object userState) {
            if ((this.onBeginInsert_vNachineStateDelegate == null)) {
                this.onBeginInsert_vNachineStateDelegate = new BeginOperationDelegate(this.OnBeginInsert_vNachineState);
            }
            if ((this.onEndInsert_vNachineStateDelegate == null)) {
                this.onEndInsert_vNachineStateDelegate = new EndOperationDelegate(this.OnEndInsert_vNachineState);
            }
            if ((this.onInsert_vNachineStateCompletedDelegate == null)) {
                this.onInsert_vNachineStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsert_vNachineStateCompleted);
            }
            base.InvokeAsync(this.onBeginInsert_vNachineStateDelegate, new object[] {
                        vMachine_Name,
                        vMachine_IP,
                        vMachine_State,
                        Cnc_Num,
                        Cnc_State,
                        Cnc_IP,
                        Cnc_Type,
                        Cnc_ControllerType,
                        Service_Status}, this.onEndInsert_vNachineStateDelegate, this.onInsert_vNachineStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginUpdate_vNachineState(IPS.MachineInfomation.Update_vNachineStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdate_vNachineState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdate_vNachineState(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Update_vNachineStateRequest inValue = new IPS.MachineInfomation.Update_vNachineStateRequest();
            inValue.ovMachine_Name = ovMachine_Name;
            inValue.oCnc_Num = oCnc_Num;
            inValue.vMachine_Name = vMachine_Name;
            inValue.vMachine_IP = vMachine_IP;
            inValue.vMachine_State = vMachine_State;
            inValue.Cnc_Num = Cnc_Num;
            inValue.Cnc_State = Cnc_State;
            inValue.Cnc_IP = Cnc_IP;
            inValue.Cnc_Type = Cnc_Type;
            inValue.Cnc_ControllerType = Cnc_ControllerType;
            inValue.Service_Status = Service_Status;
            return ((IPS.MachineInfomation.IService1)(this)).BeginUpdate_vNachineState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Update_vNachineStateResponse IPS.MachineInfomation.IService1.EndUpdate_vNachineState(System.IAsyncResult result) {
            return base.Channel.EndUpdate_vNachineState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUpdate_vNachineState(System.IAsyncResult result) {
            IPS.MachineInfomation.Update_vNachineStateResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndUpdate_vNachineState(result);
            return retVal.Update_vNachineStateResult;
        }
        
        private System.IAsyncResult OnBeginUpdate_vNachineState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ovMachine_Name = ((string)(inValues[0]));
            string oCnc_Num = ((string)(inValues[1]));
            string vMachine_Name = ((string)(inValues[2]));
            string vMachine_IP = ((string)(inValues[3]));
            string vMachine_State = ((string)(inValues[4]));
            string Cnc_Num = ((string)(inValues[5]));
            string Cnc_State = ((string)(inValues[6]));
            string Cnc_IP = ((string)(inValues[7]));
            string Cnc_Type = ((string)(inValues[8]));
            string Cnc_ControllerType = ((string)(inValues[9]));
            string Service_Status = ((string)(inValues[10]));
            return this.BeginUpdate_vNachineState(ovMachine_Name, oCnc_Num, vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, callback, asyncState);
        }
        
        private object[] OnEndUpdate_vNachineState(System.IAsyncResult result) {
            string retVal = this.EndUpdate_vNachineState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdate_vNachineStateCompleted(object state) {
            if ((this.Update_vNachineStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Update_vNachineStateCompleted(this, new Update_vNachineStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Update_vNachineStateAsync(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.Update_vNachineStateAsync(ovMachine_Name, oCnc_Num, vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, null);
        }
        
        public void Update_vNachineStateAsync(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, object userState) {
            if ((this.onBeginUpdate_vNachineStateDelegate == null)) {
                this.onBeginUpdate_vNachineStateDelegate = new BeginOperationDelegate(this.OnBeginUpdate_vNachineState);
            }
            if ((this.onEndUpdate_vNachineStateDelegate == null)) {
                this.onEndUpdate_vNachineStateDelegate = new EndOperationDelegate(this.OnEndUpdate_vNachineState);
            }
            if ((this.onUpdate_vNachineStateCompletedDelegate == null)) {
                this.onUpdate_vNachineStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdate_vNachineStateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdate_vNachineStateDelegate, new object[] {
                        ovMachine_Name,
                        oCnc_Num,
                        vMachine_Name,
                        vMachine_IP,
                        vMachine_State,
                        Cnc_Num,
                        Cnc_State,
                        Cnc_IP,
                        Cnc_Type,
                        Cnc_ControllerType,
                        Service_Status}, this.onEndUpdate_vNachineStateDelegate, this.onUpdate_vNachineStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginDelete_vMachibne(IPS.MachineInfomation.Delete_vMachibneRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete_vMachibne(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDelete_vMachibne(string Cnc_Num, string vMachine_Name, bool flag_vMachine, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Delete_vMachibneRequest inValue = new IPS.MachineInfomation.Delete_vMachibneRequest();
            inValue.Cnc_Num = Cnc_Num;
            inValue.vMachine_Name = vMachine_Name;
            inValue.flag_vMachine = flag_vMachine;
            return ((IPS.MachineInfomation.IService1)(this)).BeginDelete_vMachibne(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Delete_vMachibneResponse IPS.MachineInfomation.IService1.EndDelete_vMachibne(System.IAsyncResult result) {
            return base.Channel.EndDelete_vMachibne(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndDelete_vMachibne(System.IAsyncResult result) {
            IPS.MachineInfomation.Delete_vMachibneResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndDelete_vMachibne(result);
            return retVal.Delete_vMachibneResult;
        }
        
        private System.IAsyncResult OnBeginDelete_vMachibne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Cnc_Num = ((string)(inValues[0]));
            string vMachine_Name = ((string)(inValues[1]));
            bool flag_vMachine = ((bool)(inValues[2]));
            return this.BeginDelete_vMachibne(Cnc_Num, vMachine_Name, flag_vMachine, callback, asyncState);
        }
        
        private object[] OnEndDelete_vMachibne(System.IAsyncResult result) {
            string retVal = this.EndDelete_vMachibne(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelete_vMachibneCompleted(object state) {
            if ((this.Delete_vMachibneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Delete_vMachibneCompleted(this, new Delete_vMachibneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Delete_vMachibneAsync(string Cnc_Num, string vMachine_Name, bool flag_vMachine) {
            this.Delete_vMachibneAsync(Cnc_Num, vMachine_Name, flag_vMachine, null);
        }
        
        public void Delete_vMachibneAsync(string Cnc_Num, string vMachine_Name, bool flag_vMachine, object userState) {
            if ((this.onBeginDelete_vMachibneDelegate == null)) {
                this.onBeginDelete_vMachibneDelegate = new BeginOperationDelegate(this.OnBeginDelete_vMachibne);
            }
            if ((this.onEndDelete_vMachibneDelegate == null)) {
                this.onEndDelete_vMachibneDelegate = new EndOperationDelegate(this.OnEndDelete_vMachibne);
            }
            if ((this.onDelete_vMachibneCompletedDelegate == null)) {
                this.onDelete_vMachibneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelete_vMachibneCompleted);
            }
            base.InvokeAsync(this.onBeginDelete_vMachibneDelegate, new object[] {
                        Cnc_Num,
                        vMachine_Name,
                        flag_vMachine}, this.onEndDelete_vMachibneDelegate, this.onDelete_vMachibneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetVmachineList1(IPS.MachineInfomation.getVmachineList1Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVmachineList1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetVmachineList1(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getVmachineList1Request inValue = new IPS.MachineInfomation.getVmachineList1Request();
            return ((IPS.MachineInfomation.IService1)(this)).BegingetVmachineList1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getVmachineList1Response IPS.MachineInfomation.IService1.EndgetVmachineList1(System.IAsyncResult result) {
            return base.Channel.EndgetVmachineList1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Vmachine[] EndgetVmachineList1(System.IAsyncResult result) {
            IPS.MachineInfomation.getVmachineList1Response retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetVmachineList1(result);
            return retVal.getVmachineList1Result;
        }
        
        private System.IAsyncResult OnBegingetVmachineList1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetVmachineList1(callback, asyncState);
        }
        
        private object[] OnEndgetVmachineList1(System.IAsyncResult result) {
            Vmachine[] retVal = this.EndgetVmachineList1(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVmachineList1Completed(object state) {
            if ((this.getVmachineList1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVmachineList1Completed(this, new getVmachineList1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVmachineList1Async() {
            this.getVmachineList1Async(null);
        }
        
        public void getVmachineList1Async(object userState) {
            if ((this.onBegingetVmachineList1Delegate == null)) {
                this.onBegingetVmachineList1Delegate = new BeginOperationDelegate(this.OnBegingetVmachineList1);
            }
            if ((this.onEndgetVmachineList1Delegate == null)) {
                this.onEndgetVmachineList1Delegate = new EndOperationDelegate(this.OnEndgetVmachineList1);
            }
            if ((this.ongetVmachineList1CompletedDelegate == null)) {
                this.ongetVmachineList1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVmachineList1Completed);
            }
            base.InvokeAsync(this.onBegingetVmachineList1Delegate, null, this.onEndgetVmachineList1Delegate, this.ongetVmachineList1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginvMachine_RegInfo_Check(IPS.MachineInfomation.vMachine_RegInfo_CheckRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginvMachine_RegInfo_Check(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginvMachine_RegInfo_Check(string vMachine_Name, string vMachine_IP, string vMachine_State, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.vMachine_RegInfo_CheckRequest inValue = new IPS.MachineInfomation.vMachine_RegInfo_CheckRequest();
            inValue.vMachine_Name = vMachine_Name;
            inValue.vMachine_IP = vMachine_IP;
            inValue.vMachine_State = vMachine_State;
            return ((IPS.MachineInfomation.IService1)(this)).BeginvMachine_RegInfo_Check(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.vMachine_RegInfo_CheckResponse IPS.MachineInfomation.IService1.EndvMachine_RegInfo_Check(System.IAsyncResult result) {
            return base.Channel.EndvMachine_RegInfo_Check(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndvMachine_RegInfo_Check(System.IAsyncResult result) {
            IPS.MachineInfomation.vMachine_RegInfo_CheckResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndvMachine_RegInfo_Check(result);
            return retVal.vMachine_RegInfo_CheckResult;
        }
        
        private System.IAsyncResult OnBeginvMachine_RegInfo_Check(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachine_Name = ((string)(inValues[0]));
            string vMachine_IP = ((string)(inValues[1]));
            string vMachine_State = ((string)(inValues[2]));
            return this.BeginvMachine_RegInfo_Check(vMachine_Name, vMachine_IP, vMachine_State, callback, asyncState);
        }
        
        private object[] OnEndvMachine_RegInfo_Check(System.IAsyncResult result) {
            string retVal = this.EndvMachine_RegInfo_Check(result);
            return new object[] {
                    retVal};
        }
        
        private void OnvMachine_RegInfo_CheckCompleted(object state) {
            if ((this.vMachine_RegInfo_CheckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.vMachine_RegInfo_CheckCompleted(this, new vMachine_RegInfo_CheckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void vMachine_RegInfo_CheckAsync(string vMachine_Name, string vMachine_IP, string vMachine_State) {
            this.vMachine_RegInfo_CheckAsync(vMachine_Name, vMachine_IP, vMachine_State, null);
        }
        
        public void vMachine_RegInfo_CheckAsync(string vMachine_Name, string vMachine_IP, string vMachine_State, object userState) {
            if ((this.onBeginvMachine_RegInfo_CheckDelegate == null)) {
                this.onBeginvMachine_RegInfo_CheckDelegate = new BeginOperationDelegate(this.OnBeginvMachine_RegInfo_Check);
            }
            if ((this.onEndvMachine_RegInfo_CheckDelegate == null)) {
                this.onEndvMachine_RegInfo_CheckDelegate = new EndOperationDelegate(this.OnEndvMachine_RegInfo_Check);
            }
            if ((this.onvMachine_RegInfo_CheckCompletedDelegate == null)) {
                this.onvMachine_RegInfo_CheckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnvMachine_RegInfo_CheckCompleted);
            }
            base.InvokeAsync(this.onBeginvMachine_RegInfo_CheckDelegate, new object[] {
                        vMachine_Name,
                        vMachine_IP,
                        vMachine_State}, this.onEndvMachine_RegInfo_CheckDelegate, this.onvMachine_RegInfo_CheckCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginCnc_State_Check(IPS.MachineInfomation.Cnc_State_CheckRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCnc_State_Check(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCnc_State_Check(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.Cnc_State_CheckRequest inValue = new IPS.MachineInfomation.Cnc_State_CheckRequest();
            inValue.vMachine_Name = vMachine_Name;
            inValue.vMachine_IP = vMachine_IP;
            inValue.vMachine_State = vMachine_State;
            inValue.Cnc_Num = Cnc_Num;
            inValue.Cnc_State = Cnc_State;
            inValue.Cnc_IP = Cnc_IP;
            inValue.Cnc_Type = Cnc_Type;
            inValue.Cnc_ControllerType = Cnc_ControllerType;
            inValue.Service_Status = Service_Status;
            return ((IPS.MachineInfomation.IService1)(this)).BeginCnc_State_Check(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.Cnc_State_CheckResponse IPS.MachineInfomation.IService1.EndCnc_State_Check(System.IAsyncResult result) {
            return base.Channel.EndCnc_State_Check(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndCnc_State_Check(System.IAsyncResult result) {
            IPS.MachineInfomation.Cnc_State_CheckResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndCnc_State_Check(result);
            return retVal.Cnc_State_CheckResult;
        }
        
        private System.IAsyncResult OnBeginCnc_State_Check(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vMachine_Name = ((string)(inValues[0]));
            string vMachine_IP = ((string)(inValues[1]));
            string vMachine_State = ((string)(inValues[2]));
            string Cnc_Num = ((string)(inValues[3]));
            string Cnc_State = ((string)(inValues[4]));
            string Cnc_IP = ((string)(inValues[5]));
            string Cnc_Type = ((string)(inValues[6]));
            string Cnc_ControllerType = ((string)(inValues[7]));
            string Service_Status = ((string)(inValues[8]));
            return this.BeginCnc_State_Check(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, callback, asyncState);
        }
        
        private object[] OnEndCnc_State_Check(System.IAsyncResult result) {
            string retVal = this.EndCnc_State_Check(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCnc_State_CheckCompleted(object state) {
            if ((this.Cnc_State_CheckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Cnc_State_CheckCompleted(this, new Cnc_State_CheckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Cnc_State_CheckAsync(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            this.Cnc_State_CheckAsync(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status, null);
        }
        
        public void Cnc_State_CheckAsync(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status, object userState) {
            if ((this.onBeginCnc_State_CheckDelegate == null)) {
                this.onBeginCnc_State_CheckDelegate = new BeginOperationDelegate(this.OnBeginCnc_State_Check);
            }
            if ((this.onEndCnc_State_CheckDelegate == null)) {
                this.onEndCnc_State_CheckDelegate = new EndOperationDelegate(this.OnEndCnc_State_Check);
            }
            if ((this.onCnc_State_CheckCompletedDelegate == null)) {
                this.onCnc_State_CheckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCnc_State_CheckCompleted);
            }
            base.InvokeAsync(this.onBeginCnc_State_CheckDelegate, new object[] {
                        vMachine_Name,
                        vMachine_IP,
                        vMachine_State,
                        Cnc_Num,
                        Cnc_State,
                        Cnc_IP,
                        Cnc_Type,
                        Cnc_ControllerType,
                        Service_Status}, this.onEndCnc_State_CheckDelegate, this.onCnc_State_CheckCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Begintest(IPS.MachineInfomation.testRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintest(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Begintest(string s, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.testRequest inValue = new IPS.MachineInfomation.testRequest();
            inValue.s = s;
            return ((IPS.MachineInfomation.IService1)(this)).Begintest(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.testResponse IPS.MachineInfomation.IService1.Endtest(System.IAsyncResult result) {
            return base.Channel.Endtest(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string Endtest(System.IAsyncResult result) {
            IPS.MachineInfomation.testResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endtest(result);
            return retVal.testResult;
        }
        
        private System.IAsyncResult OnBegintest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string s = ((string)(inValues[0]));
            return this.Begintest(s, callback, asyncState);
        }
        
        private object[] OnEndtest(System.IAsyncResult result) {
            string retVal = this.Endtest(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestCompleted(object state) {
            if ((this.testCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testCompleted(this, new testCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testAsync(string s) {
            this.testAsync(s, null);
        }
        
        public void testAsync(string s, object userState) {
            if ((this.onBegintestDelegate == null)) {
                this.onBegintestDelegate = new BeginOperationDelegate(this.OnBegintest);
            }
            if ((this.onEndtestDelegate == null)) {
                this.onEndtestDelegate = new EndOperationDelegate(this.OnEndtest);
            }
            if ((this.ontestCompletedDelegate == null)) {
                this.ontestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestCompleted);
            }
            base.InvokeAsync(this.onBegintestDelegate, new object[] {
                        s}, this.onEndtestDelegate, this.ontestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Begintestv(IPS.MachineInfomation.testvRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintestv(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Begintestv(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.testvRequest inValue = new IPS.MachineInfomation.testvRequest();
            return ((IPS.MachineInfomation.IService1)(this)).Begintestv(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.testvResponse IPS.MachineInfomation.IService1.Endtestv(System.IAsyncResult result) {
            return base.Channel.Endtestv(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string Endtestv(System.IAsyncResult result) {
            IPS.MachineInfomation.testvResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endtestv(result);
            return retVal.testvResult;
        }
        
        private System.IAsyncResult OnBegintestv(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begintestv(callback, asyncState);
        }
        
        private object[] OnEndtestv(System.IAsyncResult result) {
            string retVal = this.Endtestv(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestvCompleted(object state) {
            if ((this.testvCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testvCompleted(this, new testvCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testvAsync() {
            this.testvAsync(null);
        }
        
        public void testvAsync(object userState) {
            if ((this.onBegintestvDelegate == null)) {
                this.onBegintestvDelegate = new BeginOperationDelegate(this.OnBegintestv);
            }
            if ((this.onEndtestvDelegate == null)) {
                this.onEndtestvDelegate = new EndOperationDelegate(this.OnEndtestv);
            }
            if ((this.ontestvCompletedDelegate == null)) {
                this.ontestvCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestvCompleted);
            }
            base.InvokeAsync(this.onBegintestvDelegate, null, this.onEndtestvDelegate, this.ontestvCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Begintestm(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintestm(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void IPS.MachineInfomation.IService1.Endtestm(System.IAsyncResult result) {
            base.Channel.Endtestm(result);
        }
        
        private System.IAsyncResult OnBegintestm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IPS.MachineInfomation.IService1)(this)).Begintestm(callback, asyncState);
        }
        
        private object[] OnEndtestm(System.IAsyncResult result) {
            ((IPS.MachineInfomation.IService1)(this)).Endtestm(result);
            return null;
        }
        
        private void OntestmCompleted(object state) {
            if ((this.testmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testmAsync() {
            this.testmAsync(null);
        }
        
        public void testmAsync(object userState) {
            if ((this.onBegintestmDelegate == null)) {
                this.onBegintestmDelegate = new BeginOperationDelegate(this.OnBegintestm);
            }
            if ((this.onEndtestmDelegate == null)) {
                this.onEndtestmDelegate = new EndOperationDelegate(this.OnEndtestm);
            }
            if ((this.ontestmCompletedDelegate == null)) {
                this.ontestmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestmCompleted);
            }
            base.InvokeAsync(this.onBegintestmDelegate, null, this.onEndtestmDelegate, this.ontestmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginregisterCNCInfo(IPS.MachineInfomation.registerCNCInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregisterCNCInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginregisterCNCInfo(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.registerCNCInfoRequest inValue = new IPS.MachineInfomation.registerCNCInfoRequest();
            inValue.v_machine_ID = v_machine_ID;
            inValue.CNC_ID = CNC_ID;
            inValue.CNCIP = CNCIP;
            inValue.CNC_Type = CNC_Type;
            inValue.CNCState = CNCState;
            return ((IPS.MachineInfomation.IService1)(this)).BeginregisterCNCInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.registerCNCInfoResponse IPS.MachineInfomation.IService1.EndregisterCNCInfo(System.IAsyncResult result) {
            return base.Channel.EndregisterCNCInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndregisterCNCInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.registerCNCInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndregisterCNCInfo(result);
            return retVal.registerCNCInfoResult;
        }
        
        private System.IAsyncResult OnBeginregisterCNCInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_machine_ID = ((string)(inValues[0]));
            string CNC_ID = ((string)(inValues[1]));
            string CNCIP = ((string)(inValues[2]));
            string CNC_Type = ((string)(inValues[3]));
            string CNCState = ((string)(inValues[4]));
            return this.BeginregisterCNCInfo(v_machine_ID, CNC_ID, CNCIP, CNC_Type, CNCState, callback, asyncState);
        }
        
        private object[] OnEndregisterCNCInfo(System.IAsyncResult result) {
            bool retVal = this.EndregisterCNCInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterCNCInfoCompleted(object state) {
            if ((this.registerCNCInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerCNCInfoCompleted(this, new registerCNCInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerCNCInfoAsync(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState) {
            this.registerCNCInfoAsync(v_machine_ID, CNC_ID, CNCIP, CNC_Type, CNCState, null);
        }
        
        public void registerCNCInfoAsync(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState, object userState) {
            if ((this.onBeginregisterCNCInfoDelegate == null)) {
                this.onBeginregisterCNCInfoDelegate = new BeginOperationDelegate(this.OnBeginregisterCNCInfo);
            }
            if ((this.onEndregisterCNCInfoDelegate == null)) {
                this.onEndregisterCNCInfoDelegate = new EndOperationDelegate(this.OnEndregisterCNCInfo);
            }
            if ((this.onregisterCNCInfoCompletedDelegate == null)) {
                this.onregisterCNCInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterCNCInfoCompleted);
            }
            base.InvokeAsync(this.onBeginregisterCNCInfoDelegate, new object[] {
                        v_machine_ID,
                        CNC_ID,
                        CNCIP,
                        CNC_Type,
                        CNCState}, this.onEndregisterCNCInfoDelegate, this.onregisterCNCInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginregistervMachineInfo(IPS.MachineInfomation.registervMachineInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregistervMachineInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginregistervMachineInfo(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.registervMachineInfoRequest inValue = new IPS.MachineInfomation.registervMachineInfoRequest();
            inValue.v_machine_ID = v_machine_ID;
            inValue.v_MachineIP = v_MachineIP;
            inValue.CNCID = CNCID;
            inValue.vMachineState = vMachineState;
            return ((IPS.MachineInfomation.IService1)(this)).BeginregistervMachineInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.registervMachineInfoResponse IPS.MachineInfomation.IService1.EndregistervMachineInfo(System.IAsyncResult result) {
            return base.Channel.EndregistervMachineInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndregistervMachineInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.registervMachineInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndregistervMachineInfo(result);
            return retVal.registervMachineInfoResult;
        }
        
        private System.IAsyncResult OnBeginregistervMachineInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_machine_ID = ((string)(inValues[0]));
            string v_MachineIP = ((string)(inValues[1]));
            string[] CNCID = ((string[])(inValues[2]));
            string vMachineState = ((string)(inValues[3]));
            return this.BeginregistervMachineInfo(v_machine_ID, v_MachineIP, CNCID, vMachineState, callback, asyncState);
        }
        
        private object[] OnEndregistervMachineInfo(System.IAsyncResult result) {
            bool retVal = this.EndregistervMachineInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregistervMachineInfoCompleted(object state) {
            if ((this.registervMachineInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registervMachineInfoCompleted(this, new registervMachineInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registervMachineInfoAsync(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState) {
            this.registervMachineInfoAsync(v_machine_ID, v_MachineIP, CNCID, vMachineState, null);
        }
        
        public void registervMachineInfoAsync(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState, object userState) {
            if ((this.onBeginregistervMachineInfoDelegate == null)) {
                this.onBeginregistervMachineInfoDelegate = new BeginOperationDelegate(this.OnBeginregistervMachineInfo);
            }
            if ((this.onEndregistervMachineInfoDelegate == null)) {
                this.onEndregistervMachineInfoDelegate = new EndOperationDelegate(this.OnEndregistervMachineInfo);
            }
            if ((this.onregistervMachineInfoCompletedDelegate == null)) {
                this.onregistervMachineInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregistervMachineInfoCompleted);
            }
            base.InvokeAsync(this.onBeginregistervMachineInfoDelegate, new object[] {
                        v_machine_ID,
                        v_MachineIP,
                        CNCID,
                        vMachineState}, this.onEndregistervMachineInfoDelegate, this.onregistervMachineInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Beginmodify_cncstate(IPS.MachineInfomation.modify_cncstateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmodify_cncstate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginmodify_cncstate(string v_machine_ID, string CNC_ID, string CNCState, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.modify_cncstateRequest inValue = new IPS.MachineInfomation.modify_cncstateRequest();
            inValue.v_machine_ID = v_machine_ID;
            inValue.CNC_ID = CNC_ID;
            inValue.CNCState = CNCState;
            return ((IPS.MachineInfomation.IService1)(this)).Beginmodify_cncstate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.modify_cncstateResponse IPS.MachineInfomation.IService1.Endmodify_cncstate(System.IAsyncResult result) {
            return base.Channel.Endmodify_cncstate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool Endmodify_cncstate(System.IAsyncResult result) {
            IPS.MachineInfomation.modify_cncstateResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endmodify_cncstate(result);
            return retVal.modify_cncstateResult;
        }
        
        private System.IAsyncResult OnBeginmodify_cncstate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_machine_ID = ((string)(inValues[0]));
            string CNC_ID = ((string)(inValues[1]));
            string CNCState = ((string)(inValues[2]));
            return this.Beginmodify_cncstate(v_machine_ID, CNC_ID, CNCState, callback, asyncState);
        }
        
        private object[] OnEndmodify_cncstate(System.IAsyncResult result) {
            bool retVal = this.Endmodify_cncstate(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmodify_cncstateCompleted(object state) {
            if ((this.modify_cncstateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.modify_cncstateCompleted(this, new modify_cncstateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void modify_cncstateAsync(string v_machine_ID, string CNC_ID, string CNCState) {
            this.modify_cncstateAsync(v_machine_ID, CNC_ID, CNCState, null);
        }
        
        public void modify_cncstateAsync(string v_machine_ID, string CNC_ID, string CNCState, object userState) {
            if ((this.onBeginmodify_cncstateDelegate == null)) {
                this.onBeginmodify_cncstateDelegate = new BeginOperationDelegate(this.OnBeginmodify_cncstate);
            }
            if ((this.onEndmodify_cncstateDelegate == null)) {
                this.onEndmodify_cncstateDelegate = new EndOperationDelegate(this.OnEndmodify_cncstate);
            }
            if ((this.onmodify_cncstateCompletedDelegate == null)) {
                this.onmodify_cncstateCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmodify_cncstateCompleted);
            }
            base.InvokeAsync(this.onBeginmodify_cncstateDelegate, new object[] {
                        v_machine_ID,
                        CNC_ID,
                        CNCState}, this.onEndmodify_cncstateDelegate, this.onmodify_cncstateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.Beginmodify_vMachinestate(IPS.MachineInfomation.modify_vMachinestateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmodify_vMachinestate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginmodify_vMachinestate(string v_machine_ID, string v_machine_IP, string State, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.modify_vMachinestateRequest inValue = new IPS.MachineInfomation.modify_vMachinestateRequest();
            inValue.v_machine_ID = v_machine_ID;
            inValue.v_machine_IP = v_machine_IP;
            inValue.State = State;
            return ((IPS.MachineInfomation.IService1)(this)).Beginmodify_vMachinestate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.modify_vMachinestateResponse IPS.MachineInfomation.IService1.Endmodify_vMachinestate(System.IAsyncResult result) {
            return base.Channel.Endmodify_vMachinestate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool Endmodify_vMachinestate(System.IAsyncResult result) {
            IPS.MachineInfomation.modify_vMachinestateResponse retVal = ((IPS.MachineInfomation.IService1)(this)).Endmodify_vMachinestate(result);
            return retVal.modify_vMachinestateResult;
        }
        
        private System.IAsyncResult OnBeginmodify_vMachinestate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string v_machine_ID = ((string)(inValues[0]));
            string v_machine_IP = ((string)(inValues[1]));
            string State = ((string)(inValues[2]));
            return this.Beginmodify_vMachinestate(v_machine_ID, v_machine_IP, State, callback, asyncState);
        }
        
        private object[] OnEndmodify_vMachinestate(System.IAsyncResult result) {
            bool retVal = this.Endmodify_vMachinestate(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmodify_vMachinestateCompleted(object state) {
            if ((this.modify_vMachinestateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.modify_vMachinestateCompleted(this, new modify_vMachinestateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void modify_vMachinestateAsync(string v_machine_ID, string v_machine_IP, string State) {
            this.modify_vMachinestateAsync(v_machine_ID, v_machine_IP, State, null);
        }
        
        public void modify_vMachinestateAsync(string v_machine_ID, string v_machine_IP, string State, object userState) {
            if ((this.onBeginmodify_vMachinestateDelegate == null)) {
                this.onBeginmodify_vMachinestateDelegate = new BeginOperationDelegate(this.OnBeginmodify_vMachinestate);
            }
            if ((this.onEndmodify_vMachinestateDelegate == null)) {
                this.onEndmodify_vMachinestateDelegate = new EndOperationDelegate(this.OnEndmodify_vMachinestate);
            }
            if ((this.onmodify_vMachinestateCompletedDelegate == null)) {
                this.onmodify_vMachinestateCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmodify_vMachinestateCompleted);
            }
            base.InvokeAsync(this.onBeginmodify_vMachinestateDelegate, new object[] {
                        v_machine_ID,
                        v_machine_IP,
                        State}, this.onEndmodify_vMachinestateDelegate, this.onmodify_vMachinestateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BegingetProductInfo(IPS.MachineInfomation.getProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProductInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetProductInfo(System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.getProductInfoRequest inValue = new IPS.MachineInfomation.getProductInfoRequest();
            return ((IPS.MachineInfomation.IService1)(this)).BegingetProductInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.getProductInfoResponse IPS.MachineInfomation.IService1.EndgetProductInfo(System.IAsyncResult result) {
            return base.Channel.EndgetProductInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[][] EndgetProductInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.getProductInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndgetProductInfo(result);
            return retVal.getProductInfoResult;
        }
        
        private System.IAsyncResult OnBegingetProductInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetProductInfo(callback, asyncState);
        }
        
        private object[] OnEndgetProductInfo(System.IAsyncResult result) {
            string[][] retVal = this.EndgetProductInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProductInfoCompleted(object state) {
            if ((this.getProductInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProductInfoCompleted(this, new getProductInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProductInfoAsync() {
            this.getProductInfoAsync(null);
        }
        
        public void getProductInfoAsync(object userState) {
            if ((this.onBegingetProductInfoDelegate == null)) {
                this.onBegingetProductInfoDelegate = new BeginOperationDelegate(this.OnBegingetProductInfo);
            }
            if ((this.onEndgetProductInfoDelegate == null)) {
                this.onEndgetProductInfoDelegate = new EndOperationDelegate(this.OnEndgetProductInfo);
            }
            if ((this.ongetProductInfoCompletedDelegate == null)) {
                this.ongetProductInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetProductInfoDelegate, null, this.onEndgetProductInfoDelegate, this.ongetProductInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginregisterProductionHistory(IPS.MachineInfomation.registerProductionHistoryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregisterProductionHistory(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginregisterProductionHistory(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.registerProductionHistoryRequest inValue = new IPS.MachineInfomation.registerProductionHistoryRequest();
            inValue.ProductName = ProductName;
            inValue.ProductType = ProductType;
            inValue.WorkPieceID = WorkPieceID;
            inValue.v_MachineID = v_MachineID;
            inValue.CNC_ID = CNC_ID;
            inValue.CNC_Type = CNC_Type;
            inValue.WorkPieceState = WorkPieceState;
            inValue.Process_StartTime = Process_StartTime;
            inValue.Process_EndTime = Process_EndTime;
            return ((IPS.MachineInfomation.IService1)(this)).BeginregisterProductionHistory(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.registerProductionHistoryResponse IPS.MachineInfomation.IService1.EndregisterProductionHistory(System.IAsyncResult result) {
            return base.Channel.EndregisterProductionHistory(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndregisterProductionHistory(System.IAsyncResult result) {
            IPS.MachineInfomation.registerProductionHistoryResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndregisterProductionHistory(result);
            return retVal.registerProductionHistoryResult;
        }
        
        private System.IAsyncResult OnBeginregisterProductionHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProductName = ((string)(inValues[0]));
            string ProductType = ((string)(inValues[1]));
            string WorkPieceID = ((string)(inValues[2]));
            string v_MachineID = ((string)(inValues[3]));
            string CNC_ID = ((string)(inValues[4]));
            string CNC_Type = ((string)(inValues[5]));
            string WorkPieceState = ((string)(inValues[6]));
            System.DateTime Process_StartTime = ((System.DateTime)(inValues[7]));
            System.DateTime Process_EndTime = ((System.DateTime)(inValues[8]));
            return this.BeginregisterProductionHistory(ProductName, ProductType, WorkPieceID, v_MachineID, CNC_ID, CNC_Type, WorkPieceState, Process_StartTime, Process_EndTime, callback, asyncState);
        }
        
        private object[] OnEndregisterProductionHistory(System.IAsyncResult result) {
            bool retVal = this.EndregisterProductionHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterProductionHistoryCompleted(object state) {
            if ((this.registerProductionHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerProductionHistoryCompleted(this, new registerProductionHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerProductionHistoryAsync(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime) {
            this.registerProductionHistoryAsync(ProductName, ProductType, WorkPieceID, v_MachineID, CNC_ID, CNC_Type, WorkPieceState, Process_StartTime, Process_EndTime, null);
        }
        
        public void registerProductionHistoryAsync(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime, object userState) {
            if ((this.onBeginregisterProductionHistoryDelegate == null)) {
                this.onBeginregisterProductionHistoryDelegate = new BeginOperationDelegate(this.OnBeginregisterProductionHistory);
            }
            if ((this.onEndregisterProductionHistoryDelegate == null)) {
                this.onEndregisterProductionHistoryDelegate = new EndOperationDelegate(this.OnEndregisterProductionHistory);
            }
            if ((this.onregisterProductionHistoryCompletedDelegate == null)) {
                this.onregisterProductionHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterProductionHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginregisterProductionHistoryDelegate, new object[] {
                        ProductName,
                        ProductType,
                        WorkPieceID,
                        v_MachineID,
                        CNC_ID,
                        CNC_Type,
                        WorkPieceState,
                        Process_StartTime,
                        Process_EndTime}, this.onEndregisterProductionHistoryDelegate, this.onregisterProductionHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IPS.MachineInfomation.IService1.BeginregisterProductInfo(IPS.MachineInfomation.registerProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregisterProductInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginregisterProductInfo(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID, System.AsyncCallback callback, object asyncState) {
            IPS.MachineInfomation.registerProductInfoRequest inValue = new IPS.MachineInfomation.registerProductInfoRequest();
            inValue.CNC_ID = CNC_ID;
            inValue.v_Machine_ID = v_Machine_ID;
            inValue.CLFile = CLFile;
            inValue.ProductType = ProductType;
            inValue.inProductTypeSub_ID = inProductTypeSub_ID;
            inValue.inMetrology_ID = inMetrology_ID;
            inValue.inBlock_ID = inBlock_ID;
            return ((IPS.MachineInfomation.IService1)(this)).BeginregisterProductInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IPS.MachineInfomation.registerProductInfoResponse IPS.MachineInfomation.IService1.EndregisterProductInfo(System.IAsyncResult result) {
            return base.Channel.EndregisterProductInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndregisterProductInfo(System.IAsyncResult result) {
            IPS.MachineInfomation.registerProductInfoResponse retVal = ((IPS.MachineInfomation.IService1)(this)).EndregisterProductInfo(result);
            return retVal.registerProductInfoResult;
        }
        
        private System.IAsyncResult OnBeginregisterProductInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CNC_ID = ((string)(inValues[0]));
            string v_Machine_ID = ((string)(inValues[1]));
            string CLFile = ((string)(inValues[2]));
            string ProductType = ((string)(inValues[3]));
            string inProductTypeSub_ID = ((string)(inValues[4]));
            string inMetrology_ID = ((string)(inValues[5]));
            string inBlock_ID = ((string)(inValues[6]));
            return this.BeginregisterProductInfo(CNC_ID, v_Machine_ID, CLFile, ProductType, inProductTypeSub_ID, inMetrology_ID, inBlock_ID, callback, asyncState);
        }
        
        private object[] OnEndregisterProductInfo(System.IAsyncResult result) {
            string retVal = this.EndregisterProductInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterProductInfoCompleted(object state) {
            if ((this.registerProductInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerProductInfoCompleted(this, new registerProductInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerProductInfoAsync(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID) {
            this.registerProductInfoAsync(CNC_ID, v_Machine_ID, CLFile, ProductType, inProductTypeSub_ID, inMetrology_ID, inBlock_ID, null);
        }
        
        public void registerProductInfoAsync(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID, object userState) {
            if ((this.onBeginregisterProductInfoDelegate == null)) {
                this.onBeginregisterProductInfoDelegate = new BeginOperationDelegate(this.OnBeginregisterProductInfo);
            }
            if ((this.onEndregisterProductInfoDelegate == null)) {
                this.onEndregisterProductInfoDelegate = new EndOperationDelegate(this.OnEndregisterProductInfo);
            }
            if ((this.onregisterProductInfoCompletedDelegate == null)) {
                this.onregisterProductInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterProductInfoCompleted);
            }
            base.InvokeAsync(this.onBeginregisterProductInfoDelegate, new object[] {
                        CNC_ID,
                        v_Machine_ID,
                        CLFile,
                        ProductType,
                        inProductTypeSub_ID,
                        inMetrology_ID,
                        inBlock_ID}, this.onEndregisterProductInfoDelegate, this.onregisterProductInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IPS.MachineInfomation.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<IPS.MachineInfomation.IService1>, IPS.MachineInfomation.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<IPS.MachineInfomation.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetProductBasicInfo(IPS.MachineInfomation.getProductBasicInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductBasicInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getProductBasicInfoResponse EndgetProductBasicInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getProductBasicInfoResponse _result = ((IPS.MachineInfomation.getProductBasicInfoResponse)(base.EndInvoke("getProductBasicInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductionHistoInfo(IPS.MachineInfomation.getProductionHistoInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductionHistoInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getProductionHistoInfoResponse EndgetProductionHistoInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getProductionHistoInfoResponse _result = ((IPS.MachineInfomation.getProductionHistoInfoResponse)(base.EndInvoke("getProductionHistoInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDCP(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getDCP", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndgetDCP(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("getDCP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginServiceBroker_sendDataCollectionReport_Return(IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ServiceBroker_sendDataCollectionReport_Return", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse EndServiceBroker_sendDataCollectionReport_Return(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse _result = ((IPS.MachineInfomation.ServiceBroker_sendDataCollectionReport_ReturnResponse)(base.EndInvoke("ServiceBroker_sendDataCollectionReport_Return", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_Model_From_MM(IPS.MachineInfomation.Get_Model_From_MMRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Get_Model_From_MM", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Get_Model_From_MMResponse EndGet_Model_From_MM(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Get_Model_From_MMResponse _result = ((IPS.MachineInfomation.Get_Model_From_MMResponse)(base.EndInvoke("Get_Model_From_MM", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginget_vMachineIP(IPS.MachineInfomation.get_vMachineIPRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("get_vMachineIP", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.get_vMachineIPResponse Endget_vMachineIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.get_vMachineIPResponse _result = ((IPS.MachineInfomation.get_vMachineIPResponse)(base.EndInvoke("get_vMachineIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEquipmentInformationList(IPS.MachineInfomation.getEquipmentInformationListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEquipmentInformationList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getEquipmentInformationListResponse EndgetEquipmentInformationList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getEquipmentInformationListResponse _result = ((IPS.MachineInfomation.getEquipmentInformationListResponse)(base.EndInvoke("getEquipmentInformationList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanyInfo(IPS.MachineInfomation.GetCompanyInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetCompanyInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.GetCompanyInfoResponse EndGetCompanyInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.GetCompanyInfoResponse _result = ((IPS.MachineInfomation.GetCompanyInfoResponse)(base.EndInvoke("GetCompanyInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServiceBrokerInfo(IPS.MachineInfomation.GetServiceBrokerInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetServiceBrokerInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.GetServiceBrokerInfoResponse EndGetServiceBrokerInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.GetServiceBrokerInfoResponse _result = ((IPS.MachineInfomation.GetServiceBrokerInfoResponse)(base.EndInvoke("GetServiceBrokerInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetvMachineCNCInfo(IPS.MachineInfomation.GetvMachineCNCInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetvMachineCNCInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.GetvMachineCNCInfoResponse EndGetvMachineCNCInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.GetvMachineCNCInfoResponse _result = ((IPS.MachineInfomation.GetvMachineCNCInfoResponse)(base.EndInvoke("GetvMachineCNCInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetvMachineCNCInfo_Ontology(IPS.MachineInfomation.GetvMachineCNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetvMachineCNCInfo_Ontology", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse EndGetvMachineCNCInfo_Ontology(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse _result = ((IPS.MachineInfomation.GetvMachineCNCInfo_OntologyResponse)(base.EndInvoke("GetvMachineCNCInfo_Ontology", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadNCFile(IPS.MachineInfomation.DownloadNCFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DownloadNCFile", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.DownloadNCFileResponse EndDownloadNCFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.DownloadNCFileResponse _result = ((IPS.MachineInfomation.DownloadNCFileResponse)(base.EndInvoke("DownloadNCFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_vMachineInfo_Ontology(IPS.MachineInfomation.Get_vMachineInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Get_vMachineInfo_Ontology", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse EndGet_vMachineInfo_Ontology(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse _result = ((IPS.MachineInfomation.Get_vMachineInfo_OntologyResponse)(base.EndInvoke("Get_vMachineInfo_Ontology", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_CNCInfo_Ontology(IPS.MachineInfomation.Get_CNCInfo_OntologyRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Get_CNCInfo_Ontology", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Get_CNCInfo_OntologyResponse EndGet_CNCInfo_Ontology(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Get_CNCInfo_OntologyResponse _result = ((IPS.MachineInfomation.Get_CNCInfo_OntologyResponse)(base.EndInvoke("Get_CNCInfo_Ontology", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginkinfe_Info(IPS.MachineInfomation.kinfe_InfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("kinfe_Info", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.kinfe_InfoResponse Endkinfe_Info(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.kinfe_InfoResponse _result = ((IPS.MachineInfomation.kinfe_InfoResponse)(base.EndInvoke("kinfe_Info", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetVmachineList(IPS.MachineInfomation.getVmachineListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getVmachineList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getVmachineListResponse EndgetVmachineList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getVmachineListResponse _result = ((IPS.MachineInfomation.getVmachineListResponse)(base.EndInvoke("getVmachineList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginregisterVmachine(IPS.MachineInfomation.registerVmachineRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("registerVmachine", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.registerVmachineResponse EndregisterVmachine(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.registerVmachineResponse _result = ((IPS.MachineInfomation.registerVmachineResponse)(base.EndInvoke("registerVmachine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginsendAlarm(IPS.MachineInfomation.sendAlarmRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("sendAlarm", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.sendAlarmResponse EndsendAlarm(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.sendAlarmResponse _result = ((IPS.MachineInfomation.sendAlarmResponse)(base.EndInvoke("sendAlarm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEquipmentList(IPS.MachineInfomation.getEquipmentListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEquipmentList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getEquipmentListResponse EndgetEquipmentList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getEquipmentListResponse _result = ((IPS.MachineInfomation.getEquipmentListResponse)(base.EndInvoke("getEquipmentList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginfanOutModel(IPS.MachineInfomation.fanOutModelRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("fanOutModel", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.fanOutModelResponse EndfanOutModel(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.fanOutModelResponse _result = ((IPS.MachineInfomation.fanOutModelResponse)(base.EndInvoke("fanOutModel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetVmachineInformation(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getVmachineInformation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndgetVmachineInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("getVmachineInformation", _args, result);
            }
            
            public System.IAsyncResult BegingetRunningModelInformation(IPS.MachineInfomation.getRunningModelInformationRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getRunningModelInformation", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getRunningModelInformationResponse EndgetRunningModelInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getRunningModelInformationResponse _result = ((IPS.MachineInfomation.getRunningModelInformationResponse)(base.EndInvoke("getRunningModelInformation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetVmachineInformationList(IPS.MachineInfomation.getVmachineInformationListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getVmachineInformationList", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getVmachineInformationListResponse EndgetVmachineInformationList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getVmachineInformationListResponse _result = ((IPS.MachineInfomation.getVmachineInformationListResponse)(base.EndInvoke("getVmachineInformationList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginuploadSTDB(IPS.MachineInfomation.uploadSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("uploadSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.uploadSTDBResponse EnduploadSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.uploadSTDBResponse _result = ((IPS.MachineInfomation.uploadSTDBResponse)(base.EndInvoke("uploadSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginuploadDefOfSTDB(IPS.MachineInfomation.uploadDefOfSTDBRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("uploadDefOfSTDB", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.uploadDefOfSTDBResponse EnduploadDefOfSTDB(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.uploadDefOfSTDBResponse _result = ((IPS.MachineInfomation.uploadDefOfSTDBResponse)(base.EndInvoke("uploadDefOfSTDB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateVMResult(IPS.MachineInfomation.updateVMResultRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("updateVMResult", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.updateVMResultResponse EndupdateVMResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.updateVMResultResponse _result = ((IPS.MachineInfomation.updateVMResultResponse)(base.EndInvoke("updateVMResult", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEquipmentListByVmachine(IPS.MachineInfomation.getEquipmentListByVmachineRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEquipmentListByVmachine", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getEquipmentListByVmachineResponse EndgetEquipmentListByVmachine(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getEquipmentListByVmachineResponse _result = ((IPS.MachineInfomation.getEquipmentListByVmachineResponse)(base.EndInvoke("getEquipmentListByVmachine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsert_vNachineState(IPS.MachineInfomation.Insert_vNachineStateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Insert_vNachineState", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Insert_vNachineStateResponse EndInsert_vNachineState(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Insert_vNachineStateResponse _result = ((IPS.MachineInfomation.Insert_vNachineStateResponse)(base.EndInvoke("Insert_vNachineState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdate_vNachineState(IPS.MachineInfomation.Update_vNachineStateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Update_vNachineState", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Update_vNachineStateResponse EndUpdate_vNachineState(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Update_vNachineStateResponse _result = ((IPS.MachineInfomation.Update_vNachineStateResponse)(base.EndInvoke("Update_vNachineState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete_vMachibne(IPS.MachineInfomation.Delete_vMachibneRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Delete_vMachibne", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Delete_vMachibneResponse EndDelete_vMachibne(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Delete_vMachibneResponse _result = ((IPS.MachineInfomation.Delete_vMachibneResponse)(base.EndInvoke("Delete_vMachibne", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetVmachineList1(IPS.MachineInfomation.getVmachineList1Request request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getVmachineList1", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getVmachineList1Response EndgetVmachineList1(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getVmachineList1Response _result = ((IPS.MachineInfomation.getVmachineList1Response)(base.EndInvoke("getVmachineList1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginvMachine_RegInfo_Check(IPS.MachineInfomation.vMachine_RegInfo_CheckRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("vMachine_RegInfo_Check", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.vMachine_RegInfo_CheckResponse EndvMachine_RegInfo_Check(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.vMachine_RegInfo_CheckResponse _result = ((IPS.MachineInfomation.vMachine_RegInfo_CheckResponse)(base.EndInvoke("vMachine_RegInfo_Check", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCnc_State_Check(IPS.MachineInfomation.Cnc_State_CheckRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Cnc_State_Check", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.Cnc_State_CheckResponse EndCnc_State_Check(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.Cnc_State_CheckResponse _result = ((IPS.MachineInfomation.Cnc_State_CheckResponse)(base.EndInvoke("Cnc_State_Check", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begintest(IPS.MachineInfomation.testRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("test", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.testResponse Endtest(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.testResponse _result = ((IPS.MachineInfomation.testResponse)(base.EndInvoke("test", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begintestv(IPS.MachineInfomation.testvRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("testv", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.testvResponse Endtestv(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.testvResponse _result = ((IPS.MachineInfomation.testvResponse)(base.EndInvoke("testv", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begintestm(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("testm", _args, callback, asyncState);
                return _result;
            }
            
            public void Endtestm(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("testm", _args, result);
            }
            
            public System.IAsyncResult BeginregisterCNCInfo(IPS.MachineInfomation.registerCNCInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("registerCNCInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.registerCNCInfoResponse EndregisterCNCInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.registerCNCInfoResponse _result = ((IPS.MachineInfomation.registerCNCInfoResponse)(base.EndInvoke("registerCNCInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginregistervMachineInfo(IPS.MachineInfomation.registervMachineInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("registervMachineInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.registervMachineInfoResponse EndregistervMachineInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.registervMachineInfoResponse _result = ((IPS.MachineInfomation.registervMachineInfoResponse)(base.EndInvoke("registervMachineInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginmodify_cncstate(IPS.MachineInfomation.modify_cncstateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("modify_cncstate", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.modify_cncstateResponse Endmodify_cncstate(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.modify_cncstateResponse _result = ((IPS.MachineInfomation.modify_cncstateResponse)(base.EndInvoke("modify_cncstate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginmodify_vMachinestate(IPS.MachineInfomation.modify_vMachinestateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("modify_vMachinestate", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.modify_vMachinestateResponse Endmodify_vMachinestate(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.modify_vMachinestateResponse _result = ((IPS.MachineInfomation.modify_vMachinestateResponse)(base.EndInvoke("modify_vMachinestate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetProductInfo(IPS.MachineInfomation.getProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getProductInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.getProductInfoResponse EndgetProductInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.getProductInfoResponse _result = ((IPS.MachineInfomation.getProductInfoResponse)(base.EndInvoke("getProductInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginregisterProductionHistory(IPS.MachineInfomation.registerProductionHistoryRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("registerProductionHistory", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.registerProductionHistoryResponse EndregisterProductionHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.registerProductionHistoryResponse _result = ((IPS.MachineInfomation.registerProductionHistoryResponse)(base.EndInvoke("registerProductionHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginregisterProductInfo(IPS.MachineInfomation.registerProductInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("registerProductInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IPS.MachineInfomation.registerProductInfoResponse EndregisterProductInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IPS.MachineInfomation.registerProductInfoResponse _result = ((IPS.MachineInfomation.registerProductInfoResponse)(base.EndInvoke("registerProductInfo", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "4.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
