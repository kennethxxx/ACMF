//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.269
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelManagementServices.ServiceBrokerServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    [System.SerializableAttribute()]
    public partial class ProductBasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.Xinfo[] XinfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.Yinfo[] YinfoListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.Xinfo[] XinfoList {
            get {
                return this.XinfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.XinfoListField, value) != true)) {
                    this.XinfoListField = value;
                    this.RaisePropertyChanged("XinfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.Yinfo[] YinfoList {
            get {
                return this.YinfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.YinfoListField, value) != true)) {
                    this.YinfoListField = value;
                    this.RaisePropertyChanged("YinfoList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Xinfo", Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    [System.SerializableAttribute()]
    public partial class Xinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Yinfo", Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    [System.SerializableAttribute()]
    public partial class Yinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Model_GetContent", Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    [System.SerializableAttribute()]
    public partial class Model_GetContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNC_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cretateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNC_ID {
            get {
                return this.CNC_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.CNC_IDField, value) != true)) {
                    this.CNC_IDField = value;
                    this.RaisePropertyChanged("CNC_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PK {
            get {
                return this.PKField;
            }
            set {
                if ((object.ReferenceEquals(this.PKField, value) != true)) {
                    this.PKField = value;
                    this.RaisePropertyChanged("PK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cretateTime {
            get {
                return this.cretateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.cretateTimeField, value) != true)) {
                    this.cretateTimeField = value;
                    this.RaisePropertyChanged("cretateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineIP {
            get {
                return this.vMachineIPField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineIPField, value) != true)) {
                    this.vMachineIPField = value;
                    this.RaisePropertyChanged("vMachineIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentInformation", Namespace="http://schemas.datacontract.org/2004/07/ModelManagementServices")]
    [System.SerializableAttribute()]
    public partial class EquipmentInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string v_Machine_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string v_Machine_IPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNCID {
            get {
                return this.CNCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CNCIDField, value) != true)) {
                    this.CNCIDField = value;
                    this.RaisePropertyChanged("CNCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string v_Machine_ID {
            get {
                return this.v_Machine_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.v_Machine_IDField, value) != true)) {
                    this.v_Machine_IDField = value;
                    this.RaisePropertyChanged("v_Machine_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string v_Machine_IP {
            get {
                return this.v_Machine_IPField;
            }
            set {
                if ((object.ReferenceEquals(this.v_Machine_IPField, value) != true)) {
                    this.v_Machine_IPField = value;
                    this.RaisePropertyChanged("v_Machine_IP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vmachine", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Vmachine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.Equipment[] equipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.Equipment1[] equipmentList1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineIp1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachine_StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.Equipment[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentListField, value) != true)) {
                    this.equipmentListField = value;
                    this.RaisePropertyChanged("equipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.Equipment1[] equipmentList1 {
            get {
                return this.equipmentList1Field;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentList1Field, value) != true)) {
                    this.equipmentList1Field = value;
                    this.RaisePropertyChanged("equipmentList1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineId {
            get {
                return this.vMachineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineIdField, value) != true)) {
                    this.vMachineIdField = value;
                    this.RaisePropertyChanged("vMachineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineIp {
            get {
                return this.vMachineIpField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineIpField, value) != true)) {
                    this.vMachineIpField = value;
                    this.RaisePropertyChanged("vMachineIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineIp1 {
            get {
                return this.vMachineIp1Field;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineIp1Field, value) != true)) {
                    this.vMachineIp1Field = value;
                    this.RaisePropertyChanged("vMachineIp1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachine_State {
            get {
                return this.vMachine_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachine_StateField, value) != true)) {
                    this.vMachine_StateField = value;
                    this.RaisePropertyChanged("vMachine_State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Equipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPv4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPv4SubnetMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equimentControllerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenPictureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] equipmentPictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPv4 {
            get {
                return this.IPv4Field;
            }
            set {
                if ((object.ReferenceEquals(this.IPv4Field, value) != true)) {
                    this.IPv4Field = value;
                    this.RaisePropertyChanged("IPv4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPv4SubnetMask {
            get {
                return this.IPv4SubnetMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.IPv4SubnetMaskField, value) != true)) {
                    this.IPv4SubnetMaskField = value;
                    this.RaisePropertyChanged("IPv4SubnetMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equimentControllerType {
            get {
                return this.equimentControllerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.equimentControllerTypeField, value) != true)) {
                    this.equimentControllerTypeField = value;
                    this.RaisePropertyChanged("equimentControllerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenNo {
            get {
                return this.equipmenNoField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenNoField, value) != true)) {
                    this.equipmenNoField = value;
                    this.RaisePropertyChanged("equipmenNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenPictureNameField, value) != true)) {
                    this.equipmenPictureNameField = value;
                    this.RaisePropertyChanged("equipmenPictureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenTypeField, value) != true)) {
                    this.equipmenTypeField = value;
                    this.RaisePropertyChanged("equipmenType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentIp {
            get {
                return this.equipmentIpField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentIpField, value) != true)) {
                    this.equipmentIpField = value;
                    this.RaisePropertyChanged("equipmentIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentLocation {
            get {
                return this.equipmentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentLocationField, value) != true)) {
                    this.equipmentLocationField = value;
                    this.RaisePropertyChanged("equipmentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentPictureField, value) != true)) {
                    this.equipmentPictureField = value;
                    this.RaisePropertyChanged("equipmentPicture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment1", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Equipment1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cnc_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPv4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPv4SubnetMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Service_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equimentControllerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenPictureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] equipmentPictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cnc_State {
            get {
                return this.Cnc_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.Cnc_StateField, value) != true)) {
                    this.Cnc_StateField = value;
                    this.RaisePropertyChanged("Cnc_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPv4 {
            get {
                return this.IPv4Field;
            }
            set {
                if ((object.ReferenceEquals(this.IPv4Field, value) != true)) {
                    this.IPv4Field = value;
                    this.RaisePropertyChanged("IPv4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPv4SubnetMask {
            get {
                return this.IPv4SubnetMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.IPv4SubnetMaskField, value) != true)) {
                    this.IPv4SubnetMaskField = value;
                    this.RaisePropertyChanged("IPv4SubnetMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service_Status {
            get {
                return this.Service_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.Service_StatusField, value) != true)) {
                    this.Service_StatusField = value;
                    this.RaisePropertyChanged("Service_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equimentControllerType {
            get {
                return this.equimentControllerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.equimentControllerTypeField, value) != true)) {
                    this.equimentControllerTypeField = value;
                    this.RaisePropertyChanged("equimentControllerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenNo {
            get {
                return this.equipmenNoField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenNoField, value) != true)) {
                    this.equipmenNoField = value;
                    this.RaisePropertyChanged("equipmenNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenPictureNameField, value) != true)) {
                    this.equipmenPictureNameField = value;
                    this.RaisePropertyChanged("equipmenPictureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenTypeField, value) != true)) {
                    this.equipmenTypeField = value;
                    this.RaisePropertyChanged("equipmenType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentIp {
            get {
                return this.equipmentIpField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentIpField, value) != true)) {
                    this.equipmentIpField = value;
                    this.RaisePropertyChanged("equipmentIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentLocation {
            get {
                return this.equipmentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentLocationField, value) != true)) {
                    this.equipmentLocationField = value;
                    this.RaisePropertyChanged("equipmentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentPictureField, value) != true)) {
                    this.equipmentPictureField = value;
                    this.RaisePropertyChanged("equipmentPicture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class EquipmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenPictureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmenTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] equipmentPictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenPictureName {
            get {
                return this.equipmenPictureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenPictureNameField, value) != true)) {
                    this.equipmenPictureNameField = value;
                    this.RaisePropertyChanged("equipmenPictureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmenType {
            get {
                return this.equipmenTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmenTypeField, value) != true)) {
                    this.equipmenTypeField = value;
                    this.RaisePropertyChanged("equipmenType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] equipmentPicture {
            get {
                return this.equipmentPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentPictureField, value) != true)) {
                    this.equipmentPictureField = value;
                    this.RaisePropertyChanged("equipmentPicture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelFull", Namespace="http://schemas.datacontract.org/2004/07/ServiceBroker")]
    [System.SerializableAttribute()]
    public partial class ModelFull : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] equipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.Model modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] vMachineListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentListField, value) != true)) {
                    this.equipmentListField = value;
                    this.RaisePropertyChanged("equipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.Model model {
            get {
                return this.modelField;
            }
            set {
                if ((object.ReferenceEquals(this.modelField, value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] vMachineList {
            get {
                return this.vMachineListField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineListField, value) != true)) {
                    this.vMachineListField = value;
                    this.RaisePropertyChanged("vMachineList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Model", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Model : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMPANYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string G_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IndicatorSpec_LCLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IndicatorSpec_LSLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IndicatorSpec_UCLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IndicatorSpec_USLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MeasureSpec_LCLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MeasureSpec_LSLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MeasureSpec_TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MeasureSpec_UCLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MeasureSpec_USLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetrologyItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Model_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostYType_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostYType_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cncTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cnc_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dataEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dataStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] indicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime indicatorEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] indicatorIndexListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime indicatorStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] matSizeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime modelCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelCreateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ModelManagementServices.ServiceBrokerServices.ModelItem[] modelItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] modelNameListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double modelSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] pointIndexListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string positionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string producttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string seat_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vMachineNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANY {
            get {
                return this.COMPANYField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYField, value) != true)) {
                    this.COMPANYField = value;
                    this.RaisePropertyChanged("COMPANY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeID {
            get {
                return this.CodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeIDField, value) != true)) {
                    this.CodeIDField = value;
                    this.RaisePropertyChanged("CodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string G_Code {
            get {
                return this.G_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.G_CodeField, value) != true)) {
                    this.G_CodeField = value;
                    this.RaisePropertyChanged("G_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IndicatorSpec_LCL {
            get {
                return this.IndicatorSpec_LCLField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorSpec_LCLField, value) != true)) {
                    this.IndicatorSpec_LCLField = value;
                    this.RaisePropertyChanged("IndicatorSpec_LCL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IndicatorSpec_LSL {
            get {
                return this.IndicatorSpec_LSLField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorSpec_LSLField, value) != true)) {
                    this.IndicatorSpec_LSLField = value;
                    this.RaisePropertyChanged("IndicatorSpec_LSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IndicatorSpec_UCL {
            get {
                return this.IndicatorSpec_UCLField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorSpec_UCLField, value) != true)) {
                    this.IndicatorSpec_UCLField = value;
                    this.RaisePropertyChanged("IndicatorSpec_UCL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IndicatorSpec_USL {
            get {
                return this.IndicatorSpec_USLField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorSpec_USLField, value) != true)) {
                    this.IndicatorSpec_USLField = value;
                    this.RaisePropertyChanged("IndicatorSpec_USL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MeasureSpec_LCL {
            get {
                return this.MeasureSpec_LCLField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureSpec_LCLField, value) != true)) {
                    this.MeasureSpec_LCLField = value;
                    this.RaisePropertyChanged("MeasureSpec_LCL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MeasureSpec_LSL {
            get {
                return this.MeasureSpec_LSLField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureSpec_LSLField, value) != true)) {
                    this.MeasureSpec_LSLField = value;
                    this.RaisePropertyChanged("MeasureSpec_LSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MeasureSpec_Target {
            get {
                return this.MeasureSpec_TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureSpec_TargetField, value) != true)) {
                    this.MeasureSpec_TargetField = value;
                    this.RaisePropertyChanged("MeasureSpec_Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MeasureSpec_UCL {
            get {
                return this.MeasureSpec_UCLField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureSpec_UCLField, value) != true)) {
                    this.MeasureSpec_UCLField = value;
                    this.RaisePropertyChanged("MeasureSpec_UCL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MeasureSpec_USL {
            get {
                return this.MeasureSpec_USLField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureSpec_USLField, value) != true)) {
                    this.MeasureSpec_USLField = value;
                    this.RaisePropertyChanged("MeasureSpec_USL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetrologyItem {
            get {
                return this.MetrologyItemField;
            }
            set {
                if ((object.ReferenceEquals(this.MetrologyItemField, value) != true)) {
                    this.MetrologyItemField = value;
                    this.RaisePropertyChanged("MetrologyItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model_ID {
            get {
                return this.Model_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Model_IDField, value) != true)) {
                    this.Model_IDField = value;
                    this.RaisePropertyChanged("Model_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PK {
            get {
                return this.PKField;
            }
            set {
                if ((object.ReferenceEquals(this.PKField, value) != true)) {
                    this.PKField = value;
                    this.RaisePropertyChanged("PK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostYType_1 {
            get {
                return this.PostYType_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PostYType_1Field, value) != true)) {
                    this.PostYType_1Field = value;
                    this.RaisePropertyChanged("PostYType_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostYType_2 {
            get {
                return this.PostYType_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PostYType_2Field, value) != true)) {
                    this.PostYType_2Field = value;
                    this.RaisePropertyChanged("PostYType_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cncType {
            get {
                return this.cncTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.cncTypeField, value) != true)) {
                    this.cncTypeField = value;
                    this.RaisePropertyChanged("cncType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cnc_number {
            get {
                return this.cnc_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.cnc_numberField, value) != true)) {
                    this.cnc_numberField = value;
                    this.RaisePropertyChanged("cnc_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createUser {
            get {
                return this.createUserField;
            }
            set {
                if ((object.ReferenceEquals(this.createUserField, value) != true)) {
                    this.createUserField = value;
                    this.RaisePropertyChanged("createUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dataEndTime {
            get {
                return this.dataEndTimeField;
            }
            set {
                if ((this.dataEndTimeField.Equals(value) != true)) {
                    this.dataEndTimeField = value;
                    this.RaisePropertyChanged("dataEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dataStartTime {
            get {
                return this.dataStartTimeField;
            }
            set {
                if ((this.dataStartTimeField.Equals(value) != true)) {
                    this.dataStartTimeField = value;
                    this.RaisePropertyChanged("dataStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] indicator {
            get {
                return this.indicatorField;
            }
            set {
                if ((object.ReferenceEquals(this.indicatorField, value) != true)) {
                    this.indicatorField = value;
                    this.RaisePropertyChanged("indicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime indicatorEndDate {
            get {
                return this.indicatorEndDateField;
            }
            set {
                if ((this.indicatorEndDateField.Equals(value) != true)) {
                    this.indicatorEndDateField = value;
                    this.RaisePropertyChanged("indicatorEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] indicatorIndexList {
            get {
                return this.indicatorIndexListField;
            }
            set {
                if ((object.ReferenceEquals(this.indicatorIndexListField, value) != true)) {
                    this.indicatorIndexListField = value;
                    this.RaisePropertyChanged("indicatorIndexList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime indicatorStartDate {
            get {
                return this.indicatorStartDateField;
            }
            set {
                if ((this.indicatorStartDateField.Equals(value) != true)) {
                    this.indicatorStartDateField = value;
                    this.RaisePropertyChanged("indicatorStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] matSizeList {
            get {
                return this.matSizeListField;
            }
            set {
                if ((object.ReferenceEquals(this.matSizeListField, value) != true)) {
                    this.matSizeListField = value;
                    this.RaisePropertyChanged("matSizeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime modelCreateDate {
            get {
                return this.modelCreateDateField;
            }
            set {
                if ((this.modelCreateDateField.Equals(value) != true)) {
                    this.modelCreateDateField = value;
                    this.RaisePropertyChanged("modelCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelCreateUser {
            get {
                return this.modelCreateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.modelCreateUserField, value) != true)) {
                    this.modelCreateUserField = value;
                    this.RaisePropertyChanged("modelCreateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelID {
            get {
                return this.modelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.modelIDField, value) != true)) {
                    this.modelIDField = value;
                    this.RaisePropertyChanged("modelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelManagementServices.ServiceBrokerServices.ModelItem[] modelItem {
            get {
                return this.modelItemField;
            }
            set {
                if ((object.ReferenceEquals(this.modelItemField, value) != true)) {
                    this.modelItemField = value;
                    this.RaisePropertyChanged("modelItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] modelNameList {
            get {
                return this.modelNameListField;
            }
            set {
                if ((object.ReferenceEquals(this.modelNameListField, value) != true)) {
                    this.modelNameListField = value;
                    this.RaisePropertyChanged("modelNameList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double modelSize {
            get {
                return this.modelSizeField;
            }
            set {
                if ((this.modelSizeField.Equals(value) != true)) {
                    this.modelSizeField = value;
                    this.RaisePropertyChanged("modelSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] pointIndexList {
            get {
                return this.pointIndexListField;
            }
            set {
                if ((object.ReferenceEquals(this.pointIndexListField, value) != true)) {
                    this.pointIndexListField = value;
                    this.RaisePropertyChanged("pointIndexList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string position {
            get {
                return this.positionField;
            }
            set {
                if ((object.ReferenceEquals(this.positionField, value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string producttype {
            get {
                return this.producttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.producttypeField, value) != true)) {
                    this.producttypeField = value;
                    this.RaisePropertyChanged("producttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string seat_number {
            get {
                return this.seat_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.seat_numberField, value) != true)) {
                    this.seat_numberField = value;
                    this.RaisePropertyChanged("seat_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineID {
            get {
                return this.vMachineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineIDField, value) != true)) {
                    this.vMachineIDField = value;
                    this.RaisePropertyChanged("vMachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vMachineName {
            get {
                return this.vMachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vMachineNameField, value) != true)) {
                    this.vMachineNameField = value;
                    this.RaisePropertyChanged("vMachineName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ModelItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] modelBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] modelBytes {
            get {
                return this.modelBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.modelBytesField, value) != true)) {
                    this.modelBytesField = value;
                    this.RaisePropertyChanged("modelBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelName {
            get {
                return this.modelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.modelNameField, value) != true)) {
                    this.modelNameField = value;
                    this.RaisePropertyChanged("modelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBrokerServices.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductBasicInfo", ReplyAction="http://tempuri.org/IService1/getProductBasicInfoResponse")]
        ModelManagementServices.ServiceBrokerServices.ProductBasicInfo getProductBasicInfo(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductionHistoInfo", ReplyAction="http://tempuri.org/IService1/getProductionHistoInfoResponse")]
        string[][] getProductionHistoInfo(string Ptype, string Pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDCP", ReplyAction="http://tempuri.org/IService1/getDCPResponse")]
        bool getDCP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEquipmentInformationList1", ReplyAction="http://tempuri.org/IService1/getEquipmentInformationList1Response")]
        string getEquipmentInformationList1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductInfo1", ReplyAction="http://tempuri.org/IService1/getProductInfo1Response")]
        string getProductInfo1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ServiceBroker_sendDataCollectionReport_Return", ReplyAction="http://tempuri.org/IService1/ServiceBroker_sendDataCollectionReport_ReturnRespons" +
            "e")]
        bool ServiceBroker_sendDataCollectionReport_Return(string inAnswer, string inDCP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Model_From_MM", ReplyAction="http://tempuri.org/IService1/Get_Model_From_MMResponse")]
        bool Get_Model_From_MM(ModelManagementServices.ServiceBrokerServices.Model_GetContent[] Model_Info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_vMachineIP", ReplyAction="http://tempuri.org/IService1/get_vMachineIPResponse")]
        string[] get_vMachineIP(string vMachine_ID, int ModelInfo_Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEquipmentInformationList", ReplyAction="http://tempuri.org/IService1/getEquipmentInformationListResponse")]
        ModelManagementServices.ServiceBrokerServices.EquipmentInformation[] getEquipmentInformationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompanyInfo", ReplyAction="http://tempuri.org/IService1/GetCompanyInfoResponse")]
        string GetCompanyInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetServiceBrokerInfo", ReplyAction="http://tempuri.org/IService1/GetServiceBrokerInfoResponse")]
        string GetServiceBrokerInfo(string XMLFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetvMachineCNCInfo", ReplyAction="http://tempuri.org/IService1/GetvMachineCNCInfoResponse")]
        string GetvMachineCNCInfo(string XMLFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetvMachineCNCInfo_Ontology", ReplyAction="http://tempuri.org/IService1/GetvMachineCNCInfo_OntologyResponse")]
        string GetvMachineCNCInfo_Ontology();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DownloadNCFile", ReplyAction="http://tempuri.org/IService1/DownloadNCFileResponse")]
        bool DownloadNCFile(string XMLFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_vMachineInfo_Ontology", ReplyAction="http://tempuri.org/IService1/Get_vMachineInfo_OntologyResponse")]
        string Get_vMachineInfo_Ontology();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_CNCInfo_Ontology", ReplyAction="http://tempuri.org/IService1/Get_CNCInfo_OntologyResponse")]
        string Get_CNCInfo_Ontology(string vMachine_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/kinfe_Info", ReplyAction="http://tempuri.org/IService1/kinfe_InfoResponse")]
        string[][] kinfe_Info(string XMLFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVmachineList", ReplyAction="http://tempuri.org/IService1/getVmachineListResponse")]
        ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerVmachine", ReplyAction="http://tempuri.org/IService1/registerVmachineResponse")]
        string registerVmachine(string cem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sendAlarm", ReplyAction="http://tempuri.org/IService1/sendAlarmResponse")]
        bool sendAlarm(string vMachineName, string eventDescription, int errorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEquipmentList", ReplyAction="http://tempuri.org/IService1/getEquipmentListResponse")]
        ModelManagementServices.ServiceBrokerServices.EquipmentType[] getEquipmentList(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/fanOutModel", ReplyAction="http://tempuri.org/IService1/fanOutModelResponse")]
        string fanOutModel(ModelManagementServices.ServiceBrokerServices.ModelFull modelfull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVmachineInformation", ReplyAction="http://tempuri.org/IService1/getVmachineInformationResponse")]
        void getVmachineInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRunningModelInformation", ReplyAction="http://tempuri.org/IService1/getRunningModelInformationResponse")]
        void getRunningModelInformation(string vMachineId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVmachineInformationList", ReplyAction="http://tempuri.org/IService1/getVmachineInformationListResponse")]
        ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineInformationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/uploadSTDB", ReplyAction="http://tempuri.org/IService1/uploadSTDBResponse")]
        System.Data.DataSet uploadSTDB(string vMachineID, string equipmentID, string sensor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/uploadDefOfSTDB", ReplyAction="http://tempuri.org/IService1/uploadDefOfSTDBResponse")]
        bool uploadDefOfSTDB(System.Data.DataSet ds, string vMachineID, string equipmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateVMResult", ReplyAction="http://tempuri.org/IService1/updateVMResultResponse")]
        string updateVMResult(System.Data.DataSet ds, string vMachineID, string equipmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEquipmentListByVmachine", ReplyAction="http://tempuri.org/IService1/getEquipmentListByVmachineResponse")]
        string[] getEquipmentListByVmachine(string vMachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert_vNachineState", ReplyAction="http://tempuri.org/IService1/Insert_vNachineStateResponse")]
        string Insert_vNachineState(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_vNachineState", ReplyAction="http://tempuri.org/IService1/Update_vNachineStateResponse")]
        string Update_vNachineState(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_vMachibne", ReplyAction="http://tempuri.org/IService1/Delete_vMachibneResponse")]
        string Delete_vMachibne(string Cnc_Num, string vMachine_Name, bool flag_vMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getVmachineList1", ReplyAction="http://tempuri.org/IService1/getVmachineList1Response")]
        ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineList1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/vMachine_RegInfo_Check", ReplyAction="http://tempuri.org/IService1/vMachine_RegInfo_CheckResponse")]
        string vMachine_RegInfo_Check(string vMachine_Name, string vMachine_IP, string vMachine_State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Cnc_State_Check", ReplyAction="http://tempuri.org/IService1/Cnc_State_CheckResponse")]
        string Cnc_State_Check(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        string test(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/testv", ReplyAction="http://tempuri.org/IService1/testvResponse")]
        string testv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/testm", ReplyAction="http://tempuri.org/IService1/testmResponse")]
        void testm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerCNCInfo", ReplyAction="http://tempuri.org/IService1/registerCNCInfoResponse")]
        bool registerCNCInfo(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registervMachineInfo", ReplyAction="http://tempuri.org/IService1/registervMachineInfoResponse")]
        bool registervMachineInfo(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/modify_cncstate", ReplyAction="http://tempuri.org/IService1/modify_cncstateResponse")]
        bool modify_cncstate(string v_machine_ID, string CNC_ID, string CNCState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/modify_vMachinestate", ReplyAction="http://tempuri.org/IService1/modify_vMachinestateResponse")]
        bool modify_vMachinestate(string v_machine_ID, string v_machine_IP, string State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductInfo", ReplyAction="http://tempuri.org/IService1/getProductInfoResponse")]
        string[][] getProductInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerProductionHistory", ReplyAction="http://tempuri.org/IService1/registerProductionHistoryResponse")]
        bool registerProductionHistory(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerProductInfo", ReplyAction="http://tempuri.org/IService1/registerProductInfoResponse")]
        string registerProductInfo(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ModelManagementServices.ServiceBrokerServices.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ModelManagementServices.ServiceBrokerServices.IService1>, ModelManagementServices.ServiceBrokerServices.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ModelManagementServices.ServiceBrokerServices.ProductBasicInfo getProductBasicInfo(string Product_Type, string Product_Name, string CNC_ID, string vMachine_ID) {
            return base.Channel.getProductBasicInfo(Product_Type, Product_Name, CNC_ID, vMachine_ID);
        }
        
        public string[][] getProductionHistoInfo(string Ptype, string Pname) {
            return base.Channel.getProductionHistoInfo(Ptype, Pname);
        }
        
        public bool getDCP() {
            return base.Channel.getDCP();
        }
        
        public string getEquipmentInformationList1() {
            return base.Channel.getEquipmentInformationList1();
        }
        
        public string getProductInfo1() {
            return base.Channel.getProductInfo1();
        }
        
        public bool ServiceBroker_sendDataCollectionReport_Return(string inAnswer, string inDCP_ID) {
            return base.Channel.ServiceBroker_sendDataCollectionReport_Return(inAnswer, inDCP_ID);
        }
        
        public bool Get_Model_From_MM(ModelManagementServices.ServiceBrokerServices.Model_GetContent[] Model_Info) {
            return base.Channel.Get_Model_From_MM(Model_Info);
        }
        
        public string[] get_vMachineIP(string vMachine_ID, int ModelInfo_Count) {
            return base.Channel.get_vMachineIP(vMachine_ID, ModelInfo_Count);
        }
        
        public ModelManagementServices.ServiceBrokerServices.EquipmentInformation[] getEquipmentInformationList() {
            return base.Channel.getEquipmentInformationList();
        }
        
        public string GetCompanyInfo() {
            return base.Channel.GetCompanyInfo();
        }
        
        public string GetServiceBrokerInfo(string XMLFile) {
            return base.Channel.GetServiceBrokerInfo(XMLFile);
        }
        
        public string GetvMachineCNCInfo(string XMLFile) {
            return base.Channel.GetvMachineCNCInfo(XMLFile);
        }
        
        public string GetvMachineCNCInfo_Ontology() {
            return base.Channel.GetvMachineCNCInfo_Ontology();
        }
        
        public bool DownloadNCFile(string XMLFile) {
            return base.Channel.DownloadNCFile(XMLFile);
        }
        
        public string Get_vMachineInfo_Ontology() {
            return base.Channel.Get_vMachineInfo_Ontology();
        }
        
        public string Get_CNCInfo_Ontology(string vMachine_ID) {
            return base.Channel.Get_CNCInfo_Ontology(vMachine_ID);
        }
        
        public string[][] kinfe_Info(string XMLFile) {
            return base.Channel.kinfe_Info(XMLFile);
        }
        
        public ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineList() {
            return base.Channel.getVmachineList();
        }
        
        public string registerVmachine(string cem) {
            return base.Channel.registerVmachine(cem);
        }
        
        public bool sendAlarm(string vMachineName, string eventDescription, int errorCode) {
            return base.Channel.sendAlarm(vMachineName, eventDescription, errorCode);
        }
        
        public ModelManagementServices.ServiceBrokerServices.EquipmentType[] getEquipmentList(string userName) {
            return base.Channel.getEquipmentList(userName);
        }
        
        public string fanOutModel(ModelManagementServices.ServiceBrokerServices.ModelFull modelfull) {
            return base.Channel.fanOutModel(modelfull);
        }
        
        public void getVmachineInformation() {
            base.Channel.getVmachineInformation();
        }
        
        public void getRunningModelInformation(string vMachineId, string userName) {
            base.Channel.getRunningModelInformation(vMachineId, userName);
        }
        
        public ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineInformationList() {
            return base.Channel.getVmachineInformationList();
        }
        
        public System.Data.DataSet uploadSTDB(string vMachineID, string equipmentID, string sensor) {
            return base.Channel.uploadSTDB(vMachineID, equipmentID, sensor);
        }
        
        public bool uploadDefOfSTDB(System.Data.DataSet ds, string vMachineID, string equipmentID) {
            return base.Channel.uploadDefOfSTDB(ds, vMachineID, equipmentID);
        }
        
        public string updateVMResult(System.Data.DataSet ds, string vMachineID, string equipmentID) {
            return base.Channel.updateVMResult(ds, vMachineID, equipmentID);
        }
        
        public string[] getEquipmentListByVmachine(string vMachineName) {
            return base.Channel.getEquipmentListByVmachine(vMachineName);
        }
        
        public string Insert_vNachineState(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            return base.Channel.Insert_vNachineState(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status);
        }
        
        public string Update_vNachineState(string ovMachine_Name, string oCnc_Num, string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            return base.Channel.Update_vNachineState(ovMachine_Name, oCnc_Num, vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status);
        }
        
        public string Delete_vMachibne(string Cnc_Num, string vMachine_Name, bool flag_vMachine) {
            return base.Channel.Delete_vMachibne(Cnc_Num, vMachine_Name, flag_vMachine);
        }
        
        public ModelManagementServices.ServiceBrokerServices.Vmachine[] getVmachineList1() {
            return base.Channel.getVmachineList1();
        }
        
        public string vMachine_RegInfo_Check(string vMachine_Name, string vMachine_IP, string vMachine_State) {
            return base.Channel.vMachine_RegInfo_Check(vMachine_Name, vMachine_IP, vMachine_State);
        }
        
        public string Cnc_State_Check(string vMachine_Name, string vMachine_IP, string vMachine_State, string Cnc_Num, string Cnc_State, string Cnc_IP, string Cnc_Type, string Cnc_ControllerType, string Service_Status) {
            return base.Channel.Cnc_State_Check(vMachine_Name, vMachine_IP, vMachine_State, Cnc_Num, Cnc_State, Cnc_IP, Cnc_Type, Cnc_ControllerType, Service_Status);
        }
        
        public string test(string s) {
            return base.Channel.test(s);
        }
        
        public string testv() {
            return base.Channel.testv();
        }
        
        public void testm() {
            base.Channel.testm();
        }
        
        public bool registerCNCInfo(string v_machine_ID, string CNC_ID, string CNCIP, string CNC_Type, string CNCState) {
            return base.Channel.registerCNCInfo(v_machine_ID, CNC_ID, CNCIP, CNC_Type, CNCState);
        }
        
        public bool registervMachineInfo(string v_machine_ID, string v_MachineIP, string[] CNCID, string vMachineState) {
            return base.Channel.registervMachineInfo(v_machine_ID, v_MachineIP, CNCID, vMachineState);
        }
        
        public bool modify_cncstate(string v_machine_ID, string CNC_ID, string CNCState) {
            return base.Channel.modify_cncstate(v_machine_ID, CNC_ID, CNCState);
        }
        
        public bool modify_vMachinestate(string v_machine_ID, string v_machine_IP, string State) {
            return base.Channel.modify_vMachinestate(v_machine_ID, v_machine_IP, State);
        }
        
        public string[][] getProductInfo() {
            return base.Channel.getProductInfo();
        }
        
        public bool registerProductionHistory(string ProductName, string ProductType, string WorkPieceID, string v_MachineID, string CNC_ID, string CNC_Type, string WorkPieceState, System.DateTime Process_StartTime, System.DateTime Process_EndTime) {
            return base.Channel.registerProductionHistory(ProductName, ProductType, WorkPieceID, v_MachineID, CNC_ID, CNC_Type, WorkPieceState, Process_StartTime, Process_EndTime);
        }
        
        public string registerProductInfo(string CNC_ID, string v_Machine_ID, string CLFile, string ProductType, string inProductTypeSub_ID, string inMetrology_ID, string inBlock_ID) {
            return base.Channel.registerProductInfo(CNC_ID, v_Machine_ID, CLFile, ProductType, inProductTypeSub_ID, inMetrology_ID, inBlock_ID);
        }
    }
}
